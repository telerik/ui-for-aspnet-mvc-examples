@model EmployeeViewModel

<div class="k-edit-label">@(Html.LabelFor(e => e.FirstName))</div>
<div data-container-for="title" class="k-edit-field">@(Html.EditorFor(e => e.FirstName))</div>

<div class="k-edit-label">@(Html.LabelFor(e => e.LastName))</div>
<div data-container-for="title" class="k-edit-field">@(Html.EditorFor(e => e.LastName))</div>

<div class="k-edit-label">@(Html.LabelFor(e => e.Title))</div>
<div data-container-for="title" class="k-edit-field">@(Html.EditorFor(e => e.Title))</div>

<div class="k-edit-label">@(Html.LabelFor(e => e.Country))</div>
<div data-container-for="title" class="k-edit-field">@(Html.EditorFor(e => e.Country))</div>

<div class="k-edit-label">@(Html.LabelFor(e => e.City))</div>
<div data-container-for="title" class="k-edit-field">@(Html.EditorFor(e => e.City))</div>


<div style="clear:both"></div>
 @(Html.Kendo().Grid<OrderViewModel>()
        .Name("Orders")
        .Columns(columns =>
        {
            columns.Bound(o => o.OrderID).Width(101);
            columns.Bound(o => o.ShipAddress).Width(200);
            columns.Bound(o => o.ShippedDate).Format("{0:d}");
            columns.Command(command =>
            {
                command.Destroy();
            });
        })
        .ToolBar(tools => {
            tools.Create().HtmlAttributes(new { style = "${data.isNew() ? 'visibility: hidden' : ''}" });
            tools.Save().HtmlAttributes(new { style = "${data.isNew() ? 'visibility: hidden' : ''}" });
        })
        .Editable(e => e.Mode(GridEditMode.InCell))
        .Pageable().Sortable().Filterable().Scrollable()
        .DataSource(source => source.Ajax()
            .PageSize(5)
            .Batch(true)
            .ServerOperation(false)
            .Model(model =>
                    {
                        model.Id(o => o.OrderID);
                        model.Field(o => o.OrderID).Editable(false);
                    })
            .Read(read => read.Action("Read_Orders", "Orders", new { id = "${data.EmployeeID}" }))
            .Update(update => update.Action("Update_Order", "Orders"))
            .Create(create => create.Action("Create_Order", "Orders"))
            .Destroy(destroy => destroy.Action("Destroy_Order", "Orders")))
        .ToClientTemplate()
    )