@(Html.Kendo().Grid<ForeignKeyColumnDemo.Models.Order>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.OrderID);
        //Template column
        columns.Template(t => { }).ClientTemplate(
            Html.Kendo().DropDownList()
                //Place model Id here
                .Name("EmployeeId_#=OrderID#")
                .DataTextField("Name")
                .DataValueField("EmployeeId")
                //Model property that contains the DropDownList value
                .Value("#=EmployeeId#")
                .Events(e => e.Change("onChange"))
                .BindTo((System.Collections.IEnumerable)ViewData["employees"])
                .ToClientTemplate().ToHtmlString()
            );
        columns.Bound(p => p.OrderDescription);
        columns.Bound(p => p.OrderDate);
    })
    .ToolBar(toolBar =>
    {
        toolBar.Create();
        toolBar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable()
    //Use the DataBound event to execute the DropDownList scripts
    .Events(e => e.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Batch(false)
        .Model(model =>
        {
            model.Id(p => p.OrderID);
            model.Field(p => p.OrderID).Editable(false);
        })
        .Create(create => create.Action("ForeignKeyColumn_Create", "Home"))
        .Destroy(destroy => destroy.Action("ForeignKeyColumn_Delete", "Home"))
        .Read(read => read.Action("ForeignKeyColumn_Read", "Home"))
        .Update(update => update.Action("ForeignKeyColumn_Update", "Home"))
    )
)

<script>
    function onChange(e) {
        gridElement = e.sender.element.closest(".k-grid");
        grid = gridElement.data("kendoGrid");
        currentDataItem = grid.dataItem(e.sender.element.closest("tr"));
        //Model property that contains the DropDownList value
        currentDataItem.set("EmployeeId", e.sender.value());
        grid.dataSource.sync();
    }

    //Intialize all dropdowns on DataBound event
    function onDataBound() {
        this.table.find("script").appendTo("body");
    }
</script>
