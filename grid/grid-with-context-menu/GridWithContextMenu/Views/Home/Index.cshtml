@{
    var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
}

@(Html.Kendo().Grid<GridWithContextMenu.Models.Order>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.OrderID);
        columns.ForeignKey(p => p.EmployeeID, (System.Collections.IEnumerable) ViewData["employees"], "EmployeeID", "Name");
        columns.Bound(p => p.OrderDescription);
        columns.Bound(p => p.OrderDate).Format("{0:d}");
        columns.Bound(p => p.OrderTotal).Format("{0:c}");
        columns.Bound(p => p.IsCompleted);
        columns.Command(c =>
        {
            c.Edit();
            c.Destroy();
        });
    })
    .ToolBar(toolBar => toolBar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.OrderID);
            model.Field(p => p.OrderID).Editable(false);
        })
        .Events(e => e.RequestEnd("onRequestEnd"))
        .Create(create => create.Action("Create", "Home").Data("sendCulture"))
        .Destroy(destroy => destroy.Action("Delete", "Home").Data("sendCulture"))
        .Read(read => read.Action("Read", "Home").Data("sendCulture"))
        .Update(update => update.Action("Update", "Home").Data("sendCulture"))
    )
)


@(Html.Kendo().ContextMenu()
    .Name("contextMenu")
    .Target("#grid table")
    .Filter("tr")
    .Events(e => e.Select("onSelect"))
    .Items(items =>
    {
        items.Add()
            .Text("Delete").HtmlAttributes(new { @class = "k-grid-delete" });

        items.Add()
            .Text("Edit").HtmlAttributes(new { @class = "k-grid-edit" });
    })
)
<script>

    function onSelect(e) {
        var row = $(e.target);
        var grid = $("#grid").data("kendoGrid");
        var item = $(e.item);
        if (item.hasClass("k-grid-delete")) {
            grid.removeRow(row);
        } else {
            grid.editRow(row);
        }

    }
    //convert dates to UTC
    function onRequestEnd(e) {
        if (e.type == "read") {
            var offsetMiliseconds = new Date().getTimezoneOffset() * 60000;
            var orders = e.response.Data;
            for (var i = 0; i < orders.length; i++) {
                orders[i].OrderDate = orders[i].OrderDate.replace(/\d+/,
                    function (n) { return parseInt(n) + offsetMiliseconds }
                 );
            }
        }
    }

    //send current culture with all ajax requests
    function sendCulture() {
        return { culture: "@culture" }
    }
</script>
