{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals","1","10","100","2","20","200","3","30","300","4","40","400","5","50","500","6","60","600","7","70","700","8","80","800","9","90","900","1000","values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","mergeSort","a","cmp","merge","b","ai","bi","slice","left","right","Math","floor","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","loadFonts","fonts","callback","promises","document","font","load","e","logToConsole","Promise","all","then","doc","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","geometryChange","suspend","resume","_observerField","field","mixins","returnSelf","DefaultAggregates","_defaults","intersection","b1","b2","ua","ua_t","y","u_b","Point2D","applySeriesDefaults","themeOptions","seriesType","baseOptions","series","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","type","data","tooltip","bar","column","rangeColumn","line","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","applySeriesColors","currentSeries","seriesColor","defaults","colors","seriesColors","resolveAxisAliases","alias","each","CATEGORY","VALUE","X","Y","applyAxisDefaults","themeAxisDefaults","axisDefaults","axisName","axes","concat","axisOptions","axisColor","labels","title","categoriesCount","seriesCount","categories","getField","row","getter","getDateField","toDate","STRING","parseDate","isArray","toTime","addDuration","date","unit","weekStartDay","hours","getHours","YEARS","getFullYear","adjustDST","MONTHS","getMonth","WEEKS","startOfWeek","DAYS","getDate","HOURS","setUTCMinutes","addTicks","TIME_PER_HOUR","MINUTES","TIME_PER_MINUTE","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","MILLISECONDS","getMilliseconds","setMilliseconds","day","getDay","daysToSubtract","TIME_PER_DAY","floorDate","ceilDate","dateDiff","absoluteDateDiff","diff","offsetDiff","getTimezoneOffset","ticks","duration","TIME_PER_UNIT","dateIndex","start","baseUnit","baseUnitStep","startDate","timeIndex","singleItemOrArray","axisGroupBox","axisBox","contentBox","wrap","clone","Box2D","equalsIgnoreCase","dateEquals","appendIfNotNull","lteDateIndex","sortedDates","currentDate","low","high","countNumbers","num","count","areNumbers","axisRanges","axis","ranges","range","evalOptions","context","state","dryRun","property","propValue","excluded","depth","needsEval","MAX_EXPAND_DEPTH","hasOwnProperty","isFn","OBJECT","groupSeries","nameTemplate","groupIx","seriesClone","legacyTemplate","groupNameTemplate","dataLength","visibleInLegend","_slotCount","_groupIx","_groupValue","group","filterSeriesByType","types","indexOf","item","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","isDateAxis","sampleCategory","dateCategory","DATE","transpose","rows","rowIx","colIx","colCount","rowCount","ensureTree","fieldName","target","path","setter","seriesTotal","pointData","sum","SeriesBinder","bindPoint","valueFields","parseFloat","fields","visible","abs","hasGradientOverlay","overlay","gradient","anyHasZIndex","elements","zIndex","preventDefault","_defaultPrevented","pointByCategoryName","points","category","hasValue","toChartAxisRanges","axisRange","acceptKey","mouseKey","accept","ctrlKey","shiftKey","altKey","preloadFonts","fetchFonts","MAX_DEPTH","keys","forEach","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","isPlainObject","paneAnchor","pane","anchor","PlotAreaFactory","BarLabel","LegendItem","LegendLayout","Legend","CategoryAxis","DateCategoryAxis","DateValueAxis","ClusterLayout","StackWrap","PointEventsMixin","NoteMixin","Bar","BarChartAnimation","FadeInAnimation","ErrorRangeCalculator","CategoricalChart","BarChart","RangeBar","RangeBarChart","BulletChart","Bullet","Target","ErrorBarBase","CategoricalErrorBar","ScatterErrorBar","LinePoint","Bubble","LineSegment","LineChartMixin","ClipAnimationMixin","LineChart","ClipAnimation","StepLineSegment","SplineSegment","AreaSegmentMixin","AreaSegment","AreaChart","SplineAreaSegment","StepAreaSegment","ScatterChart","ScatterLineChart","BubbleChart","Candlestick","CandlestickChart","OHLCPoint","OHLCChart","BoxPlotChart","BoxPlot","VerticalBoxPlot","PieSegment","PieChartMixin","PieChart","DonutSegment","DonutChart","WaterfallChart","WaterfallSegment","Pane","ChartContainer","PlotAreaBase","PlotAreaEventsMixin","CategoricalPlotArea","AxisGroupRangeTracker","XYPlotArea","PiePlotArea","DonutPlotArea","PieAnimation","BubbleAnimation","Highlight","BaseTooltip","Tooltip","SharedTooltip","Crosshair","CrosshairTooltip","Aggregates","Selection","Pannable","ZoomSelection","MousewheelZoom","SeriesAggregator","ChartPlotArea","ChartPane","ChartAxis","ChartSeries","noop","proxy","Observable","DataSource","Widget","ui","isFunction","Axis","AxisLabel","BoxElement","ChartElement","Color","CurveProcessor","FloatElement","Note","LogarithmicAxis","NumericAxis","RootElement","Ring","ShapeElement","ShapeBuilder","TextBox","Title","alignPathToPixel","autoFormat","eventTargetElement","getSpacing","interpolate","interpolateValue","mwDelta","geom","geometry","draw","NS","ABOVE","AREA","AUTO","FIT","AXIS_LABEL_CLICK","BAR","BAR_ALIGN_MIN_WIDTH","BAR_BORDER_BRIGHTNESS","BELOW","BLACK","BOTH","BOTTOM","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","CENTER","CHANGE","CIRCLE","CONTEXTMENU_NS","CLIP","COLOR","COLUMN","COORD_PRECISION","CROSS","CSS_PREFIX","CUSTOM","DATABOUND","DEFAULT_FONT","DEFAULT_HEIGHT","DEFAULT_PRECISION","DEFAULT_WIDTH","DEFAULT_ERROR_BAR_WIDTH","DONUT","DONUT_SECTOR_ANIM_DELAY","DRAG","DRAG_END","DRAG_START","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","FADEIN","FIRST","FROM","FUNNEL","GLASS","HORIZONTAL","HORIZONTAL_WATERFALL","INITIAL_ANIMATION_DURATION","INSIDE_BASE","INSIDE_END","INTERPOLATE","LEAVE","LEFT","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","LINE","LINE_MARKER_SIZE","LINEAR","LOGARITHMIC","MAX","MIN","MIN_VALUE","MOUSELEAVE_NS","MOUSEMOVE_TRACKING","MOUSEMOVE_NS","MOUSEMOVE_DELAY","MOUSEWHEEL_DELAY","MOUSEWHEEL_NS","NOTE_CLICK","NOTE_HOVER","NOTE_TEXT","OHLC","OUTSIDE_END","PIE","PIE_SECTOR_ANIM_DELAY","PLOT_AREA_CLICK","PLOT_AREA_HOVER","POINTER","RANGE_BAR","RANGE_COLUMN","RENDER","RIGHT","ROUNDED_BEVEL","ROUNDED_GLASS","SCATTER","SCATTER_LINE","SELECT_START","SELECT","SELECT_END","SERIES_CLICK","SERIES_HOVER","START_SCALE","STEP","SMOOTH","STD_ERR","STD_DEV","SUMMARY_FIELD","TIME_PER_MILLISECOND","TIME_PER_WEEK","TIME_PER_MONTH","TIME_PER_YEAR","years","months","weeks","days","minutes","seconds","milliseconds","TO","TOP","TOOLTIP_ANIMATION_DURATION","TOOLTIP_OFFSET","TOOLTIP_SHOW_DELAY","TOOLTIP_HIDE_DELAY","TOOLTIP_INVERSE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","WHITE","ZERO","ZOOM_ACCELERATION","ZOOM_START","ZOOM","ZOOM_END","BASE_UNITS","EQUALLY_SPACED_SERIES","DateLabelFormats","Chart","userOptions","dataSource","chart","destroy","fn","call","addClass","css","_originalOptions","_initTheme","_initSurface","bind","events","wrapper","_initDataSource","notify","themes","themeName","theme","seriesCopies","_applyDefaults","_dataChangeHandler","_onDataChanged","_bindCategories","_hasDataSource","_redraw","_attachEvents","autoBind","fetch","setDataSource","unbind","_hasData","items","renderAs","chartArea","legend","categoryAxis","highlight","negativeValues","transitions","valueAxis","plotArea","xAxis","yAxis","panes","pannable","zoomable","refresh","_bindSeries","getSize","dimensions","_resize","t","redraw","paneName","_model","_plotArea","findPane","getAxis","findAxisByName","findPaneByName","findPaneByIndex","findSeries","srcSeries","findSeriesByName","_createSeries","findSeriesByIndex","seriesOptions","_seriesOptions","toggleHighlight","show","filter","seriesName","categoryName","firstSeries","filterPoints","pointsBySeriesName","charts","_togglePointsHighlight","_highlight","togglePointHighlight","showTooltip","point","categoryIndex","shared","_sharedTooltip","_tooltip","findPoint","categoryIx","pointsByCategoryIndex","showAt","hideTooltip","hide","surface","_surfaceWrap","clear","resize","Surface","view","model","_getModel","_destroyView","renderVisual","traverse","animation","setup","visual","play","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","exportVisual","originalChartArea","_pannable","selection","_zoomSelection","mousewheel","_mousewheelZoom","_tooltipleave","hideCrosshairs","_modelOptions","buildTitle","_createPlotArea","reflow","skipSeries","selections","_selections","_selectStartHandler","_selectStart","_selectHandler","_select","_selectEndHandler","_selectEnd","select","vertical","justified","_mouseover","_mouseout","on","_click","_mousewheel","_mouseleave","_mousemove","throttle","_shouldAttachMouseMove","UserEvents","_userEvents","global","multiTouch","fastTap","tap","_tap","_start","move","_move","end","_end","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","_gestureDistance","distance","_unsetActivePoint","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","args","mousewheelZoom","delta","originalEvent","updateRanges","zoom","_drawingChartElement","leave","_events","coords","_eventCoordinates","backgroundContainsPoint","_startNavigation","currentAxis","_navState","pan","startLocation","location","translateRange","_endNavigation","prevented","totalDelta","origEvent","_mwTimeout","clearTimeout","setTimeout","scaleRange","chartEvent","findPointPane","cancel","_suppressHover","_getChartElement","match","eventTarget","chartElement","parent","aliasFor","closest","isTouch","client","clientX","clientY","_toModelCoordinates","offset","paddingLeft","parseInt","paddingTop","win","scrollLeft","top","scrollTop","drawingElement","_activePoint","_propagateClick","_startHover","click","tooltipOptions","isHighlighted","hover","tooltipTracking","_mouseMoveTracking","seriesPoint","containsPoint","getNearestPoint","seriesIx","off","_trackCrosshairs","_trackSharedTooltip","crosshairs","pointArgs","hoverArgs","pointCategoryIndex","_tooltipCategoryIx","eventArgs","categoryPoints","relatedTarget","_sourceSeries","grouped","processedSeries","_isBindable","_applyGroupVisibleState","_deferRedraw","visibleState","action","_groupVisibleState","_saveGroupVisibleState","support","vml","_clearRedrawTimeout","_redrawTimeout","clearInterval","seriesData","axisIx","categoriesData","definitions","_bindCategoryAxis","dataItems","_bindCategoryAxisFromSeries","s","onAxis","dataIx","dataRow","getFn","dateAxis","uniqueCategories","categoryField","_legendItemClick","seriesIndex","pointIndex","_noTransitionsRedraw","transitionsState","_legendItemHover","pointsBySeriesIndex","setOptions","_setEvents","ExportMixin","PDFMixin","_registry","register","seriesTypes","registry","_valueFields","_otherFields","_nullValue","_undefinedValue","otherFields","binder","_makeValue","canonicalFields","pointIx","fieldData","srcValueFields","srcPointFields","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","content","barLabel","textBox","position","margin","padding","background","border","aboveAxis","delay","createVisual","noclip","targetBox","children","align","vAlign","x1","y1","x2","y2","rotation","bottom","alignToClipBox","clipBox","parentBox","paddingBox","createContainer","createMarker","createLabel","container","markerOptions","markerColor","markers","labelOptions","renderComplete","cursor","eventSink","_itemOverlay","Path","fromRect","toRect","fill","opacity","stroke","appendVisual","widget","that","customVisual","active","renderChildren","defaultVisual","addVisual","render","legendItem","Layout","spacing","lineSpacing","orientation","rect","bbox","clippedBBox","rectToBox","createItems","offsetX","offsetY","userAlign","shrinkToFit","innerElement","isVertical","reverse","hasItems","containerCustomReflow","containerReflow","containerBox","alignTarget","translate","_initFields","_initCategories","_ticks","outOfRangeMin","outOfRangeMax","definedMin","definedMax","srcCategories","ceil","majorGridLines","rangeIndices","totalRange","totalRangeIndices","limit","_seriesMax","getScale","lineBox","scale","getTickPositions","stepSize","positions","getLabelsTickPositions","tickPositions","getMajorTickPositions","unshift","labelTickIndex","label","arrangeLabels","hideOutOfRangeLabels","firstLabel","lastLabel","getTicks","majorTicks","getMinorTickPositions","minorTicks","getHash","_hash","getSlot","from","to","p1","p2","lineStart","slotBox","singleSlot","slot","startValue","lineEnd","getCategory","zoomRange","rate","totalMax","totalMin","labelsCount","labelsRange","skip","step","createAxisLabel","dataItem","axisLabelText","shouldRenderNote","limitRange","pointsRange","diffStart","diffEnd","valueRange","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","dateFormats","autoBaseUnitSteps","maxDateGroups","parseNoteValue","rounds","cat","lastCat","minDiff","_categoryRange","_range","categoryLimits","categoriesRange","minIdx","maxIdx","_roundToTotalStep","currentRange","datesRange","panRange","totalLimits","indicesRange","baseUnitIndex","autoBaseUnitStep","maxDiff","rangeDiff","stepIndex","rangeMax","rangeMin","autoUnit","stepOptions","unitSteps","nextStep","autoUnitIx","span","units","totalUnits","_timeScale","timeRange","maxCategory","lineSize","_collapse","nextDate","groups","upper","roundToNext","roundedStep","roundedDate","unitFormat","format","seriesMin","seriesMax","axisCrossingValue","axisCrossingValues","applyDefaults","timeUnits","baseUnitTime","autoMin","autoMax","userMajorUnit","majorUnit","autoMajorUnit","actualUnits","unitsToAdd","head","tail","minorUnit","getDivisions","stepValue","dir","startEdge","divisions","getValue","exact","limittedRange","endValue","gap","childBox","cluster","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","percentage","stackValue","runningTotal","total","createNote","notes","noteText","note","_rendered","errorBar","labelText","labelTemplate","formatValue","owner","formatPointValue","errorBars","rectVisual","sender","getChart","Group","createRect","strokeOpacity","getBorderColor","dashType","lineJoin","createGradientOverlay","baseColor","createHighlight","highlightVisual","highlightVisualArgs","borderColor","brightness","_brightness","toHex","tooltipAnchor","tooltipWidth","tooltipHeight","isStacked","overlapsBox","overlaps","Animation","fromScale","origin","Point","transform","abort","scaleX","scaleY","AnimationFactory","easing","fadeTo","errorValue","initGlobalRanges","prototype","percentRegex","standardDeviationRegex","RegExp","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","globalRange","getStandardError","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","seriesCategoryAxis","valueAxisRanges","seriesPoints","_evalSeries","invertAxes","clip","traverseDataPoints","addValue","pointOptions","pointType","plotValue","categoryPts","categorySum","otherValues","other","stack","otherStack","isStacked100","plotRange","positive","prevValue","isStackedBar","otherValue","seriesValueAxis","categoryAxisCrossingValue","stackLimits","stackName","pIx","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","addErrorBar","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","updateRange","createPoint","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","categorySlot","valueSlot","pointSlot","reflowPoint","reflowCategories","crossingValues","axisIndex","slotX","slotY","currentCategory","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","clusterType","stackType","stackWrap","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","stackAxis","zeroSlot","childrenLength","createAnimation","_setAnimationOptions","_setChildrenAnimation","pointVisual","fromOptions","toOptions","labelFrom","_createLabel","labelTo","rangeBar","plotLimits","wrapData","seriesItem","bulletOptions","shape","targetSlot","targetValueSlot","targetSlotX","targetSlotY","set","bodyVisual","endCaps","linePoints","valueBox","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","boxSize","createDefaultVisual","lineOptions","moveTo","lineTo","seriesAxes","marker","markerBorder","markerBox","_childBox","noteTargetBox","reflowLabel","alignTo","defaultColor","shadow","getElement","halfSize","Rect","radius","Circle","segment","closed","visualPoints","fromPoints","close","renderSegments","sortedPoints","pointCount","lastSegment","_segments","sortPoints","seriesMissingValues","createSegment","_addSegment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","clipPath","root","getRoot","animationPoints","_setEnd","segments","topRight","bottomRight","setX","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","revDir","curveProcessor","curve","process","firstPoint","lastPoint","valueAxisLineBox","categoryAxisLineBox","stackPoints","_linePoints","createArea","createLine","lineCap","prevSegment","_gapStackPoints","stackPoint","_stackPoints","currentSeriesIx","gapStackPoint","startIdx","endIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","missingValue","_maxSize","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","mid","ocSlot","lhSlot","open","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","oSlot","cSlot","oPoints","cPoints","lhPoints","lower","q1","median","q3","filterOutliers","outliers","mean","extremes","whiskerSlot","boxSlot","medianSlot","meanSlot","reflowBoxSlot","reflowWhiskerSlot","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","markersBorder","outlierValue","outerFence","reflowOutliers","sector","animationDelay","lp","labelWidth","labelHeight","labelsOptions","labelsDistance","angle","middle","expand","startAngle","innerRadius","ir","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","createRing","adjacentBox","createLegendItem","itemLabelOptions","pointVisible","legendOptions","inactiveItems","inactiveItemsLabels","legendItems","connectors","anglePerValue","explode","currentAngle","colorsCount","evalSegmentOptions","segmentOptions","seriesConfig","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","seriesConfigs","boxCenter","leftSideLabels","rightSideLabels","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","firstBox","lr","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelDistance","boxY","hAlignLabel","connectorLine","connectorsColor","centerPoint","sr","crossing","_connectorLines","seriesId","pointInCircle","originalX","direction","cx","cy","holeSize","totalSize","seriesWithoutSize","currentSize","createSegments","summary","totalCategories","fromBox","toBox","guid","createTitle","chartContainer","titleOptions","appendAxis","appendChart","empty","removeAxis","removeChart","pop","visualStyle","createGridLines","stackRoot","clipRoot","gridLines","j","altAxis","allAxes","vGridLines","hGridLines","createGradient","chartsBox","axisValueField","shouldClip","_clipBox","clipRect","unclipLabels","initSeries","createPanes","createCrosshairs","setTitle","currentPane","paneOptions","panesLength","paneIndex","currentCrosshair","crosshair","removeCrosshairs","matchingPane","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","groupAxes","paneAxes","paneIx","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","crossingAxes","valuesToAdd","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slotEdge","targetEdge","alignAxes","anchorCrossings","paneId","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","overflowY","shrinked","fitAxes","paneBox","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","remainingHeight","remainingPanes","autoHeightPanes","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","bg","_bgVisual","MultiPath","paneByPoint","_dispatchEvent","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","reset","paneSeries","visibleSeries","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","aggregateSeries","filterSeries","minCategory","outOfRangePoints","_outOfRangeMinPoint","_outOfRangeMaxPoint","aggregator","outOfRangeMinCategory","outOfRangeMaxCategory","srcData","srcPoints","aggregatorSeries","outOfRangeMinIdx","outOfRangeMaxIdx","aggregatePoints","categoriesToAdd","update","grep","defaultPaneName","stackableChartOptions","axisSeries","unique","categoryAxes","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","_deferLabels","isJustified","axisType","defaultAxisRange","tracker","defaultRange","query","roundToMajorUnit","eventType","pointPane","updateAxisOptions","axesOptions","chartAxisRanges","chartRange","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","createPieChart","pieChart","createDonutChart","donutChart","_points","hasHighlight","toggleHandler","toggle","mobileScrollerSelector","padding-top","padding-right","padding-bottom","padding-left","attr","_mobileScroller","_clearShowTimeout","remove","_offset","_ensureElement","stop","animate","showTimeout","_padding","_chartPadding","_measure","chartPadding","chartOffset","zoomLevel","viewport","pageYOffset","documentElement","pageXOffset","movable","_fit","outerHeight","outerWidth","setStyle","pointColor","percBrightness","toggleClass","backgroundColor","borderWidth","_hideElement","appendTo","contains","fadeOut","always","_pointContent","tooltipTemplate","xLow","xHigh","yLow","yHigh","_pointAnchor","viewPortSize","html","sharedTemplate","categoryFormat","_content","_slotAnchor","_defaultAnchor","hCenter","slotCenter","categoryText","stickyMode","moveLine","getBox","dim","axisLineBox","getAnchor","halfWidth","halfHeight","bottomLeft","topLeft","sumOrNull","avg","aggregates","getValueAxis","selectorPrefix","_dateAxis","find","leftMask","rightMask","leftHandle","rightHandle","_index","cssText","stopPropagation","userEvents","press","_press","add","removeClass","_state","_rangeEventArgs","_value","moveTarget","parents","handle","oldRange","is","p0","touches","rightClick","which","_slot","leftMaskWidth","rightMaskWidth","zDir","lock","_active","_panAxes","updatedAxes","_marquee","zoomPane","elementOffset","_zoomPane","_elementOffset","_zoomPaneClipBox","selectionPosition","_selectionPosition","_updateAxisRanges","initialDelta","defaultAggregates","fieldAggregate","sa","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","srcValues","_bindPoints","firstDataItem","_bindField","backgroundVisual","_chart","_pane","chartsVisual","_axis","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData","easeOutElastic","asin","sin","plugin","errorLow","errorHigh"],"mappings":"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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                if (id in cache) {\n                    return cache[id];\n                }\n                return f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        function mergeSort(a, cmp) {\n            if (a.length < 2) {\n                return a.slice();\n            }\n            function merge(a, b) {\n                var r = [], ai = 0, bi = 0, i = 0;\n                while (ai < a.length && bi < b.length) {\n                    if (cmp(a[ai], b[bi]) <= 0) {\n                        r[i++] = a[ai++];\n                    } else {\n                        r[i++] = b[bi++];\n                    }\n                }\n                if (ai < a.length) {\n                    r.push.apply(r, a.slice(ai));\n                }\n                if (bi < b.length) {\n                    r.push.apply(r, b.slice(bi));\n                }\n                return r;\n            }\n            return function sort(a) {\n                if (a.length <= 1) {\n                    return a;\n                }\n                var m = Math.floor(a.length / 2);\n                var left = a.slice(0, m);\n                var right = a.slice(m);\n                left = sort(left);\n                right = sort(right);\n                return merge(left, right);\n            }(a);\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode,\n                mergeSort: mergeSort\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        function loadFonts(fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.loadFonts = loadFonts;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                e = e || {};\n                e.element = this;\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function () {\n                this.trigger('geometryChange', { element: this });\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'kendo.color',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [\n            {\n                id: 'dataviz.chart-polar',\n                name: 'Polar & Radar',\n                description: 'Support for Polar and Radar charts.',\n                depends: ['dataviz.chart.polar'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-funnel',\n                name: 'Funnel chart',\n                description: 'Support for Funnel chart.',\n                depends: ['dataviz.chart.funnel'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var each = $.each, isArray = $.isArray, isPlainObject = $.isPlainObject, map = $.map, math = Math, noop = $.noop, extend = $.extend, proxy = $.proxy, kendo = window.kendo, Class = kendo.Class, Observable = kendo.Observable, DataSource = kendo.data.DataSource, Widget = kendo.ui.Widget, deepExtend = kendo.deepExtend, getter = kendo.getter, isFn = kendo.isFunction, template = kendo.template, dataviz = kendo.dataviz, Axis = dataviz.Axis, AxisLabel = dataviz.AxisLabel, Box2D = dataviz.Box2D, BoxElement = dataviz.BoxElement, ChartElement = dataviz.ChartElement, Color = kendo.drawing.Color, CurveProcessor = dataviz.CurveProcessor, FloatElement = dataviz.FloatElement, Note = dataviz.Note, LogarithmicAxis = dataviz.LogarithmicAxis, NumericAxis = dataviz.NumericAxis, Point2D = dataviz.Point2D, RootElement = dataviz.RootElement, Ring = dataviz.Ring, ShapeElement = dataviz.ShapeElement, ShapeBuilder = dataviz.ShapeBuilder, TextBox = dataviz.TextBox, Title = dataviz.Title, alignPathToPixel = dataviz.alignPathToPixel, autoFormat = dataviz.autoFormat, dateComparer = dataviz.dateComparer, eventTargetElement = dataviz.eventTargetElement, getSpacing = dataviz.getSpacing, inArray = dataviz.inArray, interpolate = dataviz.interpolateValue, mwDelta = dataviz.mwDelta, round = dataviz.round, util = kendo.util, append = util.append, defined = util.defined, last = util.last, limitValue = util.limitValue, sparseArrayLimits = util.sparseArrayLimits, sparseArrayMin = util.sparseArrayMin, sparseArrayMax = util.sparseArrayMax, renderTemplate = util.renderTemplate, valueOrDefault = util.valueOrDefault, geom = dataviz.geometry, draw = dataviz.drawing;\n        var NS = '.kendoChart', ABOVE = 'above', AREA = 'area', AUTO = 'auto', FIT = 'fit', AXIS_LABEL_CLICK = dataviz.AXIS_LABEL_CLICK, BAR = 'bar', BAR_ALIGN_MIN_WIDTH = 6, BAR_BORDER_BRIGHTNESS = 0.8, BELOW = 'below', BLACK = '#000', BOTH = 'both', BOTTOM = 'bottom', BOX_PLOT = 'boxPlot', BUBBLE = 'bubble', BULLET = 'bullet', CANDLESTICK = 'candlestick', CATEGORY = 'category', CENTER = 'center', CHANGE = 'change', CIRCLE = 'circle', CONTEXTMENU_NS = 'contextmenu' + NS, CLIP = dataviz.CLIP, COLOR = 'color', COLUMN = 'column', COORD_PRECISION = dataviz.COORD_PRECISION, CROSS = 'cross', CSS_PREFIX = 'k-', CUSTOM = 'custom', DATABOUND = 'dataBound', DATE = 'date', DAYS = 'days', DEFAULT_FONT = dataviz.DEFAULT_FONT, DEFAULT_HEIGHT = dataviz.DEFAULT_HEIGHT, DEFAULT_PRECISION = dataviz.DEFAULT_PRECISION, DEFAULT_WIDTH = dataviz.DEFAULT_WIDTH, DEFAULT_ERROR_BAR_WIDTH = 4, DONUT = 'donut', DONUT_SECTOR_ANIM_DELAY = 50, DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', ERROR_LOW_FIELD = 'errorLow', ERROR_HIGH_FIELD = 'errorHigh', X_ERROR_LOW_FIELD = 'xErrorLow', X_ERROR_HIGH_FIELD = 'xErrorHigh', Y_ERROR_LOW_FIELD = 'yErrorLow', Y_ERROR_HIGH_FIELD = 'yErrorHigh', FADEIN = 'fadeIn', FIRST = 'first', FROM = 'from', FUNNEL = 'funnel', GLASS = 'glass', HORIZONTAL = 'horizontal', HORIZONTAL_WATERFALL = 'horizontalWaterfall', HOURS = 'hours', INITIAL_ANIMATION_DURATION = dataviz.INITIAL_ANIMATION_DURATION, INSIDE_BASE = 'insideBase', INSIDE_END = 'insideEnd', INTERPOLATE = 'interpolate', LEAVE = 'leave', LEFT = 'left', LEGEND_ITEM_CLICK = 'legendItemClick', LEGEND_ITEM_HOVER = 'legendItemHover', LINE = 'line', LINE_MARKER_SIZE = 8, LINEAR = 'linear', LOGARITHMIC = 'log', MAX = 'max', MAX_EXPAND_DEPTH = 5, MAX_VALUE = Number.MAX_VALUE, MIN = 'min', MIN_VALUE = -Number.MAX_VALUE, MINUTES = 'minutes', MONTHS = 'months', MOUSELEAVE_NS = 'mouseleave' + NS, MOUSEMOVE_TRACKING = 'mousemove.tracking', MOUSEMOVE_NS = 'mousemove' + NS, MOUSEMOVE_DELAY = 20, MOUSEWHEEL_DELAY = 150, MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, NOTE_CLICK = dataviz.NOTE_CLICK, NOTE_HOVER = dataviz.NOTE_HOVER, NOTE_TEXT = 'noteText', OBJECT = 'object', OHLC = 'ohlc', OUTSIDE_END = 'outsideEnd', PIE = 'pie', PIE_SECTOR_ANIM_DELAY = 70, PLOT_AREA_CLICK = 'plotAreaClick', PLOT_AREA_HOVER = 'plotAreaHover', POINTER = 'pointer', RANGE_BAR = 'rangeBar', RANGE_COLUMN = 'rangeColumn', RENDER = 'render', RIGHT = 'right', ROUNDED_BEVEL = 'roundedBevel', ROUNDED_GLASS = 'roundedGlass', SCATTER = 'scatter', SCATTER_LINE = 'scatterLine', SECONDS = 'seconds', MILLISECONDS = 'milliseconds', SELECT_START = 'selectStart', SELECT = 'select', SELECT_END = 'selectEnd', SERIES_CLICK = 'seriesClick', SERIES_HOVER = 'seriesHover', START_SCALE = 0.001, STEP = 'step', SMOOTH = 'smooth', STD_ERR = 'stderr', STD_DEV = 'stddev', STRING = 'string', SUMMARY_FIELD = 'summary', TIME_PER_MILLISECOND = 1, TIME_PER_SECOND = 1000 * TIME_PER_MILLISECOND, TIME_PER_MINUTE = 60 * TIME_PER_SECOND, TIME_PER_HOUR = 60 * TIME_PER_MINUTE, TIME_PER_DAY = 24 * TIME_PER_HOUR, TIME_PER_WEEK = 7 * TIME_PER_DAY, TIME_PER_MONTH = 31 * TIME_PER_DAY, TIME_PER_YEAR = 365 * TIME_PER_DAY, TIME_PER_UNIT = {\n                'years': TIME_PER_YEAR,\n                'months': TIME_PER_MONTH,\n                'weeks': TIME_PER_WEEK,\n                'days': TIME_PER_DAY,\n                'hours': TIME_PER_HOUR,\n                'minutes': TIME_PER_MINUTE,\n                'seconds': TIME_PER_SECOND,\n                'milliseconds': TIME_PER_MILLISECOND\n            }, TO = 'to', TOP = 'top', TOOLTIP_ANIMATION_DURATION = 150, TOOLTIP_OFFSET = 5, TOOLTIP_SHOW_DELAY = 100, TOOLTIP_HIDE_DELAY = 100, TOOLTIP_INVERSE = 'chart-tooltip-inverse', VALUE = 'value', VERTICAL_AREA = 'verticalArea', VERTICAL_BOX_PLOT = 'verticalBoxPlot', VERTICAL_BULLET = 'verticalBullet', VERTICAL_LINE = 'verticalLine', WATERFALL = 'waterfall', WEEKS = 'weeks', WHITE = '#fff', X = 'x', Y = 'y', YEARS = 'years', ZERO = 'zero', ZOOM_ACCELERATION = 3, ZOOM_START = 'zoomStart', ZOOM = 'zoom', ZOOM_END = 'zoomEnd', BASE_UNITS = [\n                MILLISECONDS,\n                SECONDS,\n                MINUTES,\n                HOURS,\n                DAYS,\n                WEEKS,\n                MONTHS,\n                YEARS\n            ], EQUALLY_SPACED_SERIES = [\n                BAR,\n                COLUMN,\n                OHLC,\n                CANDLESTICK,\n                BOX_PLOT,\n                VERTICAL_BOX_PLOT,\n                BULLET,\n                RANGE_COLUMN,\n                RANGE_BAR,\n                WATERFALL,\n                HORIZONTAL_WATERFALL\n            ];\n        var DateLabelFormats = {\n            milliseconds: 'HH:mm:ss.fff',\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var chart = this, options, dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(chart, element);\n                chart.element.addClass(CSS_PREFIX + this.options.name.toLowerCase()).css('position', 'relative');\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    userOptions.dataSource = undefined;\n                }\n                options = deepExtend({}, chart.options, userOptions);\n                chart._originalOptions = deepExtend({}, options);\n                chart._initTheme(options);\n                chart._initSurface();\n                chart.bind(chart.events, chart.options);\n                chart.wrapper = chart.element;\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                chart._initDataSource(userOptions);\n                kendo.notify(chart, dataviz.ui);\n            },\n            _initTheme: function (options) {\n                var chart = this, themes = dataviz.ui.themes || {}, themeName = options.theme, theme = themes[themeName] || themes[themeName.toLowerCase()], themeOptions = themeName && theme ? theme.chart : {}, seriesCopies = [], series = options.series || [], i;\n                for (i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                chart._applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    options.seriesColors = undefined;\n                }\n                chart.options = deepExtend({}, themeOptions, options);\n                applySeriesColors(chart.options);\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind(CHANGE, chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                preloadFonts(userOptions, function () {\n                    chart._redraw();\n                    chart._attachEvents();\n                });\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            items: function () {\n                return $();\n            },\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                chartArea: {},\n                legend: {\n                    visible: true,\n                    labels: {}\n                },\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {\n                    type: COLUMN,\n                    data: [],\n                    highlight: { visible: true },\n                    labels: {},\n                    negativeValues: { visible: false }\n                },\n                series: [],\n                seriesColors: null,\n                tooltip: { visible: false },\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            refresh: function () {\n                var chart = this;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            _resize: function () {\n                var t = this.options.transitions;\n                this.options.transitions = false;\n                this._redraw();\n                this.options.transitions = t;\n            },\n            redraw: function (paneName) {\n                var chart = this, pane, plotArea;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                if (paneName) {\n                    plotArea = chart._model._plotArea;\n                    pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    chart._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var seriesName, categoryName, points;\n                if (kendo.isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    if (isPlainObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this._togglePointsHighlight(show, points);\n                }\n            },\n            _togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var tooltip = this._tooltip;\n                var plotArea = this._plotArea;\n                var point, categoryIndex;\n                if (kendo.isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    wrap.css('width', chartArea.width);\n                }\n                if (chartArea.height) {\n                    wrap.css('height', chartArea.height);\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = draw.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var chart = this, model = chart._getModel(), view;\n                chart._destroyView();\n                chart._model = model;\n                chart._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                chart._initSurface();\n                chart.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                chart._tooltip = chart._createTooltip();\n                chart._highlight = new Highlight(view);\n                chart._setupSelection();\n                chart._createPannable();\n                chart._createZoomSelection();\n                chart._createMousewheelZoom();\n                if (!chart._hasDataSource || chart._hasData || !chart.options.autoBind) {\n                    chart.trigger(RENDER);\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                var chart = this, options = chart.options;\n                return chart._plotArea instanceof CategoricalPlotArea && options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var chart = this, options = chart.options, element = chart.element, tooltip;\n                if (chart._sharedTooltip()) {\n                    tooltip = new SharedTooltip(element, chart._plotArea, options.tooltip);\n                } else {\n                    tooltip = new Tooltip(element, options.tooltip);\n                }\n                tooltip.bind(LEAVE, proxy(chart._tooltipleave, chart));\n                return tooltip;\n            },\n            _tooltipleave: function () {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            _getModel: function () {\n                var chart = this, options = chart.options, model = new RootElement(chart._modelOptions()), plotArea;\n                model.chart = chart;\n                Title.buildTitle(options.title, model);\n                plotArea = model._plotArea = chart._createPlotArea();\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var chart = this, options = chart.options, element = chart.element, height = math.floor(element.height()), width = math.floor(element.width());\n                chart._size = null;\n                return deepExtend({\n                    width: width || DEFAULT_WIDTH,\n                    height: height || DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var chart = this, options = chart.options;\n                return PlotAreaFactory.current.create(skipSeries ? [] : options.series, options);\n            },\n            _setupSelection: function () {\n                var chart = this, plotArea = chart._plotArea, axes = plotArea.axes, selections = chart._selections = [], selection, i, axis, min, max, options;\n                if (!chart._selectStartHandler) {\n                    chart._selectStartHandler = proxy(chart._selectStart, chart);\n                    chart._selectHandler = proxy(chart._select, chart);\n                    chart._selectEndHandler = proxy(chart._selectEnd, chart);\n                }\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        min = 0;\n                        max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        selection = new Selection(chart, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selection.bind(SELECT_START, chart._selectStartHandler);\n                        selection.bind(SELECT, chart._selectHandler);\n                        selection.bind(SELECT_END, chart._selectEndHandler);\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _attachEvents: function () {\n                var chart = this, element = chart.element, surface = chart.surface;\n                surface.bind('mouseenter', proxy(chart._mouseover, chart));\n                surface.bind('mouseleave', proxy(chart._mouseout, chart));\n                element.on(CONTEXTMENU_NS, proxy(chart._click, chart));\n                element.on(MOUSEWHEEL_NS, proxy(chart._mousewheel, chart));\n                element.on(MOUSELEAVE_NS, proxy(chart._mouseleave, chart));\n                chart._mousemove = kendo.throttle(proxy(chart._mousemove, chart), MOUSEMOVE_DELAY);\n                if (chart._shouldAttachMouseMove()) {\n                    element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n                if (kendo.UserEvents) {\n                    chart._userEvents = new kendo.UserEvents(element, {\n                        global: true,\n                        multiTouch: true,\n                        fastTap: true,\n                        tap: proxy(chart._tap, chart),\n                        start: proxy(chart._start, chart),\n                        move: proxy(chart._move, chart),\n                        end: proxy(chart._end, chart),\n                        gesturestart: proxy(chart._gesturestart, chart),\n                        gesturechange: proxy(chart._gesturechange, chart),\n                        gestureend: proxy(chart._gestureend, chart)\n                    });\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function () {\n                if (this._zooming) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var chart = this;\n                var mousewheelZoom = chart._mousewheelZoom;\n                if (mousewheelZoom) {\n                    e.preventDefault();\n                    var previousGestureDistance = chart._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = math.round(scaleDelta * 10);\n                        chart._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(chart._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (chart._zooming || !chart.trigger(ZOOM_START, args)) {\n                            if (!chart._zooming) {\n                                chart._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !chart.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var chart = this, events = chart._events, coords = chart._eventCoordinates(e);\n                if (!chart._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (defined(events[DRAG_START] || events[DRAG] || events[DRAG_END])) {\n                    chart._startNavigation(e, coords, DRAG_START);\n                }\n                if (chart._pannable && chart._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                }\n                if (chart._zoomSelection) {\n                    if (chart._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var chart = this, state = chart._navState, pannable = chart._pannable, axes, ranges = {}, i, currentAxis, axisName, axis, delta;\n                if (pannable) {\n                    e.preventDefault();\n                    ranges = pannable.move(e);\n                    if (ranges && !chart.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    e.preventDefault();\n                    axes = state.axes;\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        axisName = currentAxis.options.name;\n                        if (axisName) {\n                            axis = currentAxis.options.vertical ? e.y : e.x;\n                            delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges;\n                    chart.trigger(DRAG, {\n                        axisRanges: ranges,\n                        originalEvent: e\n                    });\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _mousewheel: function (e) {\n                var chart = this, origEvent = e.originalEvent, prevented, delta = mwDelta(e), totalDelta, state = chart._navState, axes, i, currentAxis, axisName, ranges = {}, mousewheelZoom = chart._mousewheelZoom, coords = chart._eventCoordinates(origEvent);\n                if (!chart._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (chart._zooming || !chart.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!chart._zooming) {\n                            chart._unsetActivePoint();\n                            chart.surface.suspendTracking();\n                            chart._zooming = true;\n                        }\n                        if (chart._mwTimeout) {\n                            clearTimeout(chart._mwTimeout);\n                        }\n                        args.axisRanges = ranges = mousewheelZoom.updateRanges(delta);\n                        if (ranges && !chart.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        chart._mwTimeout = setTimeout(function () {\n                            chart.trigger(ZOOM_END, args);\n                            chart._zooming = false;\n                            if (chart.surface) {\n                                chart.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    if (!state) {\n                        prevented = chart._startNavigation(origEvent, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = chart._navState;\n                        }\n                    }\n                    if (state) {\n                        totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        axes = chart._navState.axes;\n                        for (i = 0; i < axes.length; i++) {\n                            currentAxis = axes[i];\n                            axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        chart.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (chart._mwTimeout) {\n                            clearTimeout(chart._mwTimeout);\n                        }\n                        chart._mwTimeout = setTimeout(function () {\n                            chart._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var chart = this, plotArea = chart._model._plotArea, pane = plotArea.findPointPane(coords), axes = plotArea.axes.slice(0), prevented;\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                prevented = chart.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    chart._userEvents.cancel();\n                } else {\n                    chart._suppressHover = true;\n                    chart._unsetActivePoint();\n                    chart._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                var chart = this;\n                if (chart._navState) {\n                    chart.trigger(chartEvent, {\n                        axisRanges: chart._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    chart._suppressHover = false;\n                    chart._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var chartElement;\n                while (element && !chartElement) {\n                    chartElement = element.chartElement;\n                    element = element.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var chart = this, isTouch = defined((e.x || {}).client), clientX = isTouch ? e.x.client : e.clientX, clientY = isTouch ? e.y.client : e.clientY;\n                return chart._toModelCoordinates(clientX, clientY);\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element, offset = element.offset(), paddingLeft = parseInt(element.css('paddingLeft'), 10), paddingTop = parseInt(element.css('paddingTop'), 10), win = $(window);\n                return new Point2D(clientX - offset.left - paddingLeft + win.scrollLeft(), clientY - offset.top - paddingTop + win.scrollTop());\n            },\n            _tap: function (e) {\n                var chart = this, drawingElement = chart.surface.eventTarget(e), element = chart._drawingChartElement(drawingElement, e);\n                if (chart._activePoint === element) {\n                    chart._propagateClick(element, e);\n                } else {\n                    if (!chart._startHover(drawingElement, e)) {\n                        chart._unsetActivePoint();\n                    }\n                    chart._propagateClick(element, e);\n                }\n            },\n            _click: function (e) {\n                var chart = this, element = chart._getChartElement(e);\n                chart._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                while (element) {\n                    if (element.click) {\n                        element.click(this, e);\n                    }\n                    element = element.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chart = this, chartElement = chart._drawingChartElement(element, e), tooltip = chart._tooltip, highlight = chart._highlight, tooltipOptions = chart.options.tooltip, point;\n                if (chart._suppressHover || !highlight || highlight.isHighlighted(chartElement) || chart._sharedTooltip()) {\n                    return;\n                }\n                point = chart._drawingChartElement(element, e, function (element) {\n                    return element.hover && !(element instanceof PlotAreaBase);\n                });\n                if (point && !point.hover(chart, e)) {\n                    chart._activePoint = point;\n                    tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point.tooltipTracking;\n                }\n            },\n            _mouseover: function (e) {\n                var chart = this;\n                if (chart._startHover(e.element, e.originalEvent)) {\n                    $(document).on(MOUSEMOVE_TRACKING, proxy(chart._mouseMoveTracking, chart));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var chart = this, options = chart.options, tooltip = chart._tooltip, highlight = chart._highlight, coords = chart._eventCoordinates(e), point = chart._activePoint, tooltipOptions, seriesPoint;\n                if (chart._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint != point) {\n                            seriesPoint.hover(chart, e);\n                            chart._activePoint = seriesPoint;\n                            tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    $(document).off(MOUSEMOVE_TRACKING);\n                    chart._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                if (this._plotArea.hover) {\n                    this._plotArea.hover(this, e);\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs, i, current;\n                for (i = 0; i < crosshairs.length; i++) {\n                    current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var chart = this, options = chart.options, plotArea = chart._plotArea, categoryAxis = plotArea.categoryAxis, tooltip = chart._tooltip, tooltipOptions = options.tooltip, highlight = chart._highlight, index, points;\n                if (plotArea.box.containsPoint(coords)) {\n                    index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== chart._tooltipCategoryIx) {\n                        points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = $.map(points, function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        chart._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            _mouseleave: function (e) {\n                var chart = this, plotArea = chart._plotArea, tooltip = chart._tooltip, highlight = chart._highlight, target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length)) {\n                    chart._mousemove.cancel();\n                    plotArea.hideCrosshairs();\n                    highlight.hide();\n                    setTimeout(proxy(tooltip.hide, tooltip), TOOLTIP_HIDE_DELAY);\n                    chart._tooltipCategoryIx = null;\n                }\n            },\n            _unsetActivePoint: function () {\n                var chart = this, tooltip = chart._tooltip, highlight = chart._highlight;\n                chart._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _onDataChanged: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], currentSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        append(processedSeries, groupSeries(currentSeries, data));\n                        this._applyGroupVisibleState(processedSeries, e);\n                    } else {\n                        processedSeries.push(currentSeries || []);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart._hasData = true;\n                chart._deferRedraw();\n            },\n            _applyGroupVisibleState: function (processedSeries, e) {\n                if (e && e.action) {\n                    var visibleState = this._groupVisibleState = this._groupVisibleState || {};\n                    for (var idx = 0; idx < processedSeries.length; idx++) {\n                        if (visibleState[processedSeries[idx]._groupValue] === false) {\n                            processedSeries[idx].visible = false;\n                        }\n                    }\n                } else {\n                    delete this._groupVisibleState;\n                }\n            },\n            _saveGroupVisibleState: function (series) {\n                if (defined(series._groupValue)) {\n                    if (!this._groupVisibleState) {\n                        this._groupVisibleState = {};\n                    }\n                    this._groupVisibleState[series._groupValue] = series.visible;\n                }\n            },\n            _deferRedraw: function () {\n                var chart = this;\n                if (kendo.support.vml) {\n                    chart._clearRedrawTimeout();\n                    chart._redrawTimeout = setTimeout(function () {\n                        if (!chart.surface) {\n                            return;\n                        }\n                        chart.trigger(DATABOUND);\n                        chart._redraw();\n                    }, 0);\n                } else {\n                    chart.trigger(DATABOUND);\n                    chart._redraw();\n                }\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else {\n                    this._bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var chart = this, items = [], result, series = chart.options.series, seriesLength = series.length, seriesIx, s, onAxis, data, dataIx, dataLength, dataRow, category, uniqueCategories = {}, getFn, dateAxis;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    s = series[seriesIx];\n                    onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    data = s.data;\n                    dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        getFn = dateAxis ? getDateField : getField;\n                        for (dataIx = 0; dataIx < dataLength; dataIx++) {\n                            dataRow = data[dataIx];\n                            category = getFn(s.categoryField, dataRow);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dateComparer(a[0], b[0]);\n                        });\n                    }\n                    result = transpose(items);\n                    axis.categories = result[0];\n                    axis.dataItems = result[1];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], visible, point;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    point = currentSeries.data[pointIndex];\n                    if (!defined(point.visible)) {\n                        visible = false;\n                    } else {\n                        visible = !point.visible;\n                    }\n                    point.visible = visible;\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._saveGroupVisibleState(currentSeries);\n                }\n                this._noTransitionsRedraw();\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this.redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                var chart = this;\n                var events = chart._events;\n                return chart._plotArea.crosshairs.length || chart._tooltip && chart._sharedTooltip() || defined(events[PLOT_AREA_HOVER]);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                options.dataSource = undefined;\n                clearMissingValues(chart._originalOptions, options);\n                chart._originalOptions = deepExtend(chart._originalOptions, options);\n                chart.options = deepExtend({}, chart._originalOptions);\n                chart._sourceSeries = null;\n                $(document).off(MOUSEMOVE_NS);\n                Widget.fn._setEvents.call(chart, options);\n                chart._initTheme(chart.options);\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                if (chart._shouldAttachMouseMove()) {\n                    chart.element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                $(document).off(MOUSEMOVE_TRACKING);\n                if (chart._userEvents) {\n                    chart._userEvents.destroy();\n                }\n                chart._destroyView();\n                chart.surface.destroy();\n                chart.surface = null;\n                chart._clearRedrawTimeout();\n                Widget.fn.destroy.call(chart);\n            },\n            _destroyView: function () {\n                var chart = this, model = chart._model, selections = chart._selections;\n                if (model) {\n                    model.destroy();\n                    chart._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                chart._unsetActivePoint();\n                if (chart._tooltip) {\n                    chart._tooltip.destroy();\n                }\n                if (chart._highlight) {\n                    chart._highlight.destroy();\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.destroy();\n                    delete chart._zoomSelection;\n                }\n                if (chart._pannable) {\n                    chart._pannable.destroy();\n                    delete chart._pannable;\n                }\n                if (chart._mousewheelZoom) {\n                    chart._mousewheelZoom.destroy();\n                    delete chart._mousewheelZoom;\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options) {\n                var registry = this._registry, match = registry[0], i, entry, series;\n                for (i = 0; i < registry.length; i++) {\n                    entry = registry[i];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var binder = this, i, type;\n                valueFields = valueFields || [VALUE];\n                for (i = 0; i < seriesTypes.length; i++) {\n                    type = seriesTypes[i];\n                    binder._valueFields[type] = valueFields;\n                    binder._otherFields[type] = otherFields;\n                    binder._nullValue[type] = binder._makeValue(valueFields, null);\n                    binder._undefinedValue[type] = binder._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var binder = this, data = series.data, pointData = defined(item) ? item : data[pointIx], result = { valueFields: { value: pointData } }, fields, fieldData, srcValueFields, srcPointFields, valueFields = binder.valueFields(series), otherFields = binder._otherFields[series.type], value;\n                if (pointData === null) {\n                    value = binder._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = binder._undefinedValue[series.type];\n                } else if (isArray(pointData)) {\n                    fieldData = pointData.slice(valueFields.length);\n                    value = binder._bindFromArray(pointData, valueFields);\n                    fields = binder._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    srcPointFields = binder.sourceFields(series, otherFields);\n                    value = binder._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = binder._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {}, i, length = fields.length, fieldName;\n                for (i = 0; i < length; i++) {\n                    fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {}, i, length;\n                if (fields) {\n                    length = math.min(fields.length, array.length);\n                    for (i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                var value = {}, i, length, fieldName, srcFieldName;\n                if (fields) {\n                    length = fields.length;\n                    srcFields = srcFields || fields;\n                    for (i = 0; i < length; i++) {\n                        fieldName = fields[i];\n                        srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var i, length, fieldName, sourceFields, sourceFieldName;\n                if (canonicalFields) {\n                    length = canonicalFields.length;\n                    sourceFields = [];\n                    for (i = 0; i < length; i++) {\n                        fieldName = canonicalFields[i];\n                        sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                var barLabel = this;\n                ChartElement.fn.init.call(barLabel, options);\n                this.textBox = new TextBox(content, barLabel.options);\n                barLabel.append(this.textBox);\n            },\n            options: {\n                position: OUTSIDE_END,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                color: BLACK,\n                background: '',\n                border: {\n                    width: 1,\n                    color: ''\n                },\n                aboveAxis: true,\n                vertical: false,\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                zIndex: 2\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var barLabel = this, options = barLabel.options, vertical = options.vertical, aboveAxis = options.aboveAxis, text = barLabel.children[0], box = text.box, padding = text.options.padding;\n                text.options.align = vertical ? CENTER : LEFT;\n                text.options.vAlign = vertical ? TOP : CENTER;\n                if (options.position == INSIDE_END) {\n                    if (vertical) {\n                        text.options.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            text.options.vAlign = BOTTOM;\n                        }\n                    } else {\n                        text.options.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position == CENTER) {\n                    text.options.vAlign = CENTER;\n                    text.options.align = CENTER;\n                } else if (options.position == INSIDE_BASE) {\n                    if (vertical) {\n                        text.options.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        text.options.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position == OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        text.options.align = CENTER;\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (targetBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (targetBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(targetBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var barLabel = this, vertical = barLabel.options.vertical, field = vertical ? Y : X, start = field + '1', end = field + '2', text = barLabel.children[0], parentBox = barLabel.parent.box, targetBox;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    targetBox = text.paddingBox.clone();\n                    targetBox[start] = math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                var item = this;\n                BoxElement.fn.init.call(item, options);\n                item.createContainer();\n                item.createMarker();\n                item.createLabel();\n            },\n            createContainer: function () {\n                var item = this;\n                item.container = new FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                item.append(item.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var item = this, options = item.options, labelOptions = deepExtend({}, options.labels);\n                item.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                ChartElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = draw.Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                    widget._legendItemClick(args.seriesIndex, args.pointIndex);\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventTargetElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var that = this;\n                var options = that.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    that.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: that.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            that.createVisual();\n                            that.renderChildren();\n                            that.renderComplete();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    ChartElement.fn.renderVisual.call(that);\n                }\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            render: function () {\n                var legendItem, items = this.children;\n                var options = this.options;\n                var vertical = options.vertical;\n                this.visual = new draw.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < items.length; idx++) {\n                    legendItem = items[idx];\n                    legendItem.reflow(new Box2D());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box2D();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: noop\n        });\n        var Legend = ChartElement.extend({\n            init: function (options) {\n                var legend = this;\n                ChartElement.fn.init.call(legend, options);\n                if (!inArray(legend.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    legend.options.position = RIGHT;\n                }\n                legend.createContainer();\n                legend.createItems();\n            },\n            options: {\n                position: RIGHT,\n                items: [],\n                labels: { margin: { left: 6 } },\n                offsetX: 0,\n                offsetY: 0,\n                margin: getSpacing(5),\n                padding: getSpacing(5),\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                item: { cursor: POINTER },\n                spacing: 6,\n                background: '',\n                zIndex: 1,\n                markers: {\n                    border: { width: 1 },\n                    width: 7,\n                    height: 7,\n                    type: 'rect',\n                    align: LEFT,\n                    vAlign: CENTER\n                }\n            },\n            createContainer: function () {\n                var legend = this, options = legend.options, userAlign = options.align, position = options.position, align = position, vAlign = CENTER;\n                if (position == CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign == 'start') {\n                        align = LEFT;\n                    } else if (userAlign == 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign == 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign == 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                legend.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                legend.append(legend.container);\n            },\n            createItems: function () {\n                var legend = this, options = legend.options, items = options.items, count = items.length, vertical = legend.isVertical(), innerElement, i, item;\n                innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                });\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                for (i = 0; i < count; i++) {\n                    item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                legend.container.append(innerElement);\n            },\n            isVertical: function () {\n                var legend = this, options = legend.options, orientation = options.orientation, position = options.position, vertical = position == CUSTOM && orientation != HORIZONTAL || (defined(orientation) ? orientation != HORIZONTAL : inArray(position, [\n                        LEFT,\n                        RIGHT\n                    ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var legend = this, options = legend.options;\n                targetBox = targetBox.clone();\n                if (!legend.hasItems()) {\n                    legend.box = targetBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    legend.containerCustomReflow(targetBox);\n                    legend.box = targetBox;\n                } else {\n                    legend.containerReflow(targetBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var legend = this, options = legend.options, position = options.position, pos = position == TOP || position == BOTTOM ? X : Y, containerBox = targetBox.clone(), container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), alignTarget = targetBox.clone(), box;\n                if (position == LEFT || position == RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    legend.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                legend.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var legend = this, options = legend.options, offsetX = options.offsetX, offsetY = options.offsetY, container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(Box2D(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var CategoryAxis = Axis.extend({\n            init: function (options) {\n                var axis = this;\n                options = options || {};\n                this._initFields();\n                this._initCategories(options);\n                Axis.fn.init.call(axis, options);\n            },\n            _initFields: function () {\n                this._ticks = {};\n                this.outOfRangeMin = 0;\n                this.outOfRangeMax = 0;\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? math.floor(options.min) : 0;\n                    var max = definedMax ? options.justified ? math.floor(options.max) + 1 : math.ceil(options.max) : categories.length;\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            options: {\n                type: CATEGORY,\n                categories: [],\n                vertical: false,\n                majorGridLines: {\n                    visible: false,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { zIndex: 1 },\n                justified: false\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var range = this.rangeIndices();\n                var min = range.min;\n                var max = range.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var axis = this, options = axis.options, vertical = options.vertical, lineBox = axis.lineBox(), reverse = options.reverse, scale = axis.getScale(), range = axis.rangeIndices(), min = range.min, max = range.max, current = min % 1 !== 0 ? math.floor(min / 1) + stepSize : min, pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)], positions = [];\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var index = label.index;\n                var range = this.rangeIndices();\n                if (range.min > 0) {\n                    index = index - math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var box = this.box, labels = this.labels, valueAxis = this.options.vertical ? Y : X, start = box[valueAxis + 1], end = box[valueAxis + 2], firstLabel = labels[0], lastLabel = last(labels);\n                if (labels.length) {\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var axis = this, cache = axis._ticks, options = axis.options, range = axis.rangeIndices(), reverse = options.reverse, justified = options.justified, lineBox = axis.lineBox(), hash;\n                hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = axis.getTickPositions(1);\n                    cache.minorTicks = axis.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), min = range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)], slotBox = lineBox.clone(), p1, p2;\n                var singleSlot = !defined(to);\n                from = valueOrDefault(from, 0);\n                to = valueOrDefault(to, from);\n                to = math.max(to - 1, from);\n                to = math.max(from, to);\n                p1 = lineStart + (from - min) * scale;\n                p2 = lineStart + (to + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            slot: function (from, to, limit) {\n                if (typeof from === 'string') {\n                    from = this.categoryIndex(from);\n                }\n                if (typeof to === 'string') {\n                    to = this.categoryIndex(to);\n                }\n                return Axis.fn.slot.call(this, from, to, limit);\n            },\n            pointCategoryIndex: function (point) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), startValue = reverse ? range.max : range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + 1], lineEnd = lineBox[valueAxis + 2], pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var size = pos - lineStart;\n                var value = size / scale;\n                value = startValue + value;\n                var diff = value % 1;\n                if (justified) {\n                    value = math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = indexOf(value, options.srcCategories || options.categories);\n                return index - math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = options.categories.length, scale = size / range, offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var totalRange = this.totalRange();\n                var totalMax = totalRange.max;\n                var totalMin = totalRange.min;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var axis = this, options = axis.options, range = options.categories.length, delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var justified = options.justified;\n                var range = this.totalRangeIndices(true);\n                var min = range.min;\n                var max = range.max;\n                var start = math.floor(min);\n                var skip;\n                if (!justified) {\n                    min = math.floor(min);\n                    max = math.ceil(max);\n                } else {\n                    min = math.ceil(min);\n                    max = math.floor(max);\n                }\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var axis = this, options = axis.options, dataItem = options.dataItems ? options.dataItems[index] : null, category = valueOrDefault(options.categories[index], ''), text = axis.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var categories = this.options.categories;\n                return categories.length && (categories.length > value && value >= 0);\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true), scale = this.getScale(), offset = round(delta / scale, DEFAULT_PRECISION), totalRange = this.totalRange(), min = range.min + offset, max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var axis = this, options = axis.options, reverse = options.reverse, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.totalRangeIndices(true), scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                return {\n                    min: math.min(min, max),\n                    max: math.max(min, max)\n                };\n            },\n            valueRange: function () {\n                return this.range();\n            }\n        });\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (options) {\n                var axis = this, baseUnit, useDefault;\n                options = options || {};\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: toDate(options.categories),\n                    min: toDate(options.min),\n                    max: toDate(options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    baseUnit = (options.baseUnit || '').toLowerCase();\n                    useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = axis.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        axis.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    axis.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this._initFields();\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                labels: { dateFormats: DateLabelFormats },\n                autoBaseUnitSteps: {\n                    milliseconds: [\n                        1,\n                        10,\n                        100\n                    ],\n                    seconds: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    minutes: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    hours: [\n                        1,\n                        2,\n                        3\n                    ],\n                    days: [\n                        1,\n                        2,\n                        3\n                    ],\n                    weeks: [\n                        1,\n                        2\n                    ],\n                    months: [\n                        1,\n                        2,\n                        3,\n                        6\n                    ],\n                    years: [\n                        1,\n                        2,\n                        3,\n                        5,\n                        10,\n                        25,\n                        50\n                    ]\n                },\n                maxDateGroups: 10\n            },\n            shouldRenderNote: function (value) {\n                var axis = this, range = axis.range(), categories = axis.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return toDate(value);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / (range.max - range.min), offset = round(delta / scale, DEFAULT_PRECISION), from, to;\n                if (range.min && range.max) {\n                    from = addTicks(options.min || range.min, offset);\n                    to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var axis = this, rounds = math.abs(delta), range = axis.range(), from = range.min, to = range.max, step;\n                if (range.min && range.max) {\n                    while (rounds--) {\n                        range = dateDiff(from, to);\n                        step = math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    range = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return range;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories, count = defined(categories) ? categories.length : 0, categoryIx, cat, diff, minDiff = MAX_VALUE, lastCat, unit;\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    cat = categories[categoryIx];\n                    if (cat && lastCat) {\n                        diff = absoluteDateDiff(cat, lastCat);\n                        if (diff > 0) {\n                            minDiff = math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCat = cat;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var categories = options.categories;\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = math.floor(minIdx);\n                        maxIdx = options.justified ? math.floor(maxIdx) : math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = math.floor(range.min);\n                var max = math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = this.currentRange(), totalLimits = this.totalLimits(), min = range.min, max = range.max, scale = size / (max - min), offset = round(delta / scale, DEFAULT_PRECISION), panRange, from, to;\n                from = addTicks(min, offset);\n                to = addTicks(max, offset);\n                panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var currentRange = this.currentRange();\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var weekStartDay = options.weekStartDay;\n                var rangeMax = currentRange.max;\n                var rangeMin = currentRange.min;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit == FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var baseUnitIndex = indexOf(baseUnit, BASE_UNITS);\n                    var autoBaseUnitStep;\n                    var diff = dateDiff(max, min);\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (min && max && dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (options) {\n                options = options || this.options;\n                var categories = options.categories, autoUnit = options.baseUnit === FIT, baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit, baseUnitStep = options.baseUnitStep || 1, stepOptions = {\n                        baseUnit: baseUnit,\n                        baseUnitStep: baseUnitStep,\n                        weekStartDay: options.weekStartDay\n                    }, categoryLimits = this._categoryRange(categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var axis = this, categoryLimits = this._categoryRange(options.categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max), autoUnit = options.baseUnit === FIT, autoUnitIx = 0, baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit, span = max - min, units = span / TIME_PER_UNIT[baseUnit], totalUnits = units, maxDateGroups = options.maxDateGroups || axis.options.maxDateGroups, autoBaseUnitSteps = deepExtend({}, axis.options.autoBaseUnitSteps, options.autoBaseUnitSteps), unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            _timeScale: function () {\n                var axis = this, range = axis.range(), options = axis.options, lineBox = axis.lineBox(), vertical = options.vertical, lineSize = vertical ? lineBox.height() : lineBox.width(), timeRange;\n                if (options.justified && options._collapse !== false) {\n                    var categoryLimits = this._categoryRange(options.categories);\n                    var maxCategory = toTime(categoryLimits.max);\n                    timeRange = toDate(maxCategory) - range.min;\n                } else {\n                    timeRange = range.max - range.min;\n                }\n                return lineSize / timeRange;\n            },\n            groupCategories: function (options) {\n                var axis = this, categories = options.categories, maxCategory = toDate(sparseArrayMax(categories)), baseUnit = options.baseUnit, baseUnitStep = options.baseUnitStep || 1, range = axis.range(options), max = range.max, date, nextDate, groups = [];\n                for (date = range.min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, options, upper, roundToNext) {\n                options = options || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? math.ceil(step) : math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                } else {\n                    return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options, dataItem = options.dataItems ? options.dataItems[index] : null, date = options.categories[index], baseUnit = options.baseUnit, visible = true, unitFormat = labelOptions.dateFormats[baseUnit];\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var axis = this;\n                var options = axis.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var axis = this;\n                if (typeof a === OBJECT) {\n                    a = axis.categoryIndex(a);\n                }\n                if (typeof b === OBJECT) {\n                    b = axis.categoryIndex(b);\n                }\n                return CategoryAxis.fn.getSlot.call(axis, a, b, limit);\n            },\n            valueRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            }\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options) {\n                var axis = this;\n                options = options || {};\n                deepExtend(options, {\n                    min: toDate(options.min),\n                    max: toDate(options.max),\n                    axisCrossingValue: toDate(options.axisCrossingValues || options.axisCrossingValue)\n                });\n                this.seriesMin = toDate(seriesMin);\n                this.seriesMax = toDate(seriesMax);\n                options = axis.applyDefaults(this.seriesMin, this.seriesMax, options);\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                majorGridLines: {\n                    visible: true,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { dateFormats: DateLabelFormats }\n            },\n            applyDefaults: function (seriesMin, seriesMax, options) {\n                var axis = this, min = options.min || seriesMin, max = options.max || seriesMax, baseUnit = options.baseUnit || (max && min ? axis.timeUnits(absoluteDateDiff(max, min)) : HOURS), baseUnitTime = TIME_PER_UNIT[baseUnit], autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max), autoMax = ceilDate(toTime(max) + 1, baseUnit), userMajorUnit = options.majorUnit ? options.majorUnit : undefined, majorUnit = userMajorUnit || dataviz.ceil(dataviz.autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime, actualUnits = duration(autoMin, autoMax, baseUnit), totalUnits = dataviz.ceil(actualUnits, majorUnit), unitsToAdd = totalUnits - actualUnits, head = math.floor(unitsToAdd / 2), tail = unitsToAdd - head;\n                if (!options.baseUnit) {\n                    delete options.baseUnit;\n                }\n                options.baseUnit = options.baseUnit || baseUnit;\n                options.min = options.min || addDuration(autoMin, -head, baseUnit);\n                options.max = options.max || addDuration(autoMax, tail, baseUnit);\n                options.minorUnit = options.minorUnit || majorUnit / 5;\n                options.majorUnit = majorUnit;\n                this.totalMin = toTime(floorDate(toTime(seriesMin) - 1, baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(seriesMax) + 1, baseUnit));\n                return options;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.fn.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.fn.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            timeUnits: function (delta) {\n                var unit = HOURS;\n                if (delta >= TIME_PER_YEAR) {\n                    unit = YEARS;\n                } else if (delta >= TIME_PER_MONTH) {\n                    unit = MONTHS;\n                } else if (delta >= TIME_PER_WEEK) {\n                    unit = WEEKS;\n                } else if (delta >= TIME_PER_DAY) {\n                    unit = DAYS;\n                }\n                return unit;\n            },\n            translateRange: function (delta, exact) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / dateDiff(range.max, range.min), offset = round(delta / scale, DEFAULT_PRECISION), from = addTicks(options.min, offset), to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var axis = this, options = axis.options, rounds = math.abs(delta), from = options.min, to = options.max, range, step;\n                while (rounds--) {\n                    range = dateDiff(from, to);\n                    step = math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = math.min(startValue, endValue);\n                var max = math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        var ClusterLayout = ChartElement.extend({\n            options: {\n                vertical: false,\n                gap: 0,\n                spacing: 0\n            },\n            reflow: function (box) {\n                var cluster = this, options = cluster.options, vertical = options.vertical, axis = vertical ? Y : X, children = cluster.children, gap = options.gap, spacing = options.spacing, count = children.length, slots = count + gap + spacing * (count - 1), slotSize = (vertical ? box.height() : box.width()) / slots, position = box[axis + 1] + slotSize * (gap / 2), childBox, i;\n                for (i = 0; i < count; i++) {\n                    childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        var StackWrap = ChartElement.extend({\n            options: { vertical: true },\n            reflow: function (targetBox) {\n                var options = this.options, vertical = options.vertical, positionAxis = vertical ? X : Y, children = this.children, box = this.box = new Box2D(), childrenCount = children.length, i;\n                for (i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i], childBox;\n                    if (currentChild.visible !== false) {\n                        childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventTargetElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var element = this, options = element.options.notes, text = element.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    element.note = new Note(element.value, text, element.dataItem, element.category, element.series, element.options.notes);\n                    element.append(element.note);\n                }\n            }\n        };\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                var bar = this;\n                ChartElement.fn.init.call(bar);\n                bar.options = options;\n                bar.color = options.color || WHITE;\n                bar.aboveAxis = valueOrDefault(bar.options.aboveAxis, true);\n                bar.value = value;\n            },\n            defaults: {\n                border: { width: 1 },\n                vertical: true,\n                overlay: { gradient: GLASS },\n                labels: {\n                    visible: false,\n                    format: '{0}'\n                },\n                opacity: 1,\n                notes: { label: {} }\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                } else {\n                    this._rendered = true;\n                }\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                var labelText;\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, options.labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var bar = this, label = bar.label;\n                bar.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = bar.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (bar.note) {\n                    bar.note.reflow(targetBox);\n                }\n                if (bar.errorBars) {\n                    for (var i = 0; i < bar.errorBars.length; i++) {\n                        bar.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var bar = this;\n                var box = bar.box;\n                var options = bar.options;\n                var customVisual = options.visual;\n                if (bar.visible !== false) {\n                    ChartElement.fn.createVisual.call(bar);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: bar.category,\n                            dataItem: bar.dataItem,\n                            value: bar.value,\n                            sender: bar.getChart(),\n                            series: bar.series,\n                            percentage: bar.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: bar.runningTotal,\n                            total: bar.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                bar.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            bar.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        bar.createRect(bar.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = draw.Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    visual.append(this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = draw.Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var bar = this, options = bar.options, color = bar.color, border = options.border, borderColor = border.color, brightness = border._brightness || BAR_BORDER_BRIGHTNESS;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var bar = this, options = bar.options, box = bar.box, vertical = options.vertical, aboveAxis = bar.aboveAxis, clipBox = bar.owner.pane.clipBox() || box, x, y;\n                if (vertical) {\n                    x = math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    y = aboveAxis ? math.max(box.y1, clipBox.y1) : math.min(box.y2, clipBox.y2) - tooltipHeight;\n                } else {\n                    var x1 = math.max(box.x1, clipBox.x1), x2 = math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        x = aboveAxis ? x2 - tooltipWidth : x1;\n                        y = math.max(box.y1, clipBox.y1) - tooltipHeight - TOOLTIP_OFFSET;\n                    } else {\n                        x = aboveAxis ? x2 + TOOLTIP_OFFSET : x1 - tooltipWidth - TOOLTIP_OFFSET;\n                        y = math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return new Point2D(x, y);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.fn, PointEventsMixin);\n        deepExtend(Bar.fn, NoteMixin);\n        var BarChartAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                var element = this.element;\n                var options = this.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new geom.Point(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(geom.transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = interpolate(this.fromScale.x, 1, pos);\n                var scaleY = interpolate(this.fromScale.y, 1, pos);\n                this.element.transform(geom.transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                draw.Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        draw.AnimationFactory.current.register(BAR, BarChartAnimation);\n        var FadeInAnimation = draw.Animation.extend({\n            options: {\n                duration: 200,\n                easing: LINEAR\n            },\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        draw.AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var ErrorRangeCalculator = function (errorValue, series, field) {\n            var that = this;\n            that.initGlobalRanges(errorValue, series, field);\n        };\n        ErrorRangeCalculator.prototype = ErrorRangeCalculator.fn = {\n            percentRegex: /percent(?:\\w*)\\((\\d+)\\)/,\n            standardDeviationRegex: new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$'),\n            initGlobalRanges: function (errorValue, series, field) {\n                var that = this, data = series.data, deviationMatch = that.standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var average = that.getAverage(data), deviation = that.getStandardDeviation(data, average, false), multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1, errorRange = {\n                            low: average.value - deviation * multiple,\n                            high: average.value + deviation * multiple\n                        };\n                    that.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var standardError = that.getStandardError(data, that.getAverage(data));\n                    that.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data, binder = SeriesBinder.current, valueFields = binder.valueFields(series), item = defined(data[0]) ? data[0] : {}, idx, srcValueFields, valueGetter;\n                if (isArray(item)) {\n                    idx = field ? indexOf(field, valueFields) : 0;\n                    valueGetter = getter('[' + idx + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[indexOf(field, valueFields)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var that = this, low, high, value;\n                if (!defined(errorValue)) {\n                    return;\n                }\n                if (that.globalRange) {\n                    return that.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = that.percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - math.abs(percentValue);\n                    high = pointValue + math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var squareDifferenceSum = 0, length = data.length, total = isSample ? average.count - 1 : average.count, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += math.pow(value - average.value, 2);\n                    }\n                }\n                return math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var sum = 0, count = 0, length = data.length, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        };\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                chart.valueAxisRanges = {};\n                chart.points = [];\n                chart.categoryPoints = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                invertAxes: false,\n                isStacked: false,\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    var categorySum = 0;\n                    var otherValues = [];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += math.abs(other.value);\n                                otherValues.push(math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var categoryIx = point.categoryIx;\n                var categoryPts = this.categoryPoints[categoryIx];\n                if (this.options.isStacked) {\n                    startValue = startValue || 0;\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this.options.isStacked100) {\n                                plotValue = math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value || axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPts = this.categoryPoints[i];\n                    if (!categoryPts) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPts.length; pIx++) {\n                        var point = categoryPts[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = math.max(max, to);\n                                    min = math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var chart = this;\n                var chartSeries = chart.options.series;\n                var isStacked = chart.options.isStacked;\n                var limits;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        limits = limitsCache[key];\n                        if (!limits) {\n                            limits = chart.stackLimits(axisName, series.stack);\n                            var errorTotals = chart.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = math.min(limits.min, sparseArrayMin(errorTotals.negative));\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = math.max(limits.max, sparseArrayMax(errorTotals.positive));\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            chart.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var chart = this, value = point.value, series = point.series, seriesIx = point.seriesIx, errorBars = point.options.errorBars, errorRange, lowValue = data.fields[ERROR_LOW_FIELD], highValue = data.fields[ERROR_HIGH_FIELD];\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    chart.seriesErrorRanges = chart.seriesErrorRanges || [];\n                    chart.seriesErrorRanges[seriesIx] = chart.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = chart.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    chart.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var chart = this, series = point.series, low = point.low, high = point.high, isVertical = !chart.options.invertAxes, options = point.options.errorBars, errorBar, stackedErrorRange;\n                if (chart.options.isStacked) {\n                    stackedErrorRange = chart.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    chart.updateRange({ value: low }, fields);\n                    chart.updateRange({ value: high }, fields);\n                }\n                errorBar = new CategoricalErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var chart = this, plotValue = chart.plotRange(point, 0)[1] - point.value, low = point.low + plotValue, high = point.high + plotValue;\n                chart.errorTotals = chart.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    chart.errorTotals.negative[categoryIx] = math.min(chart.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    chart.errorTotals.positive[categoryIx] = math.max(chart.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = chart.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    chart.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = chart.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = chart;\n                    point.dataItem = series.data[categoryIx];\n                    point.noteText = data.fields.noteText;\n                    chart.addErrorBar(point, data, categoryIx);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                chart.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return options;\n            },\n            updateRange: function (data, fields) {\n                var chart = this, axisName = fields.series.axis, value = data.value, axisRange = chart.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, value);\n                    axisRange.max = math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea, axisName = series.axis, axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var chart = this, pointIx = 0, categorySlots = chart.categorySlots = [], chartPoints = chart.points, categoryAxis = chart.categoryAxis, value, valueAxis, point;\n                chart.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    value = chart.pointValue(data);\n                    valueAxis = chart.seriesValueAxis(currentSeries);\n                    point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = chart.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = chart.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !chart.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = chart.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = chart.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (chart.options.isStacked100) {\n                                point.percentage = chart.plotValue(point);\n                            }\n                            chart.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.reflowCategories(categorySlots);\n                chart.box = targetBox;\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis, options = valueAxis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var chart = this, options = chart.options, invertAxes = options.invertAxes, slotX = invertAxes ? valueSlot : categorySlot, slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, categories = chart.categoryAxis.options.categories || [], count = categoriesCount(series), categoryIx, seriesIx, pointData, currentCategory, currentSeries, seriesCount = series.length;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                        currentSeries = series[seriesIx];\n                        currentCategory = categories[categoryIx];\n                        pointData = this._bindPoint(currentSeries, seriesIx, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx\n                        });\n                    }\n                }\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMaxPoint', seriesIx, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        var BarChart = CategoricalChart.extend({\n            options: { animation: { type: BAR } },\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = chart.pointValue(data);\n                var options = chart.options;\n                var children = chart.children;\n                var isStacked = chart.options.isStacked;\n                var point;\n                var pointType = chart.pointType();\n                var pointOptions;\n                var cluster;\n                var clusterType = chart.clusterType();\n                pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position == OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new pointType(value, pointOptions);\n                point.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = chart.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var chart = this, options = chart.options, categorySlot = categoryAxis.getSlot(categoryIx), startValue = valueAxis.startValue(), stackAxis, zeroSlot;\n                if (options.isStacked) {\n                    zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                ChartElement.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var points = this.points;\n                var point, pointVisual;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (this.options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new geom.Point(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        var RangeBar = Bar.extend({\n            defaults: {\n                labels: { format: '{0} - {1}' },\n                tooltip: { format: '{1}' }\n            },\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelText;\n                if (options.template) {\n                    var labelTemplate = template(options.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var rangeBar = this, labelFrom = rangeBar.labelFrom, labelTo = rangeBar.labelTo;\n                rangeBar.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = rangeBar.value.from > rangeBar.value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = rangeBar.value.to > rangeBar.value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (rangeBar.note) {\n                    rangeBar.note.reflow(targetBox);\n                }\n            }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value.from, point.value.to);\n            },\n            plotLimits: CategoricalChart.fn.plotLimits,\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, from = value.from, to = value.to, axisRange = chart.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, from);\n                    axisRange.max = math.max(axisRange.max, from);\n                    axisRange.min = math.min(axisRange.min, to);\n                    axisRange.max = math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                chart.wrapData(options);\n                CategoricalChart.fn.init.call(chart, plotArea, options);\n            },\n            options: { animation: { type: BAR } },\n            wrapData: function (options) {\n                var series = options.series, i, data, seriesItem;\n                for (i = 0; i < series.length; i++) {\n                    seriesItem = series[i];\n                    data = seriesItem.data;\n                    if (data && !isArray(data[0]) && typeof data[0] != OBJECT) {\n                        seriesItem.data = [data];\n                    }\n                }\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var options = chart.options;\n                var children = chart.children;\n                var bullet;\n                var bulletOptions;\n                var cluster;\n                bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = chart.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, current = value.current, target = value.target, axisRange = chart.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min.apply(math, [\n                        axisRange.min,\n                        current,\n                        target\n                    ]);\n                    axisRange.max = math.max.apply(math, [\n                        axisRange.max,\n                        current,\n                        target\n                    ]);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var points = this.points;\n                var point;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    point.options.animation = this.options.animation;\n                    point.createAnimation();\n                }\n            },\n            _setAnimationOptions: BarChart.fn._setAnimationOptions\n        });\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                var bullet = this;\n                ChartElement.fn.init.call(bullet, options);\n                bullet.aboveAxis = bullet.options.aboveAxis;\n                bullet.color = options.color || WHITE;\n                bullet.value = value;\n            },\n            options: {\n                border: { width: 1 },\n                vertical: false,\n                opacity: 1,\n                target: {\n                    shape: '',\n                    border: {\n                        width: 0,\n                        color: 'green'\n                    },\n                    line: { width: 2 }\n                },\n                tooltip: { format: 'Current: {0}</br>Target: {1}' }\n            },\n            render: function () {\n                var bullet = this, options = bullet.options;\n                if (!bullet._rendered) {\n                    bullet._rendered = true;\n                    if (defined(bullet.value.target)) {\n                        bullet.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || bullet.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        bullet.target.value = this.value;\n                        bullet.target.dataItem = this.dataItem;\n                        bullet.target.series = this.series;\n                        bullet.append(bullet.target);\n                    }\n                    bullet.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var bullet = this, options = bullet.options, chart = bullet.owner, target = bullet.target, invertAxes = options.invertAxes, valueAxis = chart.seriesValueAxis(bullet.options), categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis), targetValueSlot = valueAxis.getSlot(bullet.value.target), targetSlotX = invertAxes ? targetValueSlot : categorySlot, targetSlotY = invertAxes ? categorySlot : targetValueSlot, targetSlot;\n                if (target) {\n                    targetSlot = new Box2D(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (bullet.note) {\n                    bullet.note.reflow(box);\n                }\n                bullet.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = draw.Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            tooltipAnchor: Bar.fn.tooltipAnchor,\n            createHighlight: function (style) {\n                return draw.Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                var bullet = this;\n                return bullet.owner.formatPointValue(bullet, format);\n            }\n        });\n        deepExtend(Bullet.fn, PointEventsMixin);\n        deepExtend(Bullet.fn, NoteMixin);\n        var Target = ShapeElement.extend();\n        deepExtend(Target.fn, PointEventsMixin);\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                var errorBar = this;\n                errorBar.low = low;\n                errorBar.high = high;\n                errorBar.isVertical = isVertical;\n                errorBar.chart = chart;\n                errorBar.series = series;\n                ChartElement.fn.init.call(errorBar, options);\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                endCaps: true,\n                line: { width: 1 },\n                zIndex: 1\n            },\n            getAxis: function () {\n            },\n            reflow: function (targetBox) {\n                var linePoints, errorBar = this, endCaps = errorBar.options.endCaps, isVertical = errorBar.isVertical, axis = errorBar.getAxis(), valueBox = axis.getSlot(errorBar.low, errorBar.high), centerBox = targetBox.center(), capsWidth = errorBar.getCapsWidth(targetBox, isVertical), capValue = isVertical ? centerBox.x : centerBox.y, capStart = capValue - capsWidth, capEnd = capValue + capsWidth;\n                if (isVertical) {\n                    linePoints = [\n                        Point2D(centerBox.x, valueBox.y1),\n                        Point2D(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(capStart, valueBox.y1), Point2D(capEnd, valueBox.y1), Point2D(capStart, valueBox.y2), Point2D(capEnd, valueBox.y2));\n                    }\n                    errorBar.box = Box2D(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        Point2D(valueBox.x1, centerBox.y),\n                        Point2D(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(valueBox.x1, capStart), Point2D(valueBox.x1, capEnd), Point2D(valueBox.x2, capStart), Point2D(valueBox.x2, capEnd));\n                    }\n                    errorBar.box = Box2D(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                errorBar.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height(), capsWidth = math.min(math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var that = this;\n                var options = that.options;\n                var visual = options.visual;\n                if (visual) {\n                    that.visual = visual({\n                        low: that.low,\n                        high: that.high,\n                        rect: that.box.toRect(),\n                        sender: that.getChart(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            that.createDefaultVisual();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    that.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var errorBar = this, options = errorBar.options, lineOptions = {\n                        stroke: {\n                            color: options.color,\n                            width: options.line.width,\n                            dashType: options.line.dashType\n                        }\n                    }, linePoints = errorBar.linePoints;\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new draw.Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    this.visual.append(line);\n                }\n            }\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axis = chart.seriesValueAxis(series);\n                return axis;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axes = chart.seriesAxes(series), axis = errorBar.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point);\n                point.value = value;\n                point.options = options;\n                point.aboveAxis = valueOrDefault(point.options.aboveAxis, true);\n                point.tooltipTracking = true;\n            },\n            defaults: {\n                vertical: true,\n                markers: {\n                    visible: true,\n                    background: WHITE,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    border: { width: 2 },\n                    opacity: 1\n                },\n                labels: {\n                    visible: false,\n                    position: ABOVE,\n                    margin: getSpacing(3),\n                    padding: getSpacing(4),\n                    animation: {\n                        type: FADEIN,\n                        delay: INITIAL_ANIMATION_DURATION\n                    }\n                },\n                notes: { label: {} },\n                highlight: { markers: { border: {} } }\n            },\n            render: function () {\n                var point = this, options = point.options, markers = options.markers, labels = options.labels, labelText = point.value;\n                if (point._rendered) {\n                    return;\n                } else {\n                    point._rendered = true;\n                }\n                if (markers.visible && markers.size) {\n                    point.marker = point.createMarker();\n                    point.append(point.marker);\n                }\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: point.dataItem,\n                            category: point.category,\n                            value: point.value,\n                            percentage: point.percentage,\n                            stackValue: this.stackValue,\n                            series: point.series\n                        });\n                    } else if (labels.format) {\n                        labelText = point.formatValue(labels.format);\n                    }\n                    point.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    point.append(point.label);\n                }\n                point.createNote();\n                if (point.errorBar) {\n                    point.append(point.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: noop,\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var point = this, options = point.options, vertical = options.vertical, aboveAxis = point.aboveAxis, childBox, center;\n                point.render();\n                point.box = targetBox;\n                childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                point._childBox = childBox;\n                if (point.marker) {\n                    point.marker.reflow(childBox);\n                }\n                point.reflowLabel(childBox);\n                if (point.errorBars) {\n                    for (var i = 0; i < point.errorBars.length; i++) {\n                        point.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (point.note) {\n                    var noteTargetBox = point.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        center = noteTargetBox.center();\n                        noteTargetBox = Box2D(center.x, center.y, center.x, center.y);\n                    }\n                    point.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var point = this, options = point.options, label = point.label, anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(point.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var markers = highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual;\n                var rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geom.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var point = this, markerBox = point.markerBox(), aboveAxis = point.aboveAxis, x = markerBox.x2 + TOOLTIP_OFFSET, y = aboveAxis ? markerBox.y1 - tooltipHeight : markerBox.y2, clipBox = point.owner.pane.clipBox(), showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    return Point2D(x, y);\n                }\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        deepExtend(LinePoint.fn, PointEventsMixin);\n        deepExtend(LinePoint.fn, NoteMixin);\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                var point = this;\n                LinePoint.fn.init.call(point, value, options);\n                point.category = value.category;\n            },\n            defaults: {\n                labels: { position: CENTER },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    }\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = markers.size / 2 - border.width / 2;\n                var overlay = new draw.Circle(new geom.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                return overlay;\n            }\n        });\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.linePoints = linePoints;\n                segment.series = series;\n                segment.seriesIx = seriesIx;\n            },\n            options: { closed: false },\n            points: function (visualPoints) {\n                var segment = this, linePoints = segment.linePoints.concat(visualPoints || []), points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var options = this.options;\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = draw.Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                var segment = this, seriesIx = segment.seriesIx;\n                return segment.parent.getNearestPoint(coords.x, coords.y, seriesIx);\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, currentSeries, seriesIx, seriesCount = seriesPoints.length, sortedPoints, linePoints, point, pointIx, pointCount, lastSegment;\n                this._segments = [];\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    sortedPoints = chart.sortPoints(seriesPoints[seriesIx]);\n                    pointCount = sortedPoints.length;\n                    linePoints = [];\n                    for (pointIx = 0; pointIx < pointCount; pointIx++) {\n                        point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (chart.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues, assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point2D(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = draw.Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                var point;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n                chart.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields.value;\n                var missingValues = chart.seriesMissingValues(series);\n                var point;\n                var pointOptions;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this.plotValue(other);\n                        if (this.options.isStacked100) {\n                            plotValue = math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.fn, LineChartMixin, ClipAnimationMixin);\n        var ClipAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(interpolate(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        draw.AnimationFactory.current.register(CLIP, ClipAnimation);\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var segment = this, points;\n                points = segment.calculateStepPoints(segment.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(segment.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, categoryAxis = plotArea.seriesCategoryAxis(segment.series), isInterpolate = chart.seriesMissingValues(segment.series) === INTERPOLATE, length = points.length, reverse = categoryAxis.options.reverse, vertical = categoryAxis.options.vertical, dir = reverse ? 2 : 1, revDir = reverse ? 1 : 2, prevPoint, point, i, prevMarkerBoxCenter, markerBoxCenter, result = [];\n                for (i = 1; i < length; i++) {\n                    prevPoint = points[i - 1];\n                    point = points[i];\n                    prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new geom.Point(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new geom.Point(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new geom.Point(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new geom.Point(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new geom.Point(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new geom.Point(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new geom.Point(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new draw.Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var AreaSegmentMixin = {\n            points: function () {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, stackPoints = segment.stackPoints, points = segment._linePoints(stackPoints), pos = invertAxes ? X : Y, firstPoint, lastPoint;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!segment.stackPoints && points.length > 1) {\n                    firstPoint = points[0];\n                    lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new geom.Point(end, firstPoint.y));\n                        points.push(new geom.Point(end, lastPoint.y));\n                    } else {\n                        points.unshift(new geom.Point(firstPoint.x, end));\n                        points.push(new geom.Point(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = draw.Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = draw.Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: LineSegment.fn.points\n        });\n        deepExtend(AreaSegment.fn, AreaSegmentMixin);\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var chart = this, options = chart.options, isStacked = options.isStacked, stackPoints, pointType, style = (currentSeries.line || {}).style;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues != 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    var stackPoint, pointSlot;\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        stackPoint = stackPoints[idx];\n                        pointSlot = this.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var endIdx = startIdx + linePoints.length;\n                var stackPoints = [];\n                var currentSeriesIx;\n                var point, gapStackPoint;\n                this._stackPoints = this._stackPoints || [];\n                for (var idx = startIdx; idx < endIdx; idx++) {\n                    currentSeriesIx = seriesIx;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][idx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && idx > startIdx && !seriesPoints[currentSeriesIx][idx - 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && idx + 1 < endIdx && !seriesPoints[currentSeriesIx][idx + 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        gapStackPoint = this._createGapStackPoint(idx);\n                        this._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var point;\n                while (seriesIdx > 0 && !point) {\n                    seriesIdx--;\n                    point = seriesPoints[seriesIdx][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[seriesIdx][categoryIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                var segment = this;\n                segment.prevSegment = prevSegment;\n                segment.isStacked = isStacked;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.fn.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new draw.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = $.map(prevStrokeSegments, function (segment) {\n                        return new draw.Segment(segment.anchor(), segment.controlOut(), segment.controlIn());\n                    }).reverse();\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new draw.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new draw.Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var segment = this, chart = segment.parent, prevSegment = segment.prevSegment, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, pos = invertAxes ? X : Y, segments = segment.strokeSegments(), firstPoint = segments[0].anchor(), lastPoint = last(segments).anchor();\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new draw.Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                StepLineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: StepLineSegment.fn.points\n        });\n        deepExtend(StepAreaSegment.fn, AreaSegmentMixin);\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.xAxisRanges = {};\n                chart.yAxisRanges = {};\n                chart.points = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                tooltip: { format: '{0}, {1}' },\n                labels: { format: '{0}, {1}' },\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            addErrorBar: function (point, field, fields) {\n                var errorRange, chart = this, value = point.value[field], valueErrorField = field + 'Value', lowField = field + 'ErrorLow', highField = field + 'ErrorHigh', seriesIx = fields.seriesIx, series = fields.series, errorBars = point.options.errorBars, lowValue = fields[lowField], highValue = fields[highField];\n                if (isNumber(value)) {\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        chart.seriesErrorRanges = chart.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        chart.seriesErrorRanges[field][seriesIx] = chart.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = chart.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        chart.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var chart = this, low = errorRange.low, high = errorRange.high, series = point.series, isVertical = field === Y, options = point.options.errorBars, item = {}, errorBar;\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                errorBar = new ScatterErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                chart.updateRange(item, series);\n                item[field] = high;\n                chart.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var chart = this, point, x = value.x, y = value.y, seriesIx = fields.seriesIx, series = this.options.series[seriesIx], missingValues = this.seriesMissingValues(series), seriesPoints = chart.seriesPoints[seriesIx];\n                if (!(hasValue(x) && hasValue(y))) {\n                    value = this.createMissingValue(value, missingValues);\n                }\n                if (value) {\n                    point = chart.createPoint(value, fields);\n                    if (point) {\n                        extend(point, fields);\n                        chart.addErrorBar(point, X, fields);\n                        chart.addErrorBar(point, Y, fields);\n                    }\n                    chart.updateRange(value, fields.series);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: noop,\n            updateRange: function (value, series) {\n                var chart = this, x = value.x, y = value.y, xAxisName = series.xAxis, yAxisName = series.yAxis, xAxisRange = chart.xAxisRanges[xAxisName], yAxisRange = chart.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = chart.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof x === STRING) {\n                        x = toDate(x);\n                    }\n                    xAxisRange.min = math.min(xAxisRange.min, x);\n                    xAxisRange.max = math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = chart.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof y === STRING) {\n                        y = toDate(y);\n                    }\n                    yAxisRange.min = math.min(yAxisRange.min, y);\n                    yAxisRange.max = math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'tempate',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return options;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, point;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var plotArea = this.plotArea, xAxisName = series.xAxis, xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX, yAxisName = series.yAxis, yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var chart = this, chartPoints = chart.points, pointIx = 0, point, seriesAxes, limit = !chart.options.clip;\n                chart.traverseDataPoints(function (value, fields) {\n                    point = chartPoints[pointIx++];\n                    seriesAxes = chart.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit), slotY = seriesAxes.y.getSlot(value.y, value.y, limit), pointSlot;\n                    if (point) {\n                        if (slotX && slotY) {\n                            pointSlot = chart.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, pointIx, seriesIx, currentSeries, currentSeriesPoints, pointData, value, fields;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        pointData = this._bindPoint(currentSeries, seriesIx, pointIx);\n                        value = pointData.valueFields;\n                        fields = pointData.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: chart\n                        }, fields));\n                    }\n                }\n            },\n            _bindPoint: CategoricalChart.fn._bindPoint,\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        deepExtend(ScatterChart.fn, ClipAnimationMixin);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                var chart = this;\n                ScatterChart.fn.render.call(chart);\n                chart.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.fn, LineChartMixin);\n        var BubbleChart = ScatterChart.extend({\n            init: function (plotArea, options) {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn.init.call(this, plotArea, options);\n            },\n            options: {\n                tooltip: { format: '{3}' },\n                labels: { format: '{3}' }\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = math.max(this._maxSize, math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                var chart = this;\n                chart.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(chart, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, pointsCount = series.data.length, delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount), animationOptions = {\n                        delay: delay,\n                        duration: INITIAL_ANIMATION_DURATION - delay,\n                        type: BUBBLE\n                    }, point, pointOptions;\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                point = new Bubble(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var chart = this, options = chart.options, series = options.series, boxSize = math.min(box.width(), box.height()), seriesIx, pointIx;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx], seriesPoints = chart.seriesPoints[seriesIx], minSize = currentSeries.minSize || math.max(boxSize * 0.02, 10), maxSize = currentSeries.maxSize || boxSize * 0.2, minR = minSize / 2, maxR = maxSize / 2, minArea = math.PI * minR * minR, maxArea = math.PI * maxR * maxR, areaRange = maxArea - minArea, areaRatio = areaRange / chart._maxSize;\n                    for (pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = math.abs(point.value.size) * areaRatio, r = math.sqrt((minArea + area) / math.PI), baseZIndex = valueOrDefault(point.options.zIndex, 0), zIndex = baseZIndex + (1 - r / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: r * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: noop,\n            createVisual: noop\n        });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            options: {\n                vertical: true,\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{4:d}</th>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), points = [], mid, ocSlot, lhSlot;\n                ocSlot = valueAxis.getSlot(value.open, value.close);\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                point.realBody = ocSlot;\n                mid = lhSlot.center().x;\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                point.lines = points;\n                point.box = lhSlot.clone().wrap(ocSlot);\n                if (!point._rendered) {\n                    point._rendered = true;\n                    point.createNote();\n                }\n                point.reflowNote();\n            },\n            reflowNote: function () {\n                var point = this;\n                if (point.note) {\n                    point.note.reflow(point.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new draw.Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = draw.Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = draw.Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var point = this, options = point.options, border = options.border, borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(point.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var point = this, box = point.box, clipBox = point.owner.pane.clipBox() || box;\n                return new Point2D(box.x2 + TOOLTIP_OFFSET, math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Candlestick.fn, PointEventsMixin);\n        deepExtend(Candlestick.fn, NoteMixin);\n        var CandlestickChart = CategoricalChart.extend({\n            options: {},\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var value = data.valueFields;\n                var children = chart.children;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var pointType = chart.pointType();\n                var color = data.fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type == CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !chart.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value);\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.fn, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), oPoints = [], cPoints = [], lhPoints = [], mid, oSlot, cSlot, lhSlot;\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                oSlot = valueAxis.getSlot(value.open, value.open);\n                cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                point.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                point.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                point.reflowNote();\n            },\n            createBody: $.noop\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var children = chart.children;\n                var value = data.valueFields;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value).concat(chart.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length, result = [], i, item;\n                for (i = 0; i < length; i++) {\n                    item = items[i];\n                    if (defined(item)) {\n                        appendIfNotNull(result, item);\n                    }\n                }\n                return result;\n            }\n        });\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point, options);\n                point.value = value;\n                point.createNote();\n            },\n            options: {\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                mean: {\n                    width: 2,\n                    dashType: 'dash'\n                },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{6:d}</th>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                },\n                outliers: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CROSS,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                },\n                extremes: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), whiskerSlot, boxSlot, medianSlot, meanSlot;\n                point.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                point.realBody = boxSlot;\n                point.reflowBoxSlot(box);\n                point.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                point.reflowWhiskerSlot(box);\n                medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    meanSlot = valueAxis.getSlot(value.mean);\n                    point.meanPoints = point.calcMeanPoints(box, meanSlot);\n                }\n                point.whiskerPoints = point.calcWhiskerPoints(boxSlot, whiskerSlot);\n                point.medianPoints = point.calcMedianPoints(box, medianSlot);\n                point.box = whiskerSlot.clone().wrap(boxSlot);\n                point.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var point = this, markers = options.markers || {}, value = point.value, outliers = value.outliers || [], outerFence = math.abs(value.q3 - value.q1) * 3, markersBorder, shape, outlierValue, i;\n                var elements = [];\n                for (i = 0; i < outliers.length; i++) {\n                    outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(point.color)) {\n                            markersBorder.color = point.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this.box = this.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.line);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.getBorderColor.call(this);\n            }\n        });\n        deepExtend(BoxPlot.fn, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                var segment = this;\n                segment.value = value;\n                segment.sector = sector;\n                ChartElement.fn.init.call(segment, options);\n            },\n            options: {\n                color: WHITE,\n                overlay: { gradient: ROUNDED_BEVEL },\n                border: { width: 0.5 },\n                labels: {\n                    visible: false,\n                    distance: 35,\n                    font: DEFAULT_FONT,\n                    margin: getSpacing(0.5),\n                    align: CIRCLE,\n                    zIndex: 1,\n                    position: OUTSIDE_END\n                },\n                animation: { type: PIE },\n                highlight: {\n                    visible: true,\n                    border: { width: 1 }\n                },\n                visible: true\n            },\n            render: function () {\n                var segment = this, options = segment.options, labels = options.labels, labelText = segment.value, labelTemplate;\n                if (segment._rendered || segment.visible === false) {\n                    return;\n                } else {\n                    segment._rendered = true;\n                }\n                if (labels.template) {\n                    labelTemplate = template(labels.template);\n                    labelText = labelTemplate({\n                        dataItem: segment.dataItem,\n                        category: segment.category,\n                        value: segment.value,\n                        series: segment.series,\n                        percentage: segment.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = autoFormat(labels.format, labelText);\n                }\n                if (labels.visible && labelText) {\n                    segment.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: segment.animationDelay\n                        }\n                    }));\n                    segment.append(segment.label);\n                }\n            },\n            reflow: function (targetBox) {\n                var segment = this;\n                segment.render();\n                segment.box = targetBox;\n                segment.reflowLabel();\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, labelsDistance = labelsOptions.distance, angle = sector.middle(), lp, x1, labelWidth, labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    labelWidth = label.box.width();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r = math.abs((sector.r - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position == INSIDE_END) {\n                        sector.r = sector.r - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.c.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(Box2D(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var segment = this, sector = segment.sector, options = segment.options;\n                ChartElement.fn.createVisual.call(this);\n                if (segment.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: segment.category,\n                            dataItem: segment.dataItem,\n                            value: segment.value,\n                            series: segment.series,\n                            percentage: segment.percentage,\n                            center: new geom.Point(sector.c.x, sector.c.y),\n                            radius: sector.r,\n                            innerRadius: sector.ir,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                segment.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            segment.visual.append(visual);\n                        }\n                    } else {\n                        segment.createSegmentVisual(segment.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var segment = this, sector = segment.sector, options = segment.options, borderOptions = options.border || {}, border = borderOptions.width > 0 ? {\n                        stroke: {\n                            color: borderOptions.color,\n                            width: borderOptions.width,\n                            opacity: borderOptions.opacity,\n                            dashType: borderOptions.dashType\n                        }\n                    } : {}, color = options.color, fill = {\n                        color: color,\n                        opacity: options.opacity\n                    }, visual;\n                visual = segment.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.c.x,\n                            sector.c.y\n                        ],\n                        innerRadius: sector.ir,\n                        radius: sector.r,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new draw.Circle(new geom.Circle(new geom.Point(sector.c.x, sector.c.y), sector.r), options);\n                } else {\n                    return ShapeBuilder.current.createRing(sector, options);\n                }\n            },\n            createAnimation: function () {\n                var options = this.options;\n                var center = this.sector.c;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var segment = this, highlight = segment.options.highlight || {}, border = highlight.border || {};\n                return segment.createSegment(segment.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.r,\n                    innerRadius: sector.ir,\n                    center: new geom.Point(sector.c.x, sector.c.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function (width, height) {\n                var point = this, box = point.sector.adjacentBox(TOOLTIP_OFFSET, width, height);\n                return new Point2D(box.x1, box.y1);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        deepExtend(PieSegment.fn, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var chart = this, legendOptions = chart.options.legend || {}, labelsOptions = legendOptions.labels || {}, inactiveItems = legendOptions.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, text, labelTemplate, markerColor, itemLabelOptions, pointVisible;\n                if (options && options.visibleInLegend !== false) {\n                    pointVisible = options.visible !== false;\n                    text = options.category || '';\n                    labelTemplate = pointVisible ? labelsOptions.template : inactiveItemsLabels.template || labelsOptions.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        chart.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.points = [];\n                chart.legendItems = [];\n                chart.render();\n            },\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                },\n                inactiveItems: {\n                    markers: {},\n                    labels: {}\n                }\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, colors = chart.plotArea.options.seriesColors || [], colorsCount = colors.length, series = options.series, seriesCount = series.length, currentSeries, pointData, fields, seriesIx, angle, data, anglePerValue, value, plotValue, explode, total, currentAngle, i, pointIx = 0;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    data = currentSeries.data;\n                    total = seriesTotal(currentSeries);\n                    anglePerValue = 360 / total;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx != seriesCount - 1) {\n                        if (currentSeries.labels.position == OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (i = 0; i < data.length; i++) {\n                        pointData = SeriesBinder.current.bindPoint(currentSeries, i);\n                        value = pointData.valueFields.value;\n                        plotValue = math.abs(value);\n                        fields = pointData.fields;\n                        angle = plotValue * anglePerValue;\n                        explode = data.length != 1 && !!fields.explode;\n                        if (!isFn(currentSeries.color)) {\n                            currentSeries.color = fields.color || colors[i % colorsCount];\n                        }\n                        callback(value, new Ring(null, 0, 0, currentAngle, angle), {\n                            owner: chart,\n                            category: fields.category || '',\n                            index: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? plotValue / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: fields.visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: chart.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (pointData.fields.visible !== false) {\n                            currentAngle += angle;\n                        }\n                        pointIx++;\n                    }\n                    pointIx = 0;\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                segment = new PieSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), newBox = Box2D(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth), newBoxCenter = newBox.center(), seriesConfigs = chart.seriesConfigs || [], boxCenter = box.center(), points = chart.points, count = points.length, seriesCount = options.series.length, leftSideLabels = [], rightSideLabels = [], seriesConfig, seriesIndex, label, segment, sector, r, i, c;\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                r = halfMinWidth - padding;\n                c = Point2D(r + newBox.x1 + padding, r + newBox.y1 + padding);\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    sector.r = r;\n                    sector.c = c;\n                    seriesIndex = segment.seriesIx;\n                    if (seriesConfigs.length) {\n                        seriesConfig = seriesConfigs[seriesIndex];\n                        sector.ir = seriesConfig.ir;\n                        sector.r = seriesConfig.r;\n                    }\n                    if (seriesIndex == seriesCount - 1 && segment.explode) {\n                        sector.c = sector.clone().radius(sector.r * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex == seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(chart.labelComparator(true));\n                    chart.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(chart.labelComparator(false));\n                    chart.rightLabelsReflow(rightSideLabels);\n                }\n                chart.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, firstBox = labels[0].box, count = labels.length - 1, lr = sector.r + segment.options.labels.distance, distances = [], secondBox, distance, i;\n                distance = round(firstBox.y1 - (sector.c.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (i = 0; i < count; i++) {\n                    firstBox = labels[i].box;\n                    secondBox = labels[i + 1].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.c.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var chart = this, count = distances.length, remaining, left, right, i;\n                for (i = 0; i < count; i++) {\n                    left = right = i;\n                    remaining = -distances[i];\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = chart._takeDistance(distances, i, --left, remaining);\n                        remaining = chart._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                chart.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                if (distances[position] > 0) {\n                    var available = math.min(distances[position], amount);\n                    amount -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return amount;\n            },\n            reflowLabels: function (distances, labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, labelsCount = labels.length, labelOptions = segment.options.labels, labelDistance = labelOptions.distance, boxY = sector.c.y - (sector.r + labelDistance) - labels[0].box.height(), label, boxX, box, i;\n                distances[0] += 2;\n                for (i = 0; i < labelsCount; i++) {\n                    label = labels[i];\n                    boxY += distances[i];\n                    box = label.box;\n                    boxX = chart.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation == RIGHT);\n                    if (label.orientation == RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.r + sector.c.x + labelDistance;\n                        }\n                        label.reflow(Box2D(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.c.x - sector.r - labelDistance;\n                        }\n                        label.reflow(Box2D(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var chart = this, options = chart.options, connectors = options.connectors, points = chart.points, connectorLine, count = points.length, space = 4, connectorsColor, sector, angle, segment, seriesIx, label, i;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    angle = sector.middle();\n                    label = segment.label;\n                    seriesIx = { seriesId: segment.seriesIx };\n                    connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        connectorLine = new draw.Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END && segment.value !== 0) {\n                            var box = label.box, centerPoint = sector.c, start = sector.point(angle), middle = Point2D(box.x1, box.center().y), sr, end, crossing;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation == RIGHT) {\n                                end = Point2D(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.min(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x < sector.c.x) {\n                                    sr = sector.c.x + sector.r + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = Point2D(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.max(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x > sector.c.x) {\n                                    sr = sector.c.x - sector.r - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this._connectorLines.push(connectorLine);\n                            this.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                reverse = reverse ? -1 : 1;\n                return function (a, b) {\n                    a = (a.parent.sector.middle() + 270) % 360;\n                    b = (b.parent.sector.middle() + 270) % 360;\n                    return (a - b) * reverse;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var cx = sector.c.x, cy = sector.c.y, r = sector.r, t = math.min(math.abs(cy - y1), math.abs(cy - y2));\n                if (t > r) {\n                    return originalX;\n                } else {\n                    return cx + math.sqrt(r * r - t * t) * (direction ? 1 : -1);\n                }\n            },\n            pointInCircle: function (point, c, r) {\n                return sqr(c.x - point.x) + sqr(c.y - point.y) < sqr(r);\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        deepExtend(PieChart.fn, PieChartMixin);\n        var DonutSegment = PieSegment.extend({\n            options: {\n                overlay: { gradient: ROUNDED_GLASS },\n                labels: { position: CENTER },\n                animation: { type: PIE }\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, lp, angle = sector.middle(), labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r -= (sector.r - sector.ir) / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(segment);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        deepExtend(DonutSegment.fn, PointEventsMixin);\n        var DonutChart = PieChart.extend({\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                }\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                segment = new DonutSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), series = options.series, currentSeries, seriesCount = series.length, seriesWithoutSize = 0, holeSize, totalSize, size, margin = 0, i, r, ir = 0, currentSize = 0;\n                chart.seriesConfigs = [];\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                totalSize = halfMinWidth - padding;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i != seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                ir = holeSize;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    size = valueOrDefault(currentSeries.size, totalSize / seriesWithoutSize);\n                    ir += margin;\n                    r = ir + size;\n                    chart.seriesConfigs.push({\n                        ir: ir,\n                        r: r\n                    });\n                    margin = currentSeries.margin || 0;\n                    ir = r;\n                }\n                PieChart.fn.reflow.call(chart, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.from = from;\n                segment.to = to;\n                segment.series = series;\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            linePoints: function () {\n                var points = [];\n                var from = this.from;\n                var fromBox = from.box;\n                var toBox = this.to.box;\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = draw.Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        function returnSelf() {\n            return this;\n        }\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                var pane = this;\n                BoxElement.fn.init.call(pane, options);\n                options = pane.options;\n                pane.id = kendo.guid();\n                pane.createTitle();\n                pane.content = new ChartElement();\n                pane.chartContainer = new ChartContainer({}, pane);\n                pane.append(pane.content);\n                pane.axes = [];\n                pane.charts = [];\n            },\n            options: {\n                zIndex: -1,\n                shrinkToFit: true,\n                title: { align: LEFT },\n                visible: true\n            },\n            createTitle: function () {\n                var pane = this;\n                var titleOptions = pane.options.title;\n                if (typeof titleOptions === OBJECT) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                pane.title = Title.buildTitle(titleOptions, pane, Pane.fn.options.title);\n            },\n            appendAxis: function (axis) {\n                var pane = this;\n                pane.content.append(axis);\n                pane.axes.push(axis);\n                axis.pane = pane;\n            },\n            appendChart: function (chart) {\n                var pane = this;\n                if (pane.chartContainer.parent !== pane.content) {\n                    pane.content.append(pane.chartContainer);\n                }\n                pane.charts.push(chart);\n                pane.chartContainer.append(chart);\n                chart.pane = pane;\n            },\n            empty: function () {\n                var pane = this, plotArea = pane.parent, i;\n                if (plotArea) {\n                    for (i = 0; i < pane.axes.length; i++) {\n                        plotArea.removeAxis(pane.axes[i]);\n                    }\n                    for (i = 0; i < pane.charts.length; i++) {\n                        plotArea.removeChart(pane.charts[i]);\n                    }\n                }\n                pane.axes = [];\n                pane.charts = [];\n                pane.content.destroy();\n                pane.content.children = [];\n                pane.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var pane = this;\n                var content;\n                if (last(pane.children) === pane.content) {\n                    content = pane.children.pop();\n                }\n                BoxElement.fn.reflow.call(pane, targetBox);\n                if (content) {\n                    pane.children.push(content);\n                }\n                if (pane.title) {\n                    pane.contentBox.y1 += pane.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: returnSelf,\n            clipRoot: returnSelf,\n            createGridLines: function () {\n                var pane = this, axes = pane.axes, allAxes = axes.concat(pane.parent.axes), vGridLines = [], hGridLines = [], gridLines, i, j, axis, vertical, altAxis;\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    vertical = axis.options.vertical;\n                    gridLines = vertical ? vGridLines : hGridLines;\n                    for (j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = $.proxy(this.createGradient, this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes, length = axes.length, chartsBox = new Box2D(), axisValueField, lineBox, axis, idx;\n                for (idx = 0; idx < length; idx++) {\n                    axis = axes[idx];\n                    axisValueField = axis.options.vertical ? Y : X;\n                    lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    length = allAxes.length;\n                    for (idx = 0; idx < length; idx++) {\n                        axis = allAxes[idx];\n                        if (!axis.options.vertical) {\n                            lineBox = axis.lineBox();\n                            chartsBox.x1 = lineBox.x1;\n                            chartsBox.x2 = lineBox.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                var container = this;\n                ChartElement.fn.init.call(container, options);\n                container.pane = pane;\n            },\n            shouldClip: function () {\n                var container = this, children = container.children, length = children.length, i;\n                for (i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new draw.Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = draw.Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: returnSelf,\n            unclipLabels: function () {\n                var container = this, charts = container.children, clipBox = container.clipBox, points, point, i, j, length, label, note;\n                for (i = 0; i < charts.length; i++) {\n                    points = charts[i].points || {};\n                    length = points.length;\n                    for (j = 0; j < length; j++) {\n                        point = points[j];\n                        if (point && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            label = point.label;\n                            note = point.note;\n                            if (label && label.options.visible) {\n                                if (label.alignToClipBox) {\n                                    label.alignToClipBox(clipBox);\n                                }\n                                label.options.noclip = true;\n                            }\n                            if (note && note.options.visible) {\n                                note.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                ChartElement.fn.init.call(plotArea, options);\n                plotArea.series = series;\n                plotArea.initSeries();\n                plotArea.charts = [];\n                plotArea.options.legend.items = [];\n                plotArea.axes = [];\n                plotArea.crosshairs = [];\n                plotArea.createPanes();\n                plotArea.render();\n                plotArea.createCrosshairs();\n            },\n            options: {\n                series: [],\n                plotArea: { margin: {} },\n                background: '',\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                legend: {\n                    inactiveItems: {\n                        labels: { color: '#919191' },\n                        markers: { color: '#919191' }\n                    }\n                }\n            },\n            initSeries: function () {\n                var series = this.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    currentSeries.index = i;\n                }\n            },\n            createPanes: function () {\n                var plotArea = this, defaults = { title: { color: (plotArea.options.title || {}).color } }, panes = [], paneOptions = plotArea.options.panes || [], i, panesLength = math.max(paneOptions.length, 1), currentPane;\n                function setTitle(options, defaults) {\n                    if (typeof options.title === 'string') {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    plotArea.append(currentPane);\n                }\n                plotArea.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var plotArea = this, i, j, pane, axis, currentCrosshair;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    for (j = 0; j < pane.axes.length; j++) {\n                        axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            currentCrosshair = new Crosshair(axis, axis.options.crosshair);\n                            plotArea.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var plotArea = this, crosshairs = plotArea.crosshairs, axes = pane.axes, i, j;\n                for (i = crosshairs.length - 1; i >= 0; i--) {\n                    for (j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var plotArea = this, pane = plotArea.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                plotArea.axes.push(axis);\n                axis.plotArea = plotArea;\n            },\n            removeAxis: function (axisToRemove) {\n                var plotArea = this, i, axis, filteredAxes = [];\n                for (i = 0; i < plotArea.axes.length; i++) {\n                    axis = plotArea.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                plotArea.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    plotArea.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var plotArea = this, i, chart, filteredCharts = [];\n                for (i = 0; i < plotArea.charts.length; i++) {\n                    chart = plotArea.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                plotArea.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length, data = [], i, currentSeries, text, legend = this.options.legend, labels = legend.labels || {}, inactiveItems = legend.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, color, itemLabelOptions, markerColor, defaults, seriesVisible, labelTemplate;\n                for (i = 0; i < count; i++) {\n                    currentSeries = series[i];\n                    seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    text = currentSeries.name || '';\n                    labelTemplate = seriesVisible ? labels.template : inactiveItemsLabels.template || labels.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    color = currentSeries.color;\n                    defaults = currentSeries._defaults;\n                    if (isFn(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [], yAxes = [], paneAxes, axis, paneIx, axisIx;\n                for (paneIx = 0; paneIx < panes.length; paneIx++) {\n                    paneAxes = panes[paneIx].axes;\n                    for (axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var plotArea = this, series = plotArea.series, seriesByPane = {}, i, pane, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    pane = plotArea.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var i, currentSeries, result = [];\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var plotArea = this, options = plotArea.options.plotArea, panes = plotArea.panes, margin = getSpacing(options.margin);\n                plotArea.box = targetBox.clone().unpad(margin);\n                plotArea.reflowPanes();\n                plotArea.reflowAxes(panes);\n                plotArea.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var plotArea = this, i;\n                panes = [].concat(panes);\n                this.initSeries();\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.removeCrosshairs(panes[i]);\n                    panes[i].empty();\n                }\n                plotArea.render(panes);\n                plotArea.reflowAxes(plotArea.panes);\n                plotArea.reflowCharts(panes);\n                plotArea.createCrosshairs(panes);\n                for (i = 0; i < panes.length; i++) {\n                    panes[i].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue), valuesToAdd = crossingAxes.length - crossingValues.length, defaultValue = crossingValues[0] || 0, i;\n                for (i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true), slotEdge = axis.options.reverse ? 2 : 1, targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true), targetEdge = targetAxis.options.reverse ? 2 : 1, axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var plotArea = this, xAnchor = xAxes[0], yAnchor = yAxes[0], xAnchorCrossings = plotArea.axisCrossingValues(xAnchor, yAxes), yAnchorCrossings = plotArea.axisCrossingValues(yAnchor, xAxes), anchor, anchorCrossings, leftAnchors = {}, rightAnchors = {}, topAnchors = {}, bottomAnchors = {}, pane, paneId, axis, i;\n                for (i = 0; i < yAxes.length; i++) {\n                    axis = yAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = plotArea.axisCrossingValues(anchor, yAxes);\n                    }\n                    plotArea.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        leftAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        rightAnchors[paneId] = axis;\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (i = 0; i < xAxes.length; i++) {\n                    axis = xAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    anchor = paneAnchor(yAxes, pane) || yAnchor;\n                    anchorCrossings = yAnchorCrossings;\n                    if (anchor !== yAnchor) {\n                        anchorCrossings = plotArea.axisCrossingValues(anchor, xAxes);\n                    }\n                    plotArea.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().y1) === round(anchor.lineBox().y1)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n                        if (topAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(topAnchors[paneId].box, TOP).translate(0, -axis.options.margin));\n                        }\n                        topAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().y2, COORD_PRECISION) === round(anchor.lineBox().y2, COORD_PRECISION)) {\n                        if (bottomAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(bottomAnchors[paneId].box, BOTTOM).translate(0, axis.options.margin));\n                        }\n                        bottomAnchors[paneId] = axis;\n                    }\n                    if (i !== 0) {\n                        axis.alignTo(xAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, axisBox = axisGroupBox(axes), overflowX = 0, i, currentPane, currentAxis;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var i, currentPane, axes, overflowY, j, currentAxis, shrinked;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    axes = currentPane.axes;\n                    overflowY = math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (j = 0; j < axes.length; j++) {\n                            currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, offsetX = 0, paneAxes, paneBox, axisBox, offsetY, currentPane, currentAxis, i, j;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    paneAxes = currentPane.axes;\n                    paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        axisBox = axisGroupBox(paneAxes);\n                        offsetX = math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        offsetY = math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        for (j = 0; j < paneAxes.length; j++) {\n                            currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (i = 0; i < axes.length; i++) {\n                    currentAxis = axes[i];\n                    currentAxis.reflow(currentAxis.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var plotArea = this, i, axes = plotArea.groupAxes(panes);\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    plotArea.alignAxes(axes.x, axes.y);\n                    plotArea.shrinkAxisWidth(panes);\n                    plotArea.autoRotateAxisLabels(axes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisWidth(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.shrinkAxisHeight(panes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisHeight(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var axes = this.axes;\n                var panes = this.panes;\n                var axis, idx, rotated;\n                for (idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (idx = 0; idx < panes.length; idx++) {\n                        this.reflowPaneAxes(panes[idx]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes, i, length = axes.length;\n                if (length > 0) {\n                    for (i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var plotArea = this, charts = plotArea.charts, count = charts.length, box = plotArea.box, chartPane, i;\n                for (i = 0; i < count; i++) {\n                    chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var plotArea = this, box = plotArea.box, panes = plotArea.panes, panesLength = panes.length, i, currentPane, paneBox, remainingHeight = box.height(), remainingPanes = panesLength, autoHeightPanes = 0, top = box.y1, height, percents;\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    if (!currentPane.options.height) {\n                        currentPane.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    paneBox = box.clone().move(box.x1, top);\n                    currentPane.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var plotArea = this, axes = plotArea.axes, axesCount = axes.length, lineBox, box, i, j, axisA, axisB;\n                for (i = 0; i < axesCount; i++) {\n                    axisA = axes[i];\n                    for (j = 0; j < axesCount; j++) {\n                        axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || plotArea.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(draw.Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var border = options.border || {};\n                var background = options.background;\n                var opacity = options.opacity;\n                if (util.isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new draw.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts, result = [], i, j, points, point, chart;\n                if (categoryIndex !== null) {\n                    for (i = 0; i < charts.length; i++) {\n                        chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (j = 0; j < points.length; j++) {\n                                point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts, result = [], points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts, points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var plotArea = this, panes = plotArea.panes, pane, i;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedCategoryAxes = {};\n                plotArea.namedValueAxes = {};\n                plotArea.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    plotArea.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            plotArea.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                categoryAxis: { categories: [] },\n                valueAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this;\n                panes = panes || plotArea.panes;\n                plotArea.createCategoryAxes(panes);\n                plotArea.aggregateCategories(panes);\n                plotArea.createCategoryAxesLabels(panes);\n                plotArea.createCharts(panes);\n                plotArea.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete plotArea.namedCategoryAxes[axisName];\n                } else {\n                    plotArea.valueAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedValueAxes[axisName];\n                }\n                if (axis === plotArea.categoryAxis) {\n                    delete plotArea.categoryAxis;\n                }\n                if (axis === plotArea.valueAxis) {\n                    delete plotArea.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this.addToLegend(paneSeries);\n                    var visibleSeries = this.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var plotArea = this, series = plotArea.srcSeries || plotArea.series, processedSeries = [], i, currentSeries, categoryAxis, axisPane, dateAxis;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    categoryAxis = plotArea.seriesCategoryAxis(currentSeries);\n                    axisPane = plotArea.findPane(categoryAxis.options.pane);\n                    dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = plotArea.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = plotArea.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                plotArea.srcSeries = series;\n                plotArea.series = processedSeries;\n            },\n            filterSeries: function (currentSeries, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(currentSeries.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var categoryIx;\n                range.min = isNumber(categoryAxis.options.min) ? math.floor(range.min) : 0;\n                range.max = isNumber(categoryAxis.options.max) ? justified ? math.floor(range.max) + 1 : math.ceil(range.max) : currentSeries.data.length;\n                currentSeries = deepExtend({}, currentSeries);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        categoryIx = minCategory;\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: srcCategories[categoryIx],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        categoryIx = range.max;\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: srcCategories[categoryIx],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var axisOptions = categoryAxis.options, dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE), categories = axisOptions.categories, srcCategories = axisOptions.srcCategories || categories, srcData = series.data, srcPoints = [], result = deepExtend({}, series), aggregatorSeries = deepExtend({}, series), dataItems = axisOptions.dataItems || [], i, category, categoryIx, data, aggregator, getFn = getField, outOfRangeMinIdx = util.MIN_NUM, outOfRangeMinCategory, outOfRangeMaxCategory, outOfRangeMaxIdx = util.MAX_NUM, outOfRangePoints = inArray(series.type, [\n                        LINE,\n                        VERTICAL_LINE,\n                        AREA,\n                        VERTICAL_AREA\n                    ]);\n                result.data = data = [];\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (i = 0; i < srcData.length; i++) {\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i]);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx == outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx == outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                for (i = 0; i < categories.length; i++) {\n                    data[i] = aggregator.aggregatePoints(srcPoints[i], categories[i]);\n                    if (srcPoints[i]) {\n                        dataItems[i] = data[i];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this, series = chart.options.series, categoryAxis = plotArea.seriesCategoryAxis(series[0]), categories = categoryAxis.options.categories, categoriesToAdd = math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                plotArea.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, axisName = series.axis, axisOptions = [].concat(options.valueAxis), axis = $.grep(axisOptions, function (a) {\n                        return a.name === axisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = (panes[0] || {}).name || 'default', paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var plotArea = this, axisName = series.categoryAxis, axis = axisName ? plotArea.namedCategoryAxes[axisName] : plotArea.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var unique = {};\n                var categoryAxes = $.map(series, function (s) {\n                    var name = s.categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        return name;\n                    }\n                });\n                function groupSeries(axis, axisIx) {\n                    return $.grep(series, function (s) {\n                        return axisIx === 0 && !s.categoryAxis || s.categoryAxis == axis;\n                    });\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], barChart = new BarChart(plotArea, extend({\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], rangeColumnChart = new RangeBarChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], bulletChart = new BulletChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], lineChart = new LineChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], areaChart = new AreaChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new OHLCChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new CandlestickChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new BoxPlotChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], waterfallChart = new WaterfallChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, centeredSeries = filterSeriesByType(plotArea.series, EQUALLY_SPACED_SERIES), seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < plotArea.series.length; seriesIx++) {\n                    var currentSeries = plotArea.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (seriesIx = 0; seriesIx < centeredSeries.length; seriesIx++) {\n                    seriesAxis = centeredSeries[seriesIx].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, series = plotArea.series, seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var plotArea = this, invertAxes = plotArea.invertAxes, definitions = [].concat(plotArea.options.categoryAxis), i, axisOptions, axisPane, categories, type, name, categoryAxis, axes = [], primaryAxis;\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        categories = axisOptions.categories || [];\n                        type = axisOptions.type || '';\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0,\n                            _deferLabels: true\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = plotArea.isJustified();\n                        }\n                        if (plotArea.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions);\n                        }\n                        if (name) {\n                            if (plotArea.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        plotArea.appendAxis(categoryAxis);\n                    }\n                }\n                primaryAxis = plotArea.categoryAxis || axes[0];\n                plotArea.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisY = primaryAxis;\n                } else {\n                    plotArea.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var plotArea = this, series = plotArea.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var plotArea = this, tracker = plotArea.valueAxisRangeTracker, defaultRange = tracker.query(), definitions = [].concat(plotArea.options.valueAxis), invertAxes = plotArea.invertAxes, baseOptions = { vertical: !invertAxes }, axisOptions, axisPane, valueAxis, primaryAxis, axes = [], range, axisType, defaultAxisRange, name, i;\n                if (plotArea.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = math.min(range.min, defaultRange.min);\n                            range.max = math.max(range.max, defaultRange.max);\n                        }\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = LogarithmicAxis;\n                        } else {\n                            axisType = NumericAxis;\n                        }\n                        valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions));\n                        if (name) {\n                            if (plotArea.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        plotArea.appendAxis(valueAxis);\n                    }\n                }\n                primaryAxis = plotArea.valueAxis || axes[0];\n                plotArea.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisX = primaryAxis;\n                } else {\n                    plotArea.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), pane = plotArea.pointPane(point), allAxes, i, axis, categories = [], values = [];\n                if (!pane) {\n                    return;\n                }\n                allAxes = pane.axes;\n                for (i = 0; i < allAxes.length; i++) {\n                    axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, plotArea.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventTargetElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, currentPane, i;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        deepExtend(CategoricalPlotArea.fn, PlotAreaEventsMixin);\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                var tracker = this;\n                tracker.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var tracker = this, axisRanges = tracker.axisRanges, range, chartRange, axisName;\n                for (axisName in chartAxisRanges) {\n                    range = axisRanges[axisName];\n                    chartRange = chartAxisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = math.min(range.min, chartRange.min);\n                    range.max = math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var XYPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedXAxes = {};\n                plotArea.namedYAxes = {};\n                plotArea.xAxisRangeTracker = new AxisGroupRangeTracker();\n                plotArea.yAxisRangeTracker = new AxisGroupRangeTracker();\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                xAxis: {},\n                yAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this, seriesByPane = plotArea.groupSeriesByPane(), i, pane, paneSeries, filteredSeries;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    plotArea.addToLegend(paneSeries);\n                    filteredSeries = plotArea.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    plotArea.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    plotArea.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    plotArea.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                plotArea.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.xAxisRangeTracker.update(chart.xAxisRanges);\n                plotArea.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis.options.vertical) {\n                    plotArea.yAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedYAxes[axisName];\n                } else {\n                    plotArea.xAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedXAxes[axisName];\n                }\n                if (axis === plotArea.axisX) {\n                    delete plotArea.axisX;\n                }\n                if (axis === plotArea.axisY) {\n                    delete plotArea.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, xAxisName = series.xAxis, xAxisOptions = [].concat(options.xAxis), xAxis = $.grep(xAxisOptions, function (a) {\n                        return a.name === xAxisName;\n                    })[0], yAxisName = series.yAxis, yAxisOptions = [].concat(options.yAxis), yAxis = $.grep(yAxisOptions, function (a) {\n                        return a.name === yAxisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = panes[0].name || 'default', paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterLineChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new BubbleChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var plotArea = this, axisName = options.name, namedAxes = vertical ? plotArea.namedYAxes : plotArea.namedXAxes, tracker = vertical ? plotArea.yAxisRangeTracker : plotArea.xAxisRangeTracker, axisOptions = deepExtend({}, options, { vertical: vertical }), isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC), defaultRange = tracker.query(), defaultAxisRange = isLog ? {\n                        min: 0.1,\n                        max: 1\n                    } : {\n                        min: 0,\n                        max: 1\n                    }, range = tracker.query(axisName) || defaultRange || defaultAxisRange, axis, axisType, seriesIx, series = plotArea.series, currentSeries, seriesAxisName, firstPointValue, typeSamples = [\n                        axisOptions.min,\n                        axisOptions.max\n                    ], inferredDate, i;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName == axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = math.min(range.min, defaultRange.min);\n                    range.max = math.max(range.max, defaultRange.max);\n                }\n                for (i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = DateValueAxis;\n                } else if (isLog) {\n                    axisType = LogarithmicAxis;\n                } else {\n                    axisType = NumericAxis;\n                }\n                axis = new axisType(range.min, range.max, axisOptions);\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                plotArea.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var plotArea = this, options = plotArea.options, axisPane, xAxesOptions = [].concat(options.xAxis), xAxes = [], yAxesOptions = [].concat(options.yAxis), yAxes = [];\n                each(xAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(plotArea.createXYAxis(this, false, i));\n                    }\n                });\n                each(yAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        yAxes.push(plotArea.createXYAxis(this, true, i));\n                    }\n                });\n                plotArea.axisX = plotArea.axisX || xAxes[0];\n                plotArea.axisY = plotArea.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), allAxes = plotArea.axes, i, length = allAxes.length, axis, xValues = [], yValues = [], currentValue, values;\n                for (i = 0; i < length; i++) {\n                    axis = allAxes[i];\n                    values = axis.options.vertical ? yValues : xValues;\n                    currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventTargetElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = indexOf(axis, vertical ? axes.y : axes.x);\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        deepExtend(XYPlotArea.fn, PlotAreaEventsMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createPieChart(series);\n            },\n            createPieChart: function (series) {\n                var plotArea = this, firstSeries = series[0], pieChart = new PieChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        startAngle: firstSeries.startAngle,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createDonutChart(series);\n            },\n            createDonutChart: function (series) {\n                var plotArea = this, firstSeries = series[0], donutChart = new DonutChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(donutChart);\n            }\n        });\n        var PieAnimation = draw.Animation.extend({\n            options: {\n                easing: 'easeOutElastic',\n                duration: INITIAL_ANIMATION_DURATION\n            },\n            setup: function () {\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.options.center));\n            }\n        });\n        draw.AnimationFactory.current.register(PIE, PieAnimation);\n        var BubbleAnimation = draw.Animation.extend({\n            options: { easing: 'easeOutElastic' },\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.center));\n            }\n        });\n        draw.AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                points = [].concat(points);\n                this.hide();\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this.togglePointHighlight(point, true);\n                        this._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var points = this._points;\n                while (points.length) {\n                    this.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element == point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        var BaseTooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                tooltip.options = deepExtend({}, tooltip.options, options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = BaseTooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = BaseTooltip.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'tooltip ' + CSS_PREFIX + 'chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + 'border: #= d.border.width #px solid;' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>');\n                }\n                var padding = getSpacing(tooltip.options.padding || {}, 'auto');\n                tooltip.element = $(tooltip.template(tooltip.options)).css({\n                    'padding-top': padding.top,\n                    'padding-right': padding.right,\n                    'padding-bottom': padding.bottom,\n                    'padding-left': padding.left\n                });\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            options: {\n                border: { width: 1 },\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION }\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            _padding: function () {\n                if (!this._chartPadding) {\n                    var chartElement = this.chartElement;\n                    this._chartPadding = {\n                        top: parseInt(chartElement.css('paddingTop'), 10),\n                        left: parseInt(chartElement.css('paddingLeft'), 10)\n                    };\n                }\n                return this._chartPadding;\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.anchor, chartPadding = tooltip._padding(), chartOffset = tooltip.chartElement.offset(), top = round(anchor.y + chartPadding.top + chartOffset.top), left = round(anchor.x + chartPadding.left + chartOffset.left), zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, viewport.outerHeight() / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, viewport.outerWidth() / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            setStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                if (!defined(options.color)) {\n                    var brightness = new Color(background).percBrightness();\n                    this.element.toggleClass(CSS_PREFIX + TOOLTIP_INVERSE, brightness > 180);\n                }\n                this.element.css({\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: options.border.width\n                });\n            },\n            show: function () {\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: this.element.outerWidth(),\n                    height: this.element.outerHeight()\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _pointAnchor: function (point) {\n                var size = this._measure();\n                return point.tooltipAnchor(size.width, size.height);\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip);\n                if (!point || !point.tooltipAnchor || !tooltip.element) {\n                    return;\n                }\n                tooltip.element.html(tooltip._pointContent(point));\n                tooltip.anchor = tooltip._pointAnchor(point);\n                if (tooltip.anchor) {\n                    tooltip.setStyle(options, point);\n                    BaseTooltip.fn.show.call(tooltip, point);\n                } else {\n                    tooltip.hide();\n                }\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (element, plotArea, options) {\n                var tooltip = this;\n                BaseTooltip.fn.init.call(tooltip, element, options);\n                tooltip.plotArea = plotArea;\n            },\n            options: {\n                sharedTemplate: '<table>' + '<th colspan=\\'2\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(point.series.name) { # ' + '<td> #= point.series.name #:</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            showAt: function (points, coords) {\n                points = $.grep(points, function (p) {\n                    var tooltip = p.series.tooltip, excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (points.length > 0) {\n                    var point = points[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var content = this._content(points, point.category);\n                    this.element.html(content);\n                    this.anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.setStyle(this.options, point);\n                    BaseTooltip.fn.show.call(this);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var tooltip = this, plotArea = tooltip.plotArea, axis = plotArea.categoryAxis, anchor, size = this._measure(), hCenter = point.y - size.height / 2;\n                if (axis.options.vertical) {\n                    anchor = Point2D(point.x, hCenter);\n                } else {\n                    anchor = Point2D(slot.center().x, hCenter);\n                }\n                return anchor;\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var size = this._measure();\n                var anchor;\n                if (vertical) {\n                    anchor = new Point2D(center.x, slotCenter.y);\n                } else {\n                    anchor = new Point2D(slotCenter.x, center.y);\n                }\n                anchor.x -= size.width / 2;\n                anchor.y -= size.height / 2;\n                return anchor;\n            },\n            _content: function (points, category) {\n                var tooltip = this, template, content;\n                template = kendo.template(tooltip.options.sharedTemplate);\n                content = template({\n                    points: points,\n                    category: category,\n                    categoryText: autoFormat(tooltip.options.categoryFormat, category),\n                    content: tooltip._pointContent\n                });\n                return content;\n            }\n        });\n        var Crosshair = ChartElement.extend({\n            init: function (axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n            },\n            options: {\n                color: BLACK,\n                width: 1,\n                zIndex: -1,\n                tooltip: { visible: false }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    if (!this.tooltip) {\n                        this.tooltip = new CrosshairTooltip(this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                    }\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var crosshair = this, axis = crosshair.axis, vertical = axis.options.vertical, box = crosshair.getBox(), point = crosshair.point, dim = vertical ? Y : X, slot, lineStart, lineEnd;\n                lineStart = new geom.Point(box.x1, box.y1);\n                if (vertical) {\n                    lineEnd = new geom.Point(box.x2, box.y1);\n                } else {\n                    lineEnd = new geom.Point(box.x1, box.y2);\n                }\n                if (point) {\n                    if (crosshair.stickyMode) {\n                        slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                crosshair.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var crosshair = this, axis = crosshair.axis, axes = axis.pane.axes, length = axes.length, vertical = axis.options.vertical, box = axis.lineBox().clone(), dim = vertical ? X : Y, axisLineBox, currentAxis, i;\n                for (i = 0; i < length; i++) {\n                    currentAxis = axes[i];\n                    if (currentAxis.options.vertical != vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new draw.Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                var crosshair = this;\n                if (crosshair.tooltip) {\n                    crosshair.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(crosshair);\n            }\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (crosshair, options) {\n                var tooltip = this, chartElement = crosshair.axis.getRoot().chart.element;\n                tooltip.crosshair = crosshair;\n                BaseTooltip.fn.init.call(tooltip, chartElement, deepExtend({}, tooltip.options, { background: crosshair.axis.plotArea.options.seriesColors[0] }, options));\n                tooltip.setStyle(tooltip.options);\n            },\n            options: { padding: 10 },\n            showAt: function (point) {\n                var tooltip = this, element = tooltip.element;\n                if (element) {\n                    tooltip.point = point;\n                    tooltip.element.html(tooltip.content(point));\n                    tooltip.anchor = tooltip.getAnchor();\n                    tooltip.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (point) {\n                var tooltip = this, options = tooltip.options, axis = tooltip.crosshair.axis, axisOptions = axis.options, content, value, tooltipTemplate;\n                value = content = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({ value: value });\n                } else if (options.format) {\n                    content = autoFormat(options.format, value);\n                } else {\n                    if (axisOptions.type === DATE) {\n                        content = autoFormat(axisOptions.labels.dateFormats[axisOptions.baseUnit], value);\n                    }\n                }\n                return content;\n            },\n            getAnchor: function () {\n                var tooltip = this, options = tooltip.options, position = options.position, crosshair = this.crosshair, vertical = !crosshair.axis.options.vertical, lineBox = crosshair.line.bbox(), size = this._measure(), halfWidth = size.width / 2, halfHeight = size.height / 2, padding = options.padding, anchor;\n                if (vertical) {\n                    if (position === BOTTOM) {\n                        anchor = lineBox.bottomLeft().translate(-halfWidth, padding);\n                    } else {\n                        anchor = lineBox.topLeft().translate(-halfWidth, -size.height - padding);\n                    }\n                } else {\n                    if (position === LEFT) {\n                        anchor = lineBox.topLeft().translate(-size.width - padding, -halfHeight);\n                    } else {\n                        anchor = lineBox.topRight().translate(padding, -halfHeight);\n                    }\n                }\n                return anchor;\n            },\n            hide: function () {\n                this.element.hide();\n                this.point = null;\n            },\n            destroy: function () {\n                BaseTooltip.fn.destroy.call(this);\n                this.point = null;\n            }\n        });\n        var Aggregates = {\n            min: function (values) {\n                var min = MAX_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        min = math.min(min, n);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var max = MIN_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        max = math.max(max, n);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length, sum = 0, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        sum += n;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length, count = 0, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var result = values[0], count = countNumbers(values);\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        return val;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function DefaultAggregates() {\n            this._defaults = {};\n        }\n        DefaultAggregates.prototype = {\n            register: function (seriesTypes, aggregates) {\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        };\n        DefaultAggregates.current = new DefaultAggregates();\n        var Selection = Observable.extend({\n            init: function (chart, categoryAxis, options) {\n                var that = this, chartElement = chart.element, categoryAxisLineBox = categoryAxis.lineBox(), valueAxis = that.getValueAxis(categoryAxis), valueAxisLineBox = valueAxis.lineBox(), selectorPrefix = '.' + CSS_PREFIX, wrapper, padding;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({}, that.options, options);\n                options = that.options;\n                that.chart = chart;\n                that.chartElement = chartElement;\n                that.categoryAxis = categoryAxis;\n                that._dateAxis = that.categoryAxis instanceof DateCategoryAxis;\n                that.valueAxis = valueAxis;\n                if (that._dateAxis) {\n                    deepExtend(options, {\n                        min: toDate(options.min),\n                        max: toDate(options.max),\n                        from: toDate(options.from),\n                        to: toDate(options.to)\n                    });\n                }\n                that.template = Selection.template;\n                if (!that.template) {\n                    that.template = Selection.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'selector\\' ' + 'style=\\'width: #= d.width #px; height: #= d.height #px;' + ' top: #= d.offset.top #px; left: #= d.offset.left #px;\\'>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'selection\\'>' + '<div class=\\'' + CSS_PREFIX + 'selection-bg\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'leftHandle\\'><div></div></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'rightHandle\\'><div></div></div>' + '</div></div>');\n                }\n                padding = {\n                    left: parseInt(chartElement.css('paddingLeft'), 10),\n                    right: parseInt(chartElement.css('paddingTop'), 10)\n                };\n                that.options = deepExtend({}, {\n                    width: categoryAxisLineBox.width(),\n                    height: valueAxisLineBox.height(),\n                    padding: padding,\n                    offset: {\n                        left: valueAxisLineBox.x2 + padding.left,\n                        top: valueAxisLineBox.y1 + padding.right\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n                if (that.options.visible) {\n                    that.wrapper = wrapper = $(that.template(that.options)).appendTo(chartElement);\n                    that.selection = wrapper.find(selectorPrefix + 'selection');\n                    that.leftMask = wrapper.find(selectorPrefix + 'mask').first();\n                    that.rightMask = wrapper.find(selectorPrefix + 'mask').last();\n                    that.leftHandle = wrapper.find(selectorPrefix + 'leftHandle');\n                    that.rightHandle = wrapper.find(selectorPrefix + 'rightHandle');\n                    that.options.selection = {\n                        border: {\n                            left: parseFloat(that.selection.css('border-left-width'), 10),\n                            right: parseFloat(that.selection.css('border-right-width'), 10)\n                        }\n                    };\n                    that.leftHandle.css('top', (that.selection.height() - that.leftHandle.height()) / 2);\n                    that.rightHandle.css('top', (that.selection.height() - that.rightHandle.height()) / 2);\n                    that.set(that._index(options.from), that._index(options.to));\n                    that.bind(that.events, that.options);\n                    that.wrapper[0].style.cssText = that.wrapper[0].style.cssText;\n                    if (that.options.mousewheel !== false) {\n                        that.wrapper.on(MOUSEWHEEL_NS, proxy(that._mousewheel, that));\n                    } else {\n                        that.wrapper.on(MOUSEWHEEL_NS, function (e) {\n                            e.stopPropagation();\n                        });\n                    }\n                    if (kendo.UserEvents) {\n                        that.userEvents = new kendo.UserEvents(that.wrapper, {\n                            global: true,\n                            stopPropagation: true,\n                            multiTouch: true,\n                            fastTap: true,\n                            press: proxy(that._press, that),\n                            start: proxy(that._start, that),\n                            move: proxy(that._move, that),\n                            end: proxy(that._end, that),\n                            tap: proxy(that._tap, that),\n                            gesturestart: proxy(that._gesturechange, that),\n                            gesturechange: proxy(that._gesturechange, that)\n                        });\n                    } else {\n                        that.leftHandle.add(that.rightHandle).removeClass(CSS_PREFIX + 'handle');\n                    }\n                }\n            },\n            events: [\n                SELECT_START,\n                SELECT,\n                SELECT_END\n            ],\n            options: {\n                visible: true,\n                mousewheel: { zoom: BOTH },\n                min: MIN_VALUE,\n                max: MAX_VALUE\n            },\n            destroy: function () {\n                var that = this, userEvents = that.userEvents;\n                if (userEvents) {\n                    userEvents.destroy();\n                }\n                clearTimeout(that._mwTimeout);\n                that._state = null;\n                if (that.wrapper) {\n                    that.wrapper.remove();\n                }\n            },\n            _rangeEventArgs: function (range) {\n                var that = this;\n                return {\n                    axis: that.categoryAxis.options,\n                    from: that._value(range.from),\n                    to: that._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var that = this, options = that.options, target = $(e.event.target), args;\n                if (that._state || !target) {\n                    return;\n                }\n                that.chart._unsetActivePoint();\n                that._state = {\n                    moveTarget: target.parents('.k-handle').add(target).first(),\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: that._index(options.from),\n                        to: that._index(options.to)\n                    }\n                };\n                args = that._rangeEventArgs({\n                    from: that._index(options.from),\n                    to: that._index(options.to)\n                });\n                if (that.trigger(SELECT_START, args)) {\n                    that.userEvents.cancel();\n                    that._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    var target = $(e.event.target);\n                    handle = target.parents('.k-handle').add(target).first();\n                }\n                handle.addClass('k-handle-active');\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, state = that._state, options = that.options, categories = that.categoryAxis.options.categories, from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), delta = state.startLocation - e.x.location, range = state.range, oldRange = {\n                        from: range.from,\n                        to: range.to\n                    }, span = range.to - range.from, target = state.moveTarget, scale = that.wrapper.width() / (categories.length - 1), offset = math.round(delta / scale);\n                if (!target) {\n                    return;\n                }\n                e.preventDefault();\n                if (target.is('.k-selection, .k-selection-bg')) {\n                    range.from = math.min(math.max(min, from - offset), max - span);\n                    range.to = math.min(range.from + span, max);\n                } else if (target.is('.k-leftHandle')) {\n                    range.from = math.min(math.max(min, from - offset), max - 1);\n                    range.to = math.max(range.from + 1, range.to);\n                } else if (target.is('.k-rightHandle')) {\n                    range.to = math.min(math.max(min + 1, to - offset), max);\n                    range.from = math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.move(range.from, range.to);\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                var range = this._state.range;\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        moveTarget.removeClass('k-handle-active');\n                    }\n                    delete this._state;\n                }\n                this.set(range.from, range.to);\n                this.trigger(SELECT_END, this._rangeEventArgs(range));\n            },\n            _gesturechange: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, chart = that.chart, state = that._state, options = that.options, categoryAxis = that.categoryAxis, range = state.range, p0 = chart._toModelCoordinates(e.touches[0].x.location).x, p1 = chart._toModelCoordinates(e.touches[1].x.location).x, left = math.min(p0, p1), right = math.max(p0, p1);\n                e.preventDefault();\n                state.moveTarget = null;\n                range.from = categoryAxis.pointCategoryIndex(new dataviz.Point2D(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new dataviz.Point2D(right)) || options.max;\n                that.move(range.from, range.to);\n            },\n            _tap: function (e) {\n                var that = this, options = that.options, coords = that.chart._eventCoordinates(e), categoryAxis = that.categoryAxis, categoryIx = categoryAxis.pointCategoryIndex(new dataviz.Point2D(coords.x, categoryAxis.box.y1)), from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), span = to - from, mid = from + span / 2, offset = math.round(mid - categoryIx), range = {}, rightClick = e.event.which === 3;\n                if (that._state || rightClick) {\n                    return;\n                }\n                e.preventDefault();\n                that.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = math.min(math.max(min, from - offset), max - span);\n                range.to = math.min(range.from + span, max);\n                that._start(e);\n                if (that._state) {\n                    that._state.range = range;\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                    that._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var that = this, options = that.options, delta = mwDelta(e);\n                that._start({ event: { target: that.selection } });\n                if (that._state) {\n                    var range = that._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (that.expand(delta)) {\n                        that.trigger(SELECT, {\n                            axis: that.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: that._value(range.from),\n                            to: that._value(range.to)\n                        });\n                    }\n                    if (that._mwTimeout) {\n                        clearTimeout(that._mwTimeout);\n                    }\n                    that._mwTimeout = setTimeout(function () {\n                        that._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var that = this, options = that.options, offset = options.offset, padding = options.padding, border = options.selection.border, leftMaskWidth, rightMaskWidth, box, distance;\n                box = that._slot(from);\n                leftMaskWidth = round(box.x1 - offset.left + padding.left);\n                that.leftMask.width(leftMaskWidth);\n                that.selection.css('left', leftMaskWidth);\n                box = that._slot(to);\n                rightMaskWidth = round(options.width - (box.x1 - offset.left + padding.left));\n                that.rightMask.width(rightMaskWidth);\n                distance = options.width - rightMaskWidth;\n                if (distance != options.width) {\n                    distance += border.right;\n                }\n                that.rightMask.css('left', distance);\n                that.selection.width(math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0));\n            },\n            set: function (from, to) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max);\n                from = limitValue(that._index(from), min, max);\n                to = limitValue(that._index(to), from + 1, max);\n                if (options.visible) {\n                    that.move(from, to);\n                }\n                options.from = that._value(from);\n                options.to = that._value(to);\n            },\n            expand: function (delta) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max), zDir = options.mousewheel.zoom, from = that._index(options.from), to = that._index(options.to), range = {\n                        from: from,\n                        to: to\n                    }, oldRange = deepExtend({}, range);\n                if (that._state) {\n                    range = that._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.set(range.from, range.to);\n                    return true;\n                }\n            },\n            getValueAxis: function (categoryAxis) {\n                var axes = categoryAxis.pane.axes, axesCount = axes.length, i, axis;\n                for (i = 0; i < axesCount; i++) {\n                    axis = axes[i];\n                    if (axis.options.vertical !== categoryAxis.options.vertical) {\n                        return axis;\n                    }\n                }\n            }\n        });\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                key: 'none',\n                lock: 'none'\n            },\n            start: function (e) {\n                this._active = acceptKey(e.event, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var plotArea = this.plotArea;\n                var axisRanges = this.axisRanges;\n                var range;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() != position) {\n                    var axes = plotArea.axes;\n                    var axis;\n                    var range;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        axis = axes[idx];\n                        if (position == X && !axis.options.vertical || position == Y && axis.options.vertical) {\n                            range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this._marquee = $('<div class=\\'k-marquee\\'><div class=\\'k-marquee-color\\'></div></div>');\n            },\n            options: {\n                key: 'shift',\n                lock: 'none'\n            },\n            start: function (e) {\n                if (acceptKey(e.event, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._toModelCoordinates(e.x.client, e.y.client);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var elementOffset = this._elementOffset();\n                        clipBox.translate(elementOffset.left, elementOffset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        this._marquee.appendTo(document.body).css({\n                            left: e.x.client + 1,\n                            top: e.y.client + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var chartOffset = chartElement.offset();\n                return {\n                    left: parseInt(chartElement.css('paddingTop'), 10) + chartOffset.left,\n                    top: parseInt(chartElement.css('paddingLeft'), 10) + chartOffset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var selectionPosition = this._selectionPosition(e);\n                    this._marquee.css(selectionPosition);\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset.left;\n                    selectionPosition.top -= elementOffset.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this._marquee.remove();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this._marquee.remove();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        axisRanges.push({\n                            axis: axis,\n                            range: range\n                        });\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = math.min(e.x.startLocation, e.x.location);\n                var top = math.min(e.y.startLocation, e.y.location);\n                var width = math.abs(e.x.initialDelta);\n                var height = math.abs(e.y.initialDelta);\n                var clipBox = this._zoomPaneClipBox;\n                if (lock == X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock == Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (e.x.location > clipBox.x2) {\n                    width = clipBox.x2 - e.x.startLocation;\n                }\n                if (e.x.location < clipBox.x1) {\n                    width = e.x.startLocation - clipBox.x1;\n                }\n                if (e.y.location > clipBox.y2) {\n                    height = clipBox.y2 - e.y.startLocation;\n                }\n                if (e.y.location < clipBox.y1) {\n                    height = e.y.startLocation - clipBox.y1;\n                }\n                return {\n                    left: math.max(left, clipBox.x1),\n                    top: math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var SeriesAggregator = function (series, binder, defaultAggregates) {\n            var sa = this, canonicalFields = binder.canonicalFields(series), valueFields = binder.valueFields(series), sourceFields = binder.sourceFields(series, canonicalFields), seriesFields = sa._seriesFields = [], defaults = defaultAggregates.query(series.type), rootAggregate = series.aggregate || defaults, i;\n            sa._series = series;\n            sa._binder = binder;\n            for (i = 0; i < canonicalFields.length; i++) {\n                var field = canonicalFields[i], fieldAggregate;\n                if (typeof rootAggregate === OBJECT) {\n                    fieldAggregate = rootAggregate[field];\n                } else if (i === 0 || inArray(field, valueFields)) {\n                    fieldAggregate = rootAggregate;\n                } else {\n                    break;\n                }\n                if (fieldAggregate) {\n                    seriesFields.push({\n                        canonicalName: field,\n                        name: sourceFields[i],\n                        transform: isFn(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                    });\n                }\n            }\n        };\n        SeriesAggregator.prototype = {\n            aggregatePoints: function (srcPoints, group) {\n                var sa = this, data = sa._bindPoints(srcPoints || []), series = sa._series, seriesFields = sa._seriesFields, i, field, srcValues, value, firstDataItem = data.dataItems[0], result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (i = 0; i < seriesFields.length; i++) {\n                    field = seriesFields[i];\n                    srcValues = sa._bindField(data.values, field.canonicalName);\n                    value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && typeof value === OBJECT && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            ensureTree(field.name, result);\n                            kendo.setter(field.name)(result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var sa = this, binder = sa._binder, series = sa._series, values = [], dataItems = [], i, pointIx;\n                for (i = 0; i < points.length; i++) {\n                    pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [], count = data.length, i, item, value, valueFields;\n                for (i = 0; i < count; i++) {\n                    item = data[i];\n                    valueFields = item.valueFields;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        };\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (!defined(limit)) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._saveGroupVisibleState(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var result, ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x), u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y), ua;\n            if (u_b !== 0) {\n                ua = ua_t / u_b;\n                result = new Point2D(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series, i, seriesLength = series.length, seriesType, seriesDefaults = options.seriesDefaults, commonDefaults = deepExtend({}, options.seriesDefaults), themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {}, commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (i = 0; i < seriesLength; i++) {\n                seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function applySeriesColors(options) {\n            var series = options.series, colors = options.seriesColors || [], i, currentSeries, seriesColor, defaults;\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                seriesColor = colors[i % colors.length];\n                currentSeries.color = currentSeries.color || seriesColor;\n                defaults = currentSeries._defaults;\n                if (defaults) {\n                    defaults.color = defaults.color || seriesColor;\n                }\n            }\n        }\n        function resolveAxisAliases(options) {\n            var alias;\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                alias = this + 'Axes';\n                if (options[alias]) {\n                    options[this + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            });\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                var axisName = this + 'Axis', axes = [].concat(options[axisName]), axisDefaults = options.axisDefaults || {};\n                axes = $.map(axes, function (axisOptions) {\n                    var axisColor = (axisOptions || {}).color;\n                    var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                        line: { color: axisColor },\n                        labels: { color: axisColor },\n                        title: { color: axisColor }\n                    }, axisOptions);\n                    delete result[axisName];\n                    return result;\n                });\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            });\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length, categories = 0, i;\n            for (i = 0; i < seriesCount; i++) {\n                categories = math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        extend($.easing, {\n            easeOutElastic: function (n, d, first, diff) {\n                var s = 1.70158, p = 0, a = diff;\n                if (n === 0) {\n                    return first;\n                }\n                if (n === 1) {\n                    return first + diff;\n                }\n                if (!p) {\n                    p = 0.5;\n                }\n                if (a < math.abs(diff)) {\n                    a = diff;\n                    s = p / 4;\n                } else {\n                    s = p / (2 * math.PI) * math.asin(diff / a);\n                }\n                return a * math.pow(2, -10 * n) * math.sin((n * 1 - s) * (1.1 * math.PI) / p) + diff + first;\n            }\n        });\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        function getDateField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field, value = row[key];\n            if (!value) {\n                value = toDate(getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function toDate(value) {\n            var result, i;\n            if (value instanceof Date) {\n                result = value;\n            } else if (typeof value === STRING) {\n                result = kendo.parseDate(value) || new Date(value);\n            } else if (value) {\n                if (isArray(value)) {\n                    result = [];\n                    for (i = 0; i < value.length; i++) {\n                        result.push(toDate(value[i]));\n                    }\n                } else {\n                    result = new Date(value);\n                }\n            }\n            return result;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                return map(value, toTime);\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function addDuration(date, value, unit, weekStartDay) {\n            var result = date, hours;\n            if (date) {\n                date = toDate(date);\n                hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    kendo.date.adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    date = new Date(date);\n                    date.setUTCMinutes(0, 0, 0);\n                    result = addTicks(date, value * TIME_PER_HOUR);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                } else if (unit === MILLISECONDS) {\n                    result = addTicks(date, value);\n                }\n                if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            var day = date.getDay(), daysToSubtract = 0;\n            if (!isNaN(day)) {\n                weekStartDay = weekStartDay || 0;\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function floorDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            return addDuration(date, 0, unit, weekStartDay);\n        }\n        function ceilDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b, offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var index;\n            var date = toDate(value);\n            var startDate = toDate(start);\n            if (baseUnit == MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit == YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit == DAYS || baseUnit == WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function axisGroupBox(axes) {\n            var length = axes.length, box, i, axisBox;\n            if (length > 0) {\n                for (i = 0; i < length; i++) {\n                    axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || Box2D();\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0, high = sortedDates.length - 1, i, currentDate;\n            while (low <= high) {\n                i = math.floor((low + high) / 2);\n                currentDate = sortedDates[i];\n                if (currentDate < date) {\n                    low = i + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = i - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[i - 1], date)) {\n                    i--;\n                }\n                return i;\n            }\n            if (sortedDates[i] <= date) {\n                return i;\n            } else {\n                return i - 1;\n            }\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function countNumbers(values) {\n            var length = values.length, count = 0, i, num;\n            for (i = 0; i < length; i++) {\n                num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        function axisRanges(axes) {\n            var i, axis, axisName, ranges = {};\n            for (i = 0; i < axes.length; i++) {\n                axis = axes[i];\n                axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function evalOptions(options, context, state, dryRun) {\n            var property, propValue, excluded, defaults, depth, needsEval = false;\n            state = state || {};\n            excluded = state.excluded = state.excluded || [];\n            defaults = state.defaults = state.defaults || {};\n            depth = state.depth = state.depth || 0;\n            if (depth > MAX_EXPAND_DEPTH) {\n                return;\n            }\n            for (property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    propValue = options[property];\n                    if (isFn(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (typeof propValue === OBJECT) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!isFn(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        function filterSeriesByType(series, types) {\n            var i, currentSeries, result = [];\n            types = [].concat(types);\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                if (inArray(currentSeries.type, types)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function indexOf(item, arr) {\n            if (item instanceof Date) {\n                for (var i = 0, length = arr.length; i < length; i++) {\n                    if (dateEquals(arr[i], item)) {\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return $.inArray(item, arr);\n            }\n        }\n        function sortDates(dates, comparer) {\n            comparer = comparer || dateComparer;\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            var i, dates = sortDates(srcDates, comparer), length = dates.length, result = length > 0 ? [dates[0]] : [];\n            comparer = comparer || dateComparer;\n            for (i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type, dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function transpose(rows) {\n            var result = [], rowCount = rows.length, rowIx, row, colIx, colCount;\n            for (rowIx = 0; rowIx < rowCount; rowIx++) {\n                row = rows[rowIx];\n                colCount = row.length;\n                for (colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function ensureTree(fieldName, target) {\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.'), path = '', val;\n                while (parts.length > 1) {\n                    path += parts.shift();\n                    val = kendo.getter(path)(target) || {};\n                    kendo.setter(path)(target, val);\n                    path += '.';\n                }\n            }\n        }\n        function seriesTotal(series) {\n            var data = series.data;\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                var pointData = SeriesBinder.current.bindPoint(series, i);\n                var value = pointData.valueFields.value;\n                if (typeof value === STRING) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value) && pointData.fields.visible !== false) {\n                    sum += math.abs(value);\n                }\n            }\n            return sum;\n        }\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient != 'none';\n        }\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            var axisRange;\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var accept = key == 'none' && !(e.ctrlKey || e.shiftKey || e.altKey) || e[key + 'Key'];\n            return accept;\n        }\n        function preloadFonts(options, callback) {\n            var fonts = [];\n            fetchFonts(options, fonts);\n            kendo.util.loadFonts(fonts, callback);\n        }\n        function fetchFonts(options, fonts, state) {\n            var MAX_DEPTH = 5;\n            state = state || { depth: 0 };\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        }\n        function clearMissingValues(originalOptions, options) {\n            var fieldValue, originalValue, field, nullValue;\n            for (field in options) {\n                fieldValue = options[field];\n                originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isPlainObject(fieldValue)) {\n                        if (isPlainObject(fieldValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        dataviz.ui.plugin(Chart);\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        deepExtend(dataviz, {\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            CategoryAxis: CategoryAxis,\n            ChartAxis: ChartAxis,\n            ChartContainer: ChartContainer,\n            ChartPane: ChartPane,\n            ChartPlotArea: ChartPlotArea,\n            ChartSeries: ChartSeries,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            ShapeElement: ShapeElement,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            addDuration: addDuration,\n            areNumbers: areNumbers,\n            axisGroupBox: axisGroupBox,\n            categoriesCount: categoriesCount,\n            ceilDate: ceilDate,\n            countNumbers: countNumbers,\n            duration: duration,\n            ensureTree: ensureTree,\n            indexOf: indexOf,\n            isNumber: isNumber,\n            floorDate: floorDate,\n            filterSeriesByType: filterSeriesByType,\n            hasValue: hasValue,\n            lteDateIndex: lteDateIndex,\n            evalOptions: evalOptions,\n            seriesTotal: seriesTotal,\n            singleItemOrArray: singleItemOrArray,\n            sortDates: sortDates,\n            startOfWeek: startOfWeek,\n            transpose: transpose,\n            toDate: toDate,\n            toTime: toTime,\n            uniqueDates: uniqueDates\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}