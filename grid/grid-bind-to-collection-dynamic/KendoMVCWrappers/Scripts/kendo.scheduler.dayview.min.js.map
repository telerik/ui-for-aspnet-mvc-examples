{"version":3,"sources":["kendo.scheduler.dayview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","idx","events","_continuousEvents","lastEvent","length","startDate","getDate","start","getTime","splice","uid","attr","kendo","end","push","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","window","ui","SchedulerView","extend","proxy","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","BORDER_SIZE_COEFF","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","ALLDAY_EVENT_WRAPPER_STRING","EVENT_WRAPPER_STRING","MultiDayView","init","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","timezone","timezoneOffset","groupsCount","firstTimesCell","lastTimesCell","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","elementHtml","timesTableMarker","markerTopPosition","timesTableMarkerCss","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","times","find","remove","content","orientation","groups","toUtcTime","timeSlotRanges","slotByStartDate","prependTo","Math","round","innerRect","top","_isRtl","right","position","left","outerHeight","addClass","outerWidth","css","height","width","scrollWidth","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","_updateResizeHint","event","startTime","endTime","hint","rangeIndex","slotIdx","slot","rect","format","container","multiday","isMultiDay","_removeResizeHint","startSlot","_isGroupedByDate","index","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","outerRect","snap","bottom","appendTo","text","first","toString","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","pop","clientWidth","offsetHeight","_createEventElement","clone","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","rowCount","rowMultiplier","cellMultiplier","cells","timeIndex","interval","_timeSlotInterval","verticalViews","tableRows","floor","children","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","columnIndex","_addResourceView","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","resourceInfo","parent","hasClass","pageX","pageY","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","target","location","_allDayUserEvents","_editUserEvents","eventElement","_layout","dates","column","columns","rows","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","_footer","html","isWorkDay","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","majorTickDivider","isMajorTickRow","isMiddleRow","isLastSlotRow","_content","allDayVerticalGroupRow","appendRow","rowIdx","isVerticalGroupped","dateID","rowLevels","columnLevels","result","dateGroupIndex","dateIndex","groupIdx","_addCellsToContent","append","tmplDate","classes","_isWorkDay","i","day","getDay","_render","allDayHeader","_startDate","_endDate","createLayout","refreshLayout","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","_end","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","_timeSlotIndex","eventStartTime","timeSlotInterval","_slotIndex","_dateSlotIndex","slotStart","slotEnd","slots","_positionAllDayEvent","slotRange","rowEvents","j","eventLength","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","leftOffset","rightOffset","eventHeight","addEvent","slotIndex","createRows","_arrangeColumns","eventRightOffset","columnEvents","eventElements","slotEvents","columnWidth","createColumns","style","_positionEvent","_startTime","_endTime","isOneDayEvent","head","tail","middle","eventStartDate","eventEndDate","data","isMobile","showDelete","resizable","resize","_time","eventEndTime","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","firstSlot","lastSlot","_updateAllDayHeaderHeight","allDaySlots","_height","refresh","_renderEvents","isMultiDayEvent","rangeCount","occurrence","newStart","newEnd","dateRange","allDayEventContainer","slotRanges","daySlotRanges","setDate","render","eventsByResource","eventsPerDate","Query","sort","field","dir","toArray","_eventsByResource","map","grep","itemIdx","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","verticalByDate","endMilliseconds","_timeSlotCollections","_getCollections","daySlotCollectionCount","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,2BAA4B,wBAAyBD,IAC9D,WAo7CE,MA36CC,UAAUE,EAAGC,GAGV,QAASC,GAAgBC,GACrB,GAAIC,GAAa,GAAIC,MAAK,KAAM,EAAG,EAAG,EAAG,EAAG,EAE5C,OADAC,GAAQF,EAAYG,EAAgBJ,IAC7BC,EAEX,QAASI,GAAcC,EAAOC,EAAKC,GAC/B,MAAOF,IAASC,GAAgBC,GAATF,EAE3B,QAASG,GAAcH,EAAOC,EAAKC,EAAKE,GAEpC,MADAA,GAAWA,EAAoBF,GAATF,EAAuBE,EAARF,EAC9BA,EAAQC,GAAOG,EAE1B,QAASC,GAAmBC,EAAOC,EAAOC,EAASC,GAAnD,GAKYC,GAJJC,EAASL,EAAMM,kBACfC,EAAYF,EAAOA,EAAOG,OAAS,GACnCC,EAAYC,EAAQT,EAAMU,MAAMF,aAAaG,SACjD,IAAIT,GAAYI,GAAaG,EAAQH,EAAUI,MAAMF,aAAaG,WAAaH,EAAW,CAEtF,IADIL,EAAMC,EAAOG,OAAS,EACnBJ,EAAM,MACLC,EAAOD,GAAKD,UAAYO,EAAQL,EAAOD,GAAKO,MAAMF,aAAaG,UAAYH,GADlEL,KAKjBC,EAAOQ,OAAOT,EAAM,EAAG,GACnBF,QAASA,EACTC,UAAU,EACVW,IAAKZ,EAAQa,KAAKC,EAAMD,KAAK,QAC7BJ,MAAOV,EAAMU,MACbM,IAAKhB,EAAMgB,UAGfZ,GAAOa,MACHhB,QAASA,EACTC,SAAUA,EACVW,IAAKZ,EAAQa,KAAKC,EAAMD,KAAK,QAC7BJ,MAAOV,EAAMU,MACbM,IAAKhB,EAAMgB,MAIvB,QAASE,GAAYC,GAArB,GACQC,MACAC,EAAWF,EAAQG,aAEvB,KADAF,EAASH,KAAKI,GACPF,EAAQI,aAAeF,GACtBA,EAAW,EACXA,GAAY,EAEZA,IAEJD,EAASH,KAAKI,EAElB,OAAOD,GAvDd,GACOL,GAAQS,OAAOT,MAAOU,EAAKV,EAAMU,GAAInC,EAAUyB,EAAM5B,KAAKG,QAASoC,EAAgBD,EAAGC,cAAeC,EAAS3C,EAAE2C,OAAQC,EAAQ5C,EAAE4C,MAAOnB,EAAUM,EAAM5B,KAAKsB,QAASoB,EAAgBd,EAAM5B,KAAK0C,cAAeC,EAAaf,EAAM5B,KAAK2C,WAAYC,EAA4B,iBAAkBC,EAAkC,uBAAwBC,EAAoB,MAAQ1C,EAAkBwB,EAAM5B,KAAKI,gBAAiB2C,EAAK,qBAC5aC,EAA0BpB,EAAMqB,SAAS,iPAAiQC,EAAkCtB,EAAMqB,SAAS,uIAAkJE,EAAuBvB,EAAMqB,SAAS,6EAAkFG,EAA8B,68BAAwnCC,EAAuB,mhCAuDlxDC,EAAef,EAAcC,QAC7Be,KAAM,SAAUzC,EAASkB,GACrB,GAAIwB,GAAOC,IACXlB,GAAcmB,GAAGH,KAAKI,KAAKH,EAAM1C,EAASkB,GAC1CwB,EAAKI,MAAQJ,EAAKxB,QAAQ4B,OAASJ,EAAKxB,QAAQ6B,KAChDL,EAAKM,UAAY/B,EAAYyB,EAAKxB,SAClCwB,EAAKO,aACLP,EAAKQ,YACLR,EAAKS,qBACLT,EAAKU,UACLV,EAAKW,cAAa,IAEtBC,0BAA2B,WACvBX,KAAKY,yBAAyB,GAAInE,QAEtCmE,yBAA0B,SAAUC,GAAV,GAGdC,GAEIC,EAMRC,EACAC,EACAC,EACKC,EACDC,EAIAC,EACAC,EAIAC,EACAC,EAEIC,EACAC,EACAC,EACAC,EA7BRrD,EAAUyB,KAAKzB,OAanB,KAZIA,EAAQsD,kBAAkBC,oBAAqB,IAC3ChB,EAAWvC,EAAQwD,WAAWxD,QAAQyD,OAAOlB,SAC7CvC,EAAQwD,YAAcjB,IAClBC,EAAiB5C,EAAM2C,SAASmB,OAAOpB,EAAaC,GACxDD,EAAc1C,EAAM2C,SAASoB,QAAQrB,EAAaA,EAAYsB,oBAAqBpB,KAG3Ff,KAAKoC,MAAMC,KAAK,IAAMlD,GAA2BmD,SACjDtC,KAAKuC,QAAQF,KAAK,IAAMlD,GAA2BmD,SAC/CtB,EAAezC,EAAQpB,OAAsC,cAA7BoB,EAAQpB,MAAMqF,YAAkCxC,KAAKyC,OAAO9E,OAAhB,EAC5EsD,EAAiBjB,KAAKoC,MAAMC,KAAK,qBACjCnB,EAAgBlB,KAAKoC,MAAMC,KAAK,oBAC3BlB,EAAa,EAAgBH,EAAbG,EAA0BA,IAAc,CAE7D,GADIC,EAAepB,KAAKyC,OAAOtB,IAC1BC,EACD,MAIJ,IAFIC,EAAiBlD,EAAM5B,KAAKmG,UAAU7B,GACtCS,EAASF,EAAauB,eAAetB,EAAgBA,EAAiB,GACpD,IAAlBC,EAAO3D,OACP,MAEA4D,GAAaD,EAAO,GAAGC,WACvBC,EAAcD,EAAWqB,gBAAgB/B,GACzCW,IACIC,EAAc,eAAkBtC,EAA4B,WAC5DuC,EAAmBtF,EAAEqF,GAAaoB,UAAU7C,KAAKoC,OACjDT,EAAoBmB,KAAKC,MAAMzB,EAAO,GAAG0B,UAAUnC,EAAa,GAAIpE,MAAKoE,EAAY9C,UAAY,IAAI,GAAOkF,KAC5GrB,KACA5B,KAAKkD,QACLtB,EAAoBuB,MAAQlC,EAAemC,WAAWC,KAAOpC,EAAeqC,cAAgBpC,EAAcoC,cAC1G5B,EAAiB6B,SAASnE,EAAkC,WAE5DwC,EAAoByB,KAAOnC,EAAckC,WAAWC,KACpD3B,EAAiB6B,SAASnE,EAAkC,WAEhEwC,EAAoBqB,IAAMtB,EAAoBD,EAAiB8B,aAAenE,EAAoB,EAClGqC,EAAiB+B,IAAI7B,GACrBxF,EAAEqF,GAAaoB,UAAU7C,KAAKuC,SAASkB,KACnCR,IAAKtB,EACL+B,OAAQ,MACRP,MAAO,MACPQ,MAAO3D,KAAKuC,QAAQ,GAAGqB,YACvBP,KAAM,OAKtB3C,aAAc,SAAUmD,GAAV,GACN9D,GAAOC,KACP8D,EAAgB/D,EAAKxB,QAAQsD,iBAC7BiC,MAAkB,GAASA,EAAcC,iBAAmB1H,IAC5D0D,EAAKY,4BACDkD,IACA9D,EAAKiE,wBAA0BC,YAAYjF,EAAMgB,KAAKW,0BAA2BZ,GAAO+D,EAAcC,mBAIlHG,kBAAmB,SAAUC,EAAOhD,EAAYiD,EAAWC,GAAxC,GAIXV,GAAOD,EAAQT,EAAKqB,EAEfC,EACDnH,EACAU,EAES0G,EACDC,EAcAC,EAQZC,EACAC,EAjCAC,EAAWV,EAAMW,aACjB3H,EAAQ6C,KAAKyC,OAAOtB,GACpBG,EAASnE,EAAMmE,OAAO8C,EAAWC,EAASQ,EAAUV,EAAM7G,SAG9D,KADA0C,KAAK+E,oBACIR,EAAa,EAAgBjD,EAAO3D,OAApB4G,EAA4BA,IAGjD,GAFInH,EAAQkE,EAAOiD,GACfzG,EAAQV,EAAM4H,YACdhF,KAAKiF,oBAAsBJ,EAC3B,IAASL,EAAU1G,EAAMoH,MAAkB9H,EAAMgB,IAAI8G,OAArBV,EAA4BA,IACpDC,EAAOrH,EAAMmE,WAAW4D,OAAOX,GACnCb,EAAQc,EAAKW,YACb1B,EAASe,EAAKY,aACdpC,EAAMwB,EAAKa,UACXhB,EAAOxF,EAAcmB,GAAGsF,kBAAkBrF,KAAKF,KAAMyE,EAAKe,WAAYvC,EAAKU,EAAOD,GAClF1D,KAAKyF,YAAczF,KAAKyF,YAAYC,IAAIpB,OAG5CX,GAAQ7F,EAAMsH,YACd1B,EAAS5F,EAAMuH,aACfpC,EAAMnF,EAAMwH,UACRT,EACAlB,EAAQvG,EAAMuI,cAEVjB,EAAOtH,EAAMwI,UAAUxB,EAAWC,EAASrE,KAAKzB,QAAQsH,MAC5D5C,EAAMyB,EAAKzB,IACXS,EAASgB,EAAKoB,OAASpB,EAAKzB,KAEhCqB,EAAOxF,EAAcmB,GAAGsF,kBAAkBrF,KAAKF,KAAMlC,EAAM0H,WAAYvC,EAAKU,EAAOD,GACnF1D,KAAKyF,YAAczF,KAAKyF,YAAYC,IAAIpB,EAG5CK,GAAS,IACTC,EAAY5E,KAAKuC,QACjBsC,IACAF,EAAS,OACTC,EAAY5E,KAAK3C,QAAQgF,KAAK,mEACzBuC,EAAUjH,SACXiH,EAAY5E,KAAKuC,UAGzBvC,KAAKyF,YAAYM,SAASnB,GAC1B5E,KAAKyF,YAAYpD,KAAK,gCAAgC2D,KAAK,IAC3DhG,KAAKyF,YAAYQ,QAAQ1C,SAAS,WAAWlB,KAAK,gBAAgB2D,KAAK7H,EAAM+H,SAAS/H,EAAM2C,SAASqF,YAAY/B,GAAYO,IAC7H3E,KAAKyF,YAAYW,OAAO7C,SAAS,UAAUlB,KAAK,mBAAmB2D,KAAK7H,EAAM+H,SAAS/H,EAAM2C,SAASqF,YAAY9B,GAAUM,KAEhI0B,gBAAiB,SAAUlC,EAAOhD,EAAYmF,GAA7B,GAcJ/B,GACDnH,EACA4H,EACAV,EACAb,EAKSe,EACDC,EAiBAC,EAYZnC,EApDAsC,EAAWV,EAAMW,aACjB3H,EAAQ6C,KAAKyC,OAAOtB,GACpBrD,EAAQK,EAAM5B,KAAKmG,UAAUyB,EAAMrG,OAASwI,EAC5ClI,EAAMN,EAAQqG,EAAMoC,WACpBjF,EAASnE,EAAMmE,OAAOxD,EAAOM,EAAKyG,EAAUV,EAAM7G,SAStD,KARAQ,EAAQK,EAAM2C,SAASqF,YAAYrI,GACnCM,EAAMD,EAAM2C,SAASqF,YAAY/H,GACjC4B,KAAKwG,mBACA3B,IAAsC,IAAzBlI,EAAgByB,IAAczB,EAAgByB,GAAOzB,EAAgBqD,KAAKoE,eACpF9C,EAAO3D,OAAS,GAChB2D,EAAOmF,MAGNlC,EAAa,EAAgBjD,EAAO3D,OAApB4G,EAA4BA,IAQjD,GAPInH,EAAQkE,EAAOiD,GACfS,EAAY5H,EAAMU,MAElB2F,GACAJ,KAAM2B,EAAUQ,WAAa,EAC7BvC,IAAK+B,EAAUM,WAEftF,KAAKiF,oBAAsBJ,EAC3B,IAASL,EAAUQ,EAAUE,MAAkB9H,EAAMgB,IAAI8G,OAArBV,EAA4BA,IACxDC,EAAOrH,EAAMmE,WAAW4D,OAAOX,GACnCf,EAAIJ,KAAOrD,KAAKkD,OAA4B,GAAnBuB,EAAKiC,YAAoBjC,EAAKe,WAAa,EAAIf,EAAKe,WAAa,EAC1F/B,EAAIC,OAASe,EAAKkC,aAClBlD,EAAIE,MAA2B,GAAnBc,EAAKiC,YAAoB,EACrCpC,EAAOtE,KAAK4G,oBAAoBzC,EAAM0C,OAClC/I,MAAOA,EACPM,IAAKA,KACJyG,GACL7E,KAAK8G,gBAAgBxC,EAAMb,OAG3BzD,MAAKkD,SACLO,EAAIJ,KAA+B,GAAxB2B,EAAU0B,YAAoB1B,EAAUQ,WAAa,GAEhEX,EACApB,EAAIE,MAAQvG,EAAMuI,aAAe,GAE7BjB,EAAOtH,EAAMwI,UAAU9H,EAAOM,EAAK4B,KAAKzB,QAAQsH,MACpDpC,EAAIR,IAAMyB,EAAKzB,IACfQ,EAAIC,OAASgB,EAAKoB,OAASpB,EAAKzB,IAChCQ,EAAIE,MAAgC,GAAxBqB,EAAU0B,YAAoB,GAE9CpC,EAAOtE,KAAK4G,oBAAoBzC,EAAM0C,OAClC/I,MAAOA,EACPM,IAAKA,KACJyG,GACL7E,KAAK8G,gBAAgBxC,EAAMb,EAG/BlB,GAAUvC,KAAKuC,QACfsC,IACAtC,EAAUvC,KAAK3C,QAAQgF,KAAK,mEACvBE,EAAQ5E,SACT4E,EAAUvC,KAAKuC,UAGvBvC,KAAK+G,UAAUhB,SAASxD,IAE5BuE,gBAAiB,SAAUxC,EAAMb,GAC7Ba,EAAKf,SAAS,qBACde,EAAKb,IAAIA,GACTzD,KAAK+G,UAAY/G,KAAK+G,UAAUrB,IAAIpB,IAExC0C,gBAAiB,SAAUC,EAAGC,GAAb,GACTzC,GAAMxC,EAcN9E,EACAgE,CACJ,KAfInB,KAAKmH,wBACLlF,EAASjC,KAAKuC,QAAQN,SACtBiF,GAAKlH,KAAKuC,QAAQ,GAAG6E,UACrBH,GAAKjH,KAAKuC,QAAQ,GAAG8E,YAErBpF,EAASjC,KAAK3C,QAAQgF,KAAK,6DAA6DA,KAAK,QAAQJ,SAErGA,IACAgF,GAAKhF,EAAOoB,KACZ6D,GAAKjF,EAAOgB,KAEhBgE,EAAInE,KAAKwE,KAAKL,GACdC,EAAIpE,KAAKwE,KAAKJ,GAGT/F,EAAa,EAAgBnB,KAAKyC,OAAO9E,OAAzBwD,EAAiCA,IAGlD,GAFAhE,EAAQ6C,KAAKyC,OAAOtB,GACpBsD,EAAOtH,EAAMoK,kBAAkBN,EAAGC,EAAGlH,KAAKiF,oBAEtC,MAAOR,EAgBf,KAbIxC,IACAgF,GAAKhF,EAAOoB,KACZ6D,GAAKjF,EAAOgB,KAEhBhB,EAASjC,KAAKuC,QAAQN,SACtBgF,GAAKhF,EAAOoB,KACZ6D,GAAKjF,EAAOgB,IACPjD,KAAKmH,yBACND,GAAKlH,KAAKuC,QAAQ,GAAG6E,UACrBH,GAAKjH,KAAKuC,QAAQ,GAAG8E,YAEzBJ,EAAInE,KAAKwE,KAAKL,GACdC,EAAIpE,KAAKwE,KAAKJ,GACT/F,EAAa,EAAgBnB,KAAKyC,OAAO9E,OAAzBwD,EAAiCA,IAGlD,GAFAhE,EAAQ6C,KAAKyC,OAAOtB,GACpBsD,EAAOtH,EAAMqK,mBAAmBP,EAAGC,GAE/B,MAAOzC,EAGf,OAAO,OAEXgD,YAAa,WAAA,GACLC,GAAY1H,KAAK2H,iBACjBC,EAAS5H,KAAKiF,kBAClB,OAAIyC,GAAU/J,OACuB,aAA7BqC,KAAK6H,oBACDD,EACO5H,KAAK8H,qBAAqBJ,EAAU/J,OAAS,GAE7CqC,KAAK+H,kBAAkBL,EAAU/J,OAAS,GAGjDiK,EACO5H,KAAK8H,qBAAqBJ,EAAU/J,QAAUqC,KAAK8H,qBAAqB,GAExE9H,KAAK8H,qBAAqBJ,EAAU/J,QAAUqC,KAAKgI,yBAAyBN,EAAU/J,QAIlG,GAEXsK,2BAA4B,WAAA,GACpBP,GAAY1H,KAAK2H,iBACjBC,EAAS5H,KAAKiF,kBAClB,QAAKyC,EAAU/J,QAAUqC,KAAKmH,uBACtBS,EACO5H,KAAK+H,kBAAkB,GAEvB/H,KAAK8H,qBAAqB,GAGrCF,EACO5H,KAAK8H,qBAAqB,GAE1B9H,KAAKgI,yBAAyBN,EAAU/J,SAGvDuK,gBAAiB,SAAUC,EAAYC,GAAtB,GAKTjL,GAAOkL,EAAMC,EAAUC,EAEvBC,EAOKrH,EACDsH,EACAC,EAQIC,EAIAC,EA3BRC,EAAW7I,KAAK8I,oBAChBC,EAAgBZ,EAChBP,EAAS5H,KAAKiF,mBACd+D,EAAYhJ,KAAKuC,QAAQF,KAAK,sCAUlC,KARA2G,EAAU9K,KAAK,OAAQ,OACnBsK,EAAWQ,EAAUrL,OACrBqC,KAAKmH,yBACDS,IACAmB,EAAgBX,GAEpBI,EAAW1F,KAAKmG,MAAMT,EAAWO,IAE5B5H,EAAa,EAAgB4H,EAAb5H,EAA4BA,IASjD,IARIsH,EAAgB,EAChBC,EAAiB,EACjB1I,KAAKmH,uBACLsB,EAAgBtH,EAEhBuH,EAAiBvH,EAErBmH,EAAWG,EAAgBD,GACRC,EAAgB,GAAKD,EAAjCF,GAA2C,CAM9C,GALIK,EAAQK,EAAUV,GAAUY,SAC5BZ,EAAWE,IAAa,IACxBH,EAAO1L,EAAgB,GAAIF,OAAMuD,KAAKoE,eAEtCwE,EAAY,EACZhB,EACA,GAAI5H,KAAKmH,uBACL,IAAKoB,EAAY,EAAeJ,EAAZI,EAAwBA,IACxCpL,EAAQ6C,KAAKyC,OAAO8F,GACpBvI,KAAKmJ,kBAAkBhM,EAAOwL,EAAOJ,EAAWF,EAAMQ,EAAU1H,OAIpE,KADAhE,EAAQ6C,KAAKyC,OAAOtB,GACfoH,EAAYG,EAA4BP,EAAaC,EAAzBG,EAAsCA,GAAwBJ,EAC3FnI,KAAKmJ,kBAAkBhM,EAAOwL,EAAOJ,EAAWF,EAAMQ,EAAUD,GAChEA,QAKR,KADAzL,EAAQ6C,KAAKyC,OAAOtB,GACfoH,EAAYG,EAAiBN,GAA0BM,EAAiB,GAAKN,EAAnCG,EAAgDA,IAC3FvI,KAAKmJ,kBAAkBhM,EAAOwL,EAAOJ,EAAWF,EAAMQ,EAAUD,GAChEA,GAGRP,IAAQQ,EACRP,MAIZa,kBAAmB,SAAUhM,EAAOwL,EAAOJ,EAAWF,EAAMQ,EAAUD,GAAnD,GACXQ,GAAOT,EAAMJ,GACbhH,EAAapE,EAAMkM,sBAAsBT,GACzCU,EAActJ,KAAKuJ,OAAOX,GAC1B/H,EAAcpE,KAAK+M,IAAIF,EAAYG,cAAeH,EAAYI,WAAYJ,EAAYzL,WACtFC,EAAQ+C,EAAcwH,EACtBjK,EAAMN,EAAQ+K,CAClBO,GAAKO,aAAa,OAAQ,YAC1BP,EAAKO,aAAa,iBAAiB,GACnCpI,EAAWqI,YAAYR,EAAMtL,EAAOM,IAExCyL,iBAAkB,SAAUtI,EAAYoH,EAAOJ,EAAWH,EAAa0B,GAArD,GACVV,GAAOT,EAAMJ,GACbzK,EAAQkC,KAAKuJ,OAAOO,GACpBjJ,EAAcpE,KAAK+M,IAAI1L,EAAM2L,cAAe3L,EAAM4L,WAAY5L,EAAMD,UACxEuL,GAAKO,aAAa,OAAQ,YAC1BP,EAAKO,aAAa,iBAAiB,GACnCpI,EAAWwI,WAAWX,EAAMvI,EAAaA,EAAc1C,EAAM5B,KAAK2C,aAEtE8K,eAAgB,SAAU7B,EAAYC,GAAtB,GACRY,GAAWT,EAYNpH,EACDsH,EACAtL,EAAOoE,EAIPoH,EACAD,EAIAoB,EAtBJf,EAAgBZ,EAChBP,EAAS5H,KAAKiF,kBAUlB,KATIjF,KAAKmH,wBACDS,IACAmB,EAAgBX,GAEpBY,EAAYhJ,KAAK3C,QAAQgF,KAAK,gCAE9B2G,EAAYhJ,KAAK3C,QAAQgF,KAAK,kCAElC2G,EAAU9K,KAAK,OAAQ,OACdiD,EAAa,EAAgB4H,EAAb5H,EAA4BA,IAYjD,GAXIsH,EAAgB,EAEhBzI,KAAKmH,yBACLsB,EAAgBtH,GAEhBwH,EAAQK,EAAUP,GAAeS,SACjCR,EAAiB,EAChB1I,KAAKmH,yBACNuB,EAAiBvH,GAEjB2I,EAAY,EACZlC,EACA,GAAI5H,KAAKmH,uBACL,IAAKoB,EAAY,EAAeJ,EAAZI,EAAwBA,IACxCpL,EAAQ6C,KAAKyC,OAAO8F,GACpBhH,EAAapE,EAAM8M,qBAAqB,GACxCjK,KAAK6J,iBAAiBtI,EAAYoH,EAAOJ,EAAWH,EAAajH,OAKrE,KAFAhE,EAAQ6C,KAAKyC,OAAOtB,GACpBI,EAAapE,EAAM8M,qBAAqB,GACnC1B,EAAYG,EAA4BP,EAAaC,EAAzBG,EAAsCA,GAAwBJ,EAC3FnI,KAAK6J,iBAAiBtI,EAAYoH,EAAOJ,EAAWH,EAAa0B,GACjEA,QAMR,KAFA3M,EAAQ6C,KAAKyC,OAAOtB,GACpBI,EAAapE,EAAM8M,qBAAqB,GACnC1B,EAAYG,EAAiBN,GAA0BM,EAAiB,GAAKN,EAAnCG,EAAgDA,IAC3FvI,KAAK6J,iBAAiBtI,EAAYoH,EAAOJ,EAAWH,EAAa0B,GACjEA,KAKhBrJ,QAAS,WAAA,GAIIlD,GACD2M,EACKC,EALThC,EAAanI,KAAKyH,cAClBW,EAAcpI,KAAKiI,4BAEvB,KADAjI,KAAKyC,UACIlF,EAAM,EAAS4K,EAAN5K,EAAkBA,IAAO,CAEvC,IADI2M,EAAOlK,KAAKoK,iBAAiB7M,GACxB4M,EAAc,EAAiB/B,EAAd+B,EAA2BA,IACjDD,EAAKG,sBAAsBrK,KAAKuJ,OAAOY,GAAchM,EAAM5B,KAAK+N,QAAQtK,KAAKuJ,OAAOY,GAAc,GAElGnK,MAAKzB,QAAQgM,YACbL,EAAKM,qBAAqBxK,KAAKuJ,OAAO,GAAIpL,EAAM5B,KAAK+N,QAAQtK,KAAKuJ,OAAOvJ,KAAKuJ,OAAO5L,OAAS,GAAI,IAG1GqC,KAAKkI,gBAAgBC,EAAYC,GAC7BpI,KAAKzB,QAAQgM,YACbvK,KAAKgK,eAAe7B,EAAYC,IAGxC7J,SACI6B,KAAM,eACNqK,mBAAoB,QACpBC,wBAAyB,QACzBH,YAAY,EACZI,eAAe,EACfxK,MAAO,GACPiE,UAAWjG,EAAM5B,KAAKqO,QACtBvG,QAASlG,EAAM5B,KAAKqO,QACpBC,eAAgB,EAChBC,UAAW,GACXC,wBAAyB,+BACzBC,wBAAyB,SACzBC,oBAAqB,UACrBC,aAAc,SACdC,mBAAoB,SACpBC,cAAe7L,EACf8L,oBAAqB5L,EACrB6L,mBAAoB5L,EACpB6L,UAAU,EACVC,aAAc,GAAI/O,MAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GACzCgP,WAAY,GAAIhP,MAAK,KAAM,EAAG,EAAG,GAAI,EAAG,GACxCiC,cAAe,EACfC,YAAa,EACb+M,QAAUC,QAAS,WACnBC,UACIC,OAAQ,UACRC,YAAa,gBACbC,YAAa,uBAEjBlK,mBACIkC,eAAgB,IAChBjC,kBAAkB,IAG1BtE,QACI,SACA,MACA,QAEJ8C,WAAY,WACR,GAAI/B,GAAUyB,KAAKzB,QAASyN,EAAWjN,KAAWZ,EAAM8N,SAAU1N,EAAQ2N,iBAC1ElM,MAAKoL,cAAgBpL,KAAKmM,WAAW5N,EAAQ6M,cAAexL,GAC5DI,KAAKqL,oBAAsBrL,KAAKmM,WAAW5N,EAAQ8M,oBAAqB1L,GACxEK,KAAK+K,wBAA0B5M,EAAMqB,SAASjB,EAAQwM,wBAAyBiB,GAC/EhM,KAAKgL,wBAA0B7M,EAAMqB,SAASjB,EAAQyM,wBAAyBgB,GAC/EhM,KAAKsL,mBAAqBnN,EAAMqB,SAASjB,EAAQ+M,mBAAoBU,GACrEhM,KAAKkL,aAAe/M,EAAMqB,SAASjB,EAAQ2M,aAAcc,GACzDhM,KAAKmL,mBAAqBhN,EAAMqB,SAASjB,EAAQ4M,mBAAoBa,GACrEhM,KAAKiL,oBAAsB9M,EAAMqB,SAASjB,EAAQ0M,oBAAqBe,IAE3EzL,UAAW,WACHP,KAAKzB,QAAQgN,WACTvL,KAAKoM,YACLpM,KAAKqM,iBAELrM,KAAKsM,mBAIjBA,eAAgB,WACZ,GAAIvM,GAAOC,IACXD,GAAK1C,QAAQkP,GAAG,QAAUjN,EAAI,8BAA+B,SAAUkN,GACnEzM,EAAK0M,QAAQ,UAAYxO,IAAK7B,EAAE4D,MAAM0M,QAAQ,YAAYxO,KAAKC,EAAMD,KAAK,UAC1EsO,EAAEG,mBAEF5M,EAAKxB,QAAQgN,SAASqB,UAAW,GACjC7M,EAAK1C,QAAQkP,GAAG,WAAajN,EAAI,0BAA2B,SAAUkN,GAAV,GAEhD/H,GAEIoI,CAHPzQ,GAAE4D,MAAM8M,SAASC,SAAS,gCACvBtI,EAAO1E,EAAKiH,gBAAgBwF,EAAEQ,MAAOR,EAAES,OACvCxI,IACIoI,EAAe9M,EAAKmN,gBAAgBzI,GACxC1E,EAAK0M,QAAQ,OACTU,UAAWpO,GACPjB,MAAO2G,EAAK7G,YACZQ,IAAKqG,EAAK2I,WACXP,MAGXL,EAAEG,oBAEPJ,GAAG,WAAajN,EAAI,iCAAkC,SAAUkN,GAAV,GAG7CK,GAFJpI,EAAO1E,EAAKiH,gBAAgBwF,EAAEQ,MAAOR,EAAES,MACvCxI,KACIoI,EAAe9M,EAAKmN,gBAAgBzI,GACxC1E,EAAK0M,QAAQ,OACTU,UAAWpO,MACPzB,UAAU,EACVQ,MAAOK,EAAM5B,KAAKsB,QAAQ4G,EAAK7G,aAC/BQ,IAAKD,EAAM5B,KAAKsB,QAAQ4G,EAAK7G,cAC9BiP,MAGXL,EAAEG,mBAGN5M,EAAKxB,QAAQgN,SAAS8B,UAAW,GACjCtN,EAAK1C,QAAQkP,GAAG,WAAajN,EAAI,WAAY,SAAUkN,GACnDzM,EAAK0M,QAAQ,QAAUxO,IAAK7B,EAAE4D,MAAM0M,QAAQ,YAAYxO,KAAKC,EAAMD,KAAK,UACxEsO,EAAEG,oBAIdN,eAAgB,WAAA,GACRtM,GAAOC,KACPsN,EAAY,CACZnP,GAAMoP,QAAQC,SAASC,UACvBH,EAAY,GAEZvN,EAAKxB,QAAQgN,SAASqB,UAAW,IACjC7M,EAAK2N,eAAiB,GAAIvP,GAAMwP,WAAW5N,EAAK1C,SAC5CiQ,UAAWA,EACXM,OAAQ,0BACRC,IAAK,SAAUrB,GAAV,GAEOvF,GACAC,EACAzC,EAEIoI,CALPzQ,GAAEoQ,EAAEsB,QAAQhB,SAASC,SAAS,gCAC3B9F,EAAIuF,EAAEvF,EAAE8G,WAAa1R,EAAYmQ,EAAEvF,EAAE8G,SAAWvB,EAAEvF,EAClDC,EAAIsF,EAAEtF,EAAE6G,WAAa1R,EAAYmQ,EAAEtF,EAAE6G,SAAWvB,EAAEtF,EAClDzC,EAAO1E,EAAKiH,gBAAgBC,EAAGC,GAC/BzC,IACIoI,EAAe9M,EAAKmN,gBAAgBzI,GACxC1E,EAAK0M,QAAQ,OACTU,UAAWpO,GACPjB,MAAO2G,EAAK7G,YACZQ,IAAKqG,EAAK2I,WACXP,MAGXL,EAAEG,qBAId5M,EAAKiO,kBAAoB,GAAI7P,GAAMwP,WAAW5N,EAAK1C,SAC/CiQ,UAAWA,EACXM,OAAQ,iCACRC,IAAK,SAAUrB,GAAV,GAKOK,GAJJ5F,EAAIuF,EAAEvF,EAAE8G,WAAa1R,EAAYmQ,EAAEvF,EAAE8G,SAAWvB,EAAEvF,EAClDC,EAAIsF,EAAEtF,EAAE6G,WAAa1R,EAAYmQ,EAAEtF,EAAE6G,SAAWvB,EAAEtF,EAClDzC,EAAO1E,EAAKiH,gBAAgBC,EAAGC,EAC/BzC,KACIoI,EAAe9M,EAAKmN,gBAAgBzI,GACxC1E,EAAK0M,QAAQ,OACTU,UAAWpO,MACPzB,UAAU,EACVQ,MAAOK,EAAM5B,KAAKsB,QAAQ4G,EAAK7G,aAC/BQ,IAAKD,EAAM5B,KAAKsB,QAAQ4G,EAAK7G,cAC9BiP,MAGXL,EAAEG,qBAIV5M,EAAKxB,QAAQgN,SAAS8B,UAAW,IACjCtN,EAAKkO,gBAAkB,GAAI9P,GAAMwP,WAAW5N,EAAK1C,SAC7CiQ,UAAWA,EACXM,OAAQ,WACRC,IAAK,SAAUrB,GACX,GAAI0B,GAAe9R,EAAEoQ,EAAEsB,QAAQpB,QAAQ,WAClCwB,GAAanB,SAAS,mBACvBhN,EAAK0M,QAAQ,QAAUxO,IAAKiQ,EAAahQ,KAAKC,EAAMD,KAAK,UAE7DsO,EAAEG,sBAKlBwB,QAAS,SAAUC,GAAV,GAMI7Q,GACD8Q,EAOJ3G,EAbA4G,KACAC,KACAhQ,EAAUyB,KAAKzB,QACfwB,EAAOC,KACP4H,EAAS7H,EAAKkF,kBAClB,KAAS1H,EAAM,EAAS6Q,EAAMzQ,OAAZJ,EAAoBA,IAC9B8Q,KACJA,EAAOrI,KAAOjG,EAAKuL,oBAAqB/O,KAAM6R,EAAM7Q,KAChDY,EAAM5B,KAAKiS,QAAQJ,EAAM7Q,MACzB8Q,EAAOI,UAAY,WAEvBH,EAAQjQ,KAAKgQ,EA2CjB,OAzCI3G,GAAY1H,KAAK2H,iBACjBpJ,EAAQgM,YACRgE,EAAKlQ,MACD2H,KAAMzH,EAAQqN,SAASC,OACvBA,QAAQ,EACR6C,YAAa,SAAUnR,GACnB,GAAI4D,GAAa5D,CAEjB,OADAA,GAAMmK,EAAU/J,QAAuC,aAA7BoC,EAAK8H,oBAAqCtK,EAAM6Q,EAAMzQ,OAASJ,EAClFwC,EAAKoL,oBACR5O,KAAM6R,EAAM7Q,GACZmK,UAAW,WACP,MAAO3H,GAAKmN,iBAAkB/L,WAAYA,UAM9DnB,KAAK2O,cAAc3O,KAAKoE,YAAapE,KAAKqE,UAAW,SAAU9H,EAAMuO,EAAW8D,EAAWC,GAAtC,GAC7CrP,GAAWsL,EAAY/K,EAAKgL,wBAA0BhL,EAAKiL,wBAC3D8D,GACA9I,KAAMxG,GAAWjD,KAAMA,IACvBkS,UAAWI,EAAc,cAAgB,GAE7CN,GAAKlQ,KAAKyQ,KAEVpH,EAAU/J,SACuB,aAA7BqC,KAAK6H,oBACDD,GACA2G,EAAOvO,KAAK+O,kBAAkBT,EAASC,GACvCD,EAAUtO,KAAKgP,qBAAqBtH,EAAW,KAAM1H,KAAKiL,sBAE1DsD,EAAOvO,KAAKiP,kBAAkBvH,EAAW6G,EAAMvO,KAAKiL,qBAIpDqD,EADA1G,EACU5H,KAAKgP,qBAAqBtH,EAAW4G,EAAStO,KAAKiL,oBAAqBqD,GAExEtO,KAAKgP,qBAAqBtH,EAAW4G,EAAStO,KAAKiL,uBAKrEqD,QAASA,EACTC,KAAMA,IAGdW,QAAS,WAAA,GAGGC,GACAxD,EAWA5L,EAdJxB,EAAUyB,KAAKzB,OACfA,GAAQmN,UAAW,IACfyD,EAAO,4CACPxD,EAAUpN,EAAQmN,OAAOC,QACzBA,GAAuB,YAAZA,GACXwD,GAAQ,gCACRA,GAAQ,oHACRA,IAAS5Q,EAAQoM,cAAgBpM,EAAQqN,SAASE,YAAcvN,EAAQqN,SAASG,aAAe,YAChGoD,GAAQ,SAERA,GAAQ,SAEZA,GAAQ,SACRnP,KAAK0L,OAAStP,EAAE+S,GAAMpJ,SAAS/F,KAAK3C,SAChC0C,EAAOC,KACXA,KAAK0L,OAAOa,GAAG,QAAUjN,EAAI,uBAAwB,SAAUkN,GAC3DA,EAAEG,iBACF5M,EAAK0M,QAAQ,YACTvC,KAAMnK,EAAKK,MAAQ7B,EAAQ6B,KAC3B7D,KAAMwD,EAAKnC,YACXwR,WAAY7Q,EAAQoM,oBAKpCgE,cAAe,SAAU7R,EAAKC,EAAKsS,EAAQC,GAA5B,GAGPvP,GAAawP,EAA8BC,EAA8B3E,EAA8C4E,EAA0DC,EAAoD5R,EAAwB6R,EAA4BC,EAASrS,EAASI,EAAQwR,EAU/SU,EAAyDC,EAAyCC,EAAqDC,CAD/J,KAXAlT,EAAMR,EAAgBQ,GACtBC,EAAMT,EAAgBS,GAClBgD,EAAOC,KAAMuP,EAAQ5S,EAAgBG,GAAM0S,EAAQ7S,EAAgBI,GAAM8N,EAAiB9K,EAAKxB,QAAQsM,eAAgB4E,EAAkB1P,EAAKxB,QAAQuM,UAAY7L,EAAeyQ,EAAaD,EAAkB5E,GAAkB,EAAG/M,EAAQ,GAAIrB,OAAMK,GAAM6S,EAAW7R,EAAMD,UAAoBN,EAAM,EAAW4R,EAAO,GAC9TxR,EAASuB,EAAawQ,EAClBH,GAASC,IACLD,EAAQC,IACRA,GAAStQ,GAEbvB,GAAU6R,EAAQD,GAASG,GAE/B/R,EAASmF,KAAKC,MAAMpF,GACPA,EAANJ,EAAcA,IACbsS,EAAmBtS,GAAOkS,EAAkBC,GAAaI,EAAsC,IAArBD,EAAwBE,EAAiClF,EAAiB,EAApCgF,EAAuCG,EAAgBH,IAAqBhF,EAAiB,EACjNsE,GAAQE,EAAOvR,EAAOgS,EAAgBC,EAAaC,GACnDtT,EAAQoB,EAAO4R,GAAY,EAc/B,OAZIF,KACAI,EAAUjT,EAAgBmB,GACtB6R,EAAW7R,EAAMD,YACjB+R,GAAW1Q,GAEX0Q,EAAUJ,IACV1R,EAAQ,GAAIrB,OAAMM,KAGtBuS,IACAH,GAAQG,EAAMxR,IAEXqR,GAEXc,SAAU,SAAU7B,GAAV,GAYF8B,GA4CAC,EA4BKC,EAnFLrQ,EAAOC,KACPzB,EAAUwB,EAAKxB,QACfT,EAAQiC,EAAKqE,YACbhG,EAAM4B,KAAKqE,UACXrD,EAAc,EACdwH,EAAW,EACXJ,EAAcgG,EAAMzQ,OACpBwR,EAAO,GACPzH,EAAY1H,KAAK2H,iBACjBwD,EAAqBnL,KAAKmL,mBAC1BkF,GAAqB,EAErBzI,EAAS7H,EAAKkF,mBACdqL,EAAS,CAsEb,KArEI5I,EAAU/J,SACV0S,EAAkD,aAA7BtQ,EAAK8H,oBACtBwI,GACA7H,EAAWxI,KAAK+H,kBAAkB/H,KAAKuQ,UAAU5S,OAAS,GACtDiK,IACA5G,EAAchB,KAAK8H,qBAAqB9H,KAAKwQ,aAAa7S,OAAS,IAEnEY,EAAQgM,aACR2F,EAAyB,SAAU/O,GAAV,GAcR5D,GAbTkT,EAAS,0CACTC,EAAiB9I,EAAS,EAAIzG,EAC9BuG,EAAY,WACZ,MAAO3H,GAAKmN,iBAAkB/L,WAAYuP,IAE9C,IAAI9I,EACA,KAAwB5G,EAAjB0P,EAA8BA,IACjCD,GAAU,OAAStF,GACf5O,KAAM6R,EAAMkC,GACZ5I,UAAWA,IACV,YAGT,KAASnK,EAAM,EAAS6Q,EAAMzQ,OAAZJ,EAAoBA,IAClCkT,GAAU,OAAStF,GACf5O,KAAM6R,EAAM7Q,GACZmK,UAAWA,IACV,OAGb,OAAO+I,GAAS,WAKpBzP,EADA4G,EACc5H,KAAK8H,qBAAqB9H,KAAKwQ,aAAa7S,OAAS,GAAKqC,KAAK8H,qBAAqB,GAEpF9H,KAAK8H,qBAAqB9H,KAAKwQ,aAAa7S,OAAS,IAI/EwR,GAAQ,UACJgB,EAAY,SAAU5T,EAAMuO,GAAhB,GAGRvN,GAAKI,EAKOgT,EAPZpO,EAAU,GACVqO,EAAW,CAGf,IADArO,EAAU,OAASuI,EAAY,wBAA0B,IAAM,IAC3DlD,EACA,IAAKrK,EAAM,EAAGI,EAASyK,EAAmBzK,EAANJ,EAAcA,IAAO,CACrD,IAAKqT,EAAW,EAAc5P,EAAX4P,EAAwBA,IACnCD,EAAYpT,EACZ8S,IACAM,EAAYL,GAEhB/N,EAAUxC,EAAK8Q,mBAAmBtO,EAAS6L,EAAO7R,EAAMoU,EAAWC,EAAUR,EAEjF,IAAIC,EACA,UAIR,MAAkBrP,EAAX4P,EAAwBA,IAC3B,IAAKrT,EAAM,EAAGI,EAASyK,EAAmBzK,EAANJ,EAAcA,IAC9CgF,EAAUxC,EAAK8Q,mBAAmBtO,EAAS6L,EAAO7R,EAAMgB,EAAKqT,EAAUR,EAKnF,OADA7N,IAAW,SAGN6N,EAAS,EAAY5H,EAAT4H,EAAmBA,IACpCjB,GAAQe,EAAyBA,EAAuBE,GAAU,GAClEjB,GAAQnP,KAAK2O,cAAc7Q,EAAOM,EAAK+R,GACnCE,GACAC,GAGRnB,IAAQ,WACRnP,KAAKuC,QAAQF,KAAK,SAASyO,OAAO3B,IAEtC0B,mBAAoB,SAAUtO,EAAS6L,EAAO7R,EAAMgB,EAAKqT,EAAUR,GAA/C,GAGZW,GAFAhR,EAAOC,KACPgR,EAAU,GAEV9F,EAAelL,KAAKkL,aACpBmF,EAAkD,aAA7BrQ,KAAK6H,oBAC1BH,EAAY,SAAUvG,GACtB,MAAO,YACH,MAAOpB,GAAKmN,iBAAkB/L,WAAYA,KAiBlD,OAdIhD,GAAM5B,KAAKiS,QAAQJ,EAAM7Q,MACzByT,GAAW,YAEX7S,EAAM5B,KAAKI,gBAAgBJ,GAAQ4B,EAAM5B,KAAKI,gBAAgBqD,KAAKzB,QAAQiN,eAAiBrN,EAAM5B,KAAKI,gBAAgBJ,IAAS4B,EAAM5B,KAAKI,gBAAgBqD,KAAKzB,QAAQkN,cAAgBzL,KAAKiR,WAAW7C,EAAM7Q,OAC9MyT,GAAW,mBAEfzO,GAAW,OAAqB,KAAZyO,EAAiB,WAAaA,EAAU,IAAM,IAAM,IACxED,EAAW5S,EAAM5B,KAAKsB,QAAQuQ,EAAM7Q,IACpCY,EAAM5B,KAAKG,QAAQqU,EAAU5S,EAAM5B,KAAKI,gBAAgBJ,IACxDgG,GAAW2I,GACP3O,KAAMwU,EACNrJ,UAAWA,EAAU2I,IAAuBtQ,EAAKkF,mBAAqBmL,EAASQ,KAEnFrO,GAAW,SAGf0O,WAAY,SAAU1U,GAAV,GAGC2U,GAFLC,EAAM5U,EAAK6U,SACX5S,EAAWwB,KAAKK,SACpB,KAAS6Q,EAAI,EAAO1S,EAASb,OAAbuT,EAAqBA,IACjC,GAAI1S,EAAS0S,KAAOC,EAChB,OAAO,CAGf,QAAO,GAEXE,QAAS,SAAUjD,GAAV,GAUDkD,GATAvR,EAAOC,IACXoO,GAAQA,MACRpO,KAAKuJ,OAAS6E,EACdpO,KAAKuR,WAAanD,EAAM,GACxBpO,KAAKwR,SAAWpD,EAAMA,EAAMzQ,OAAS,GAAK,GAC1CqC,KAAKyR,aAAazR,KAAKmO,QAAQC,IAC/BpO,KAAKiQ,SAAS7B,GACdpO,KAAKkP,UACLlP,KAAK0R,gBACDJ,EAAetR,KAAK3C,QAAQgF,KAAK,kCACjCiP,EAAa3T,SACbqC,KAAK2R,oBAAsBL,EAAarL,QAAQ,GAAGZ,cAEvDtF,EAAK1C,QAAQkP,GAAG,QAAUjN,EAAI,aAAc,SAAUkN,GAAV,GAapC/H,GAZAmN,EAAKxV,EAAEoQ,EAAEqF,eAAenF,QAAQ,MAChCzK,EAAS2P,EAAG3P,SACZ6P,EAAkB,EAClBC,EAAmBH,EAAGtO,aACtBvD,GAAKkF,qBACDlF,EAAKoH,wBACL2K,EAAkB/R,EAAKqC,MAAMoB,aAC7BuO,EAAmB,GAEnBA,EAAmBhS,EAAKiS,YAAY1O,eAGxCmB,EAAO1E,EAAKiH,gBAAgB/E,EAAOoB,KAAOyO,EAAiB7P,EAAOgB,IAAM8O,GAC5EhS,EAAK0M,QAAQ,YACTvC,KAAM,MACN3N,KAAMkI,EAAK7G,iBAIvBwG,UAAW,WACP,GAAI7F,GAAUyB,KAAKzB,OACnB,OAAOA,GAAQoM,cAAgBpM,EAAQiN,aAAejN,EAAQ6F,WAElEC,QAAS,WACL,GAAI9F,GAAUyB,KAAKzB,OACnB,OAAOA,GAAQoM,cAAgBpM,EAAQkN,WAAalN,EAAQ8F,SAEhEzG,UAAW,WACP,MAAOoC,MAAKuR,YAEhBnE,QAAS,WACL,MAAOpN,MAAKwR,UAEhBS,KAAM,SAAU3U,GACZ,GAAI+K,GAAO1L,EAAgBqD,KAAKqE,YAAcnF,CAI9C,OAHI5B,KACA+K,EAAO,GAEJ,GAAI5L,MAAKuD,KAAKwR,SAASzT,UAAYsK,IAE9C6J,SAAU,WACN,MAAO/T,GAAM5B,KAAK4V,QAAQnS,KAAKoN,YAEnCgF,aAAc,WACV,MAAOjU,GAAM5B,KAAK8V,YAAYrS,KAAKpC,cAEvC4C,mBAAoB,WAChBR,KAAKqR,SAASrR,KAAKzB,QAAQhC,QAE/B+V,QAAS,WACL,GAAIvS,GAAOC,IACPD,GAAKiE,yBACLuO,cAAcxS,EAAKiE,yBAEnBjE,EAAKiS,aACLjS,EAAKiS,YAAYQ,IAAIlT,GAErBS,EAAK1C,SACL0C,EAAK1C,QAAQmV,IAAIlT,GAEjBS,EAAK2L,QACL3L,EAAK2L,OAAOpJ,SAEhBxD,EAAcmB,GAAGqS,QAAQpS,KAAKF,MAC1BA,KAAKoM,aAAerM,EAAKxB,QAAQgN,WAC7BxL,EAAKxB,QAAQgN,SAASqB,UAAW,IACjC7M,EAAK2N,eAAe4E,UACpBvS,EAAKiO,kBAAkBsE,WAEvBvS,EAAKxB,QAAQgN,SAAS8B,UAAW,GACjCtN,EAAKkO,gBAAgBqE,YAIjCG,QAAS,SAAUlU,GAAV,GAKD6F,GACAC,EACAvG,EACAM,EAPAqU,EAAU3T,EAAcmB,GAAGwS,QAAQvS,KAAKF,KAAMzB,EAClD,OAAIA,GAAQjB,SACDmV,GAEPrO,EAAYzH,EAAgBqD,KAAKoE,aACjCC,EAAU1H,EAAgBqD,KAAKqE,YAAclG,EAAM5B,KAAK2C,WACxDpB,EAAQnB,EAAgB4B,EAAQT,OAChCM,EAAMzB,EAAgB4B,EAAQH,MAAQD,EAAM5B,KAAK2C,WAC9CuT,GAAwB3U,GAAbsG,GAA6BC,GAAPjG,IAE5CsU,mBAAoB,SAAUtJ,GAC1B,GAAInH,GAASmH,EAAKnH,QAClB,OAAOjC,MAAKgH,gBAAgB/E,EAAOoB,KAAMpB,EAAOgB,MAEpD6F,kBAAmB,WACf,GAAIvK,GAAUyB,KAAKzB,OACnB,OAAOA,GAAQuM,UAAYvM,EAAQsM,eAAiB5L,GAExD0T,eAAgB,SAAUpW,GAAV,GACRgC,GAAUyB,KAAKzB,QACfqU,EAAiBjW,EAAgBJ,GACjC6H,EAAYzH,EAAgBqD,KAAKoE,aACjCyO,EAAmBtU,EAAQuM,UAAYvM,EAAQsM,eAAiB5L,CACpE,QAAQ2T,EAAiBxO,GAAayO,GAE1CC,WAAY,SAAUvW,EAAMsI,GACxB,MAAIA,GACO7E,KAAK+S,eAAexW,GAExByD,KAAK2S,eAAepW,IAE/BwW,eAAgB,SAAUxW,EAAMU,GAAhB,GACRM,GACAI,EAEAqV,EACAC,EAFAC,EAAQlT,KAAKuJ,WAGbtH,EAAS,CACb,KAAK1E,EAAM,EAAGI,EAASuV,EAAMvV,OAAcA,EAANJ,EAAcA,IAG/C,GAFAyV,EAAY7U,EAAM5B,KAAKsB,QAAQqV,EAAM3V,IACrC0V,EAAU,GAAIxW,MAAK0B,EAAM5B,KAAKsB,QAAQqV,EAAM3V,IAAMQ,UAAYmB,GAAcjC,EAAW,EAAI,IACvFL,EAAcL,EAAMyW,EAAWC,GAC/B,MAAO1V,GAAM0E,CAGrB,OAAO,IAEXkR,qBAAsB,SAAU9V,EAAS+V,GAAnB,GA0Bd7E,GAIAtL,EACK1F,EAASI,EACV0V,EACKC,EAAOC,EAhChBC,EAAYJ,EAAUzN,aACtB8N,EAAaL,EAAUtV,MAAMoH,MAC7BwO,EAAWN,EAAUhV,IAAI8G,MACzByO,EAAe7U,EAAc8U,gBAAgBR,EAAU5V,SAAUiW,EAAYC,GAC7EG,EAAqB7T,KAAK8T,oBAAsB,EAChDC,EAAa,EACbC,EAAcP,IAAeC,EAAW,EAAI,EAC5CO,EAAcjU,KAAK2R,oBACnB7T,EAAQsV,EAAUpO,WAsBtB,KArBA3H,EAAQoG,KACJJ,KAAMvF,EAAM0H,WAAauO,EACzBpQ,MAAO6P,EAAYQ,IAEvBZ,EAAUc,UACNC,UAAWV,EACX3V,MAAO2V,EACPrV,IAAKsV,EACLrW,QAASA,IAEbsW,EAAatV,MACT8V,UAAWV,EACX3V,MAAO2V,EACPrV,IAAKsV,EACLrW,QAASA,IAETkR,EAAOzP,EAAcsV,WAAWT,GAChCpF,EAAK5Q,QAAU4Q,EAAK5Q,OAASkW,IAC7B7T,KAAK8T,mBAAqBvF,EAAK5Q,QAE/BsF,EAAMmQ,EAAUtV,MAAMwH,UACjB/H,EAAM,EAAGI,EAAS4Q,EAAK5Q,OAAcA,EAANJ,EAAcA,IAElD,IADI8V,EAAY9E,EAAKhR,GAAKC,OACjB8V,EAAI,EAAGC,EAAcF,EAAU1V,OAAY4V,EAAJD,EAAiBA,IAC7DlX,EAAEiX,EAAUC,GAAGjW,SAASoG,KAAMR,IAAKA,EAAM1F,EAAM0W,KAI3DI,gBAAiB,SAAUhX,EAAS4F,EAAKS,EAAQ0P,GAAhC,GAQT9E,GAASkF,EAAmCc,EAAoCC,EAAcC,EAAoCC,EAIlIC,EACKnX,EAASI,EAEL2V,EAAOC,EAdhBvO,EAAYoO,EAAUtV,KAY1B,KAXAT,GACIA,QAASA,EACT8W,UAAWnP,EAAUE,MACrBpH,MAAOmF,EACP7E,IAAK6E,EAAMS,GAEF8P,EAAYxO,EAAU0B,YAAa4N,EAA+B,GAAZd,EAA+BgB,EAAgBpB,EAAU5V,SAAUiX,EAAa3V,EAAc8U,gBAAgBY,EAAenX,EAAQS,MAAOT,EAAQe,KACvNgV,EAAUc,SAAS7W,GACnBoX,EAAWpW,KAAKhB,GAChBiR,EAAUxP,EAAc6V,cAAcF,GAClCC,GAAelB,EAAYc,GAAoBhG,EAAQ3Q,OAClDJ,EAAM,EAAGI,EAAS2Q,EAAQ3Q,OAAcA,EAANJ,EAAcA,IAErD,IADAgX,EAAejG,EAAQ/Q,GAAKC,OACnB8V,EAAI,EAAGC,EAAcgB,EAAa5W,OAAY4V,EAAJD,EAAiBA,IAChEiB,EAAajB,GAAGjW,QAAQ,GAAGuX,MAAMjR,MAAQ+Q,EAAc,EAAI,KAC3DH,EAAajB,GAAGjW,QAAQ,GAAGuX,MAAMvR,MAAQrD,KAAKkD,OAASoR,EAAmB,GAAKtP,EAAUQ,WAAajI,EAAMmX,EAAc,EAAI,MAI1IG,eAAgB,SAAU1Q,EAAO9G,EAAS+V,GAA1B,GACRtV,GAAQqG,EAAM2Q,YAAc3Q,EAAMrG,MAClCM,EAAM+F,EAAM4Q,UAAY5Q,EAAM/F,IAC9BsG,EAAO0O,EAAUpQ,UAAUlF,EAAOM,GAAK,GACvCsF,EAASgB,EAAKoB,OAASpB,EAAKzB,IAAM,CACzB,GAATS,IACAA,EAAS,GAEbrG,EAAQoG,KACJR,IAAKyB,EAAKzB,IACVS,OAAQA,IAEZ1D,KAAKqU,gBAAgBhX,EAASqH,EAAKzB,IAAK5F,EAAQ,GAAGgI,aAAc+N,IAErExM,oBAAqB,SAAUzC,EAAO6Q,EAAeC,EAAMC,GAAtC,GAabC,GAOAC,EACAC,EAWA3N,EASA4N,EAcAjY,EAtDAmC,EAAWwV,EAAgBhV,KAAKoL,cAAgBpL,KAAKqL,oBACrD9M,EAAUyB,KAAKzB,QACfgN,EAAWhN,EAAQgN,SACnBgK,EAAWvV,KAAKoM,YAChBoJ,EAAajK,GAAYA,EAAS+G,WAAY,IAAUiD,EACxDE,EAAYlK,GAAYA,EAASmK,UAAW,EAC5C9X,EAAYC,EAAQmC,KAAKpC,aACzBwP,EAAUvP,EAAQmC,KAAKoN,WACvBhJ,EAAYzH,EAAgBqD,KAAKoE,aACjCC,EAAU1H,EAAgBqD,KAAKqE,WAC/BuO,EAAiBzO,EAAMwR,MAAM,SAC7BC,EAAezR,EAAMwR,MAAM,MAkD/B,OAhDIvR,IAAaC,IACbA,EAAU1H,EAAgB,GAAIF,MAAKuD,KAAKqE,UAAUtG,UAAYmB,EAAa,KAE1E8V,GAAkB7Q,EAAM7G,WACzB8P,EAAU,GAAI3Q,MAAK2Q,EAAQrP,UAAYmB,IAEvCkW,EAAiBjR,EAAMrG,MACvBuX,EAAelR,EAAM/F,IACrB+F,EAAM7G,WACN+X,EAAexX,EAAQsG,EAAM/F,OAE5BxB,EAAciB,EAAQuX,GAAiBxX,EAAWwP,KAAaxQ,EAAcyY,EAAczX,EAAWwP,IAAY4H,GAAkC5Q,EAAjBwO,GAA8BgD,EAAevR,EACjL8Q,GAAS,EACFtX,EAAQuX,GAAkBxX,GAAaoX,GAAkC5Q,EAAjBwO,EAC/DsC,GAAO,GACAG,EAAejI,IAAY4H,GAAiBA,GAAiBY,EAAevR,KACnF4Q,GAAO,GAEPvN,EAAY1H,KAAK6V,eAAe1R,GAChCA,EAAM2Q,YAAclC,IAAmBzU,EAAM5B,KAAKI,gBAAgBwH,EAAMrG,SACxEsX,EAAiB,GAAI3Y,MAAKmW,GAC1BwC,EAAiBjX,EAAM2C,SAASgV,MAAMV,EAAgB,YAEtDjR,EAAM4Q,UAAYa,IAAiBzX,EAAM5B,KAAKI,gBAAgBwH,EAAM/F,OACpEiX,EAAe,GAAI5Y,MAAKmZ,GACxBP,EAAelX,EAAM2C,SAASgV,MAAMT,EAAc,YAElDC,EAAOvW,MACPgX,GAAI5X,EAAM4X,GACVN,UAAWA,EACXD,WAAYA,EACZL,OAAQA,EACRF,KAAMA,EACNC,KAAMA,EACNc,UAAiC,GAAtBhW,KAAKuJ,OAAO5L,OACvB+J,UAAWA,EACXuO,aAAcvO,GAAaA,EAAU,GAAK1H,KAAKkW,4BAA4BxO,EAAU,KAAM,GAC5FvD,GACCrG,MAAOsX,EACPhX,IAAKiX,IAELhY,EAAUjB,EAAEoD,EAAS8V,IACzBtV,KAAKmW,QAAQ,UAAW,WACpB,OACIC,SAAU/Y,EACViY,OAASe,SAAUf,OAGpBjY,GAEXiZ,cAAe,SAAUnS,GAAV,GAgBPlH,GAfAsZ,EAAgBvW,KAAKoE,YAAaoS,EAAcxW,KAAKqE,UAAWD,EAAYD,EAAM2Q,YAAc3Q,EAAMrG,MAAOuG,EAAUF,EAAM4Q,UAAY5Q,EAAM/F,GAYnJ,OAXIzB,GAAgB6Z,KAAiB7Z,EAAgBwB,EAAM5B,KAAKsB,QAAQ2Y,MACpEA,EAAcrY,EAAM5B,KAAKsB,QAAQ2Y,GACjC9Z,EAAQ8Z,EAAatX,EAAa,IAElCiF,EAAMsS,MAAM,OAAStS,EAAMsS,MAAM,WACjCpS,GAAWF,EAAMsS,MAAM,QAAUvX,EAAa,IAElDmF,GAAoBF,EAAMsS,MAAM,OAChCrS,GAAwBD,EAAMsS,MAAM,SACpCD,EAAc7Z,EAAgB6Z,GAC9BD,EAAgB5Z,EAAgB4Z,GAC5BA,IAAkBnS,GAAaA,IAAcC,GACtC,GAEPpH,EAAWmH,IAAcoS,EACtBxZ,EAAcoH,EAAWmS,EAAeC,EAAavZ,IAAaD,EAAcqH,EAASkS,EAAeC,EAAavZ,IAAaD,EAAcuZ,EAAenS,EAAWC,IAAYrH,EAAcwZ,EAAapS,EAAWC,KAEvOqS,cAAe,SAAUvS,GAAV,GACP1B,GAASzC,KAAKyC,OAAO,GACrBuQ,EAAYvQ,EAAOkU,YAAY7Y,MAC/BmV,EAAUxQ,EAAOmU,WAAWxY,IAAM,EAClCgG,EAAYjG,EAAM5B,KAAKmG,UAAUyB,EAAMrG,OACvCuG,EAAUlG,EAAM5B,KAAKmG,UAAUyB,EAAM/F,IACzC,QAAQxB,EAAcwH,EAAW4O,EAAWC,IAAYrW,EAAcyH,EAAS2O,EAAWC,IAAYrW,EAAcoW,EAAW5O,EAAWC,IAAYzH,EAAcqW,EAAS7O,EAAWC,OAAezH,EAAcyH,EAAS2O,EAAWA,IAAcpW,EAAcyH,EAASD,EAAWA,IAAcD,EAAM7G,WAEjTuZ,0BAA2B,SAAUnT,GAAV,GAGfoT,GAGS3V,CALjB,IAAInB,KAAK+W,UAAYrT,IACjB1D,KAAK+W,QAAUrT,EACXoT,EAAc9W,KAAK3C,QAAQgF,KAAK,kCAChCyU,EAAYnZ,QAEZ,IADAmZ,EAAYhK,SAASpH,IAAI1F,KAAK3C,QAAQgF,KAAK,8BAA8ByK,UAAUpJ,OAAOA,GACjFvC,EAAa,EAAgBnB,KAAKyC,OAAO9E,OAAzBwD,EAAiCA,IACtDnB,KAAKyC,OAAOtB,GAAY6V,WAKxCC,cAAe,SAAUzZ,EAAQ2D,GAAlB,GAGPgD,GACA5G,EACAI,EAIQuZ,EACAtS,EACAvH,EAASiE,EAAQlE,EAAOU,EAAOM,EAAKjB,EAQ5Bga,EACK5S,EAcD6S,EAOInC,EAgBRxB,EACAC,EAII2D,EACAC,EACKpG,EAEDqG,EAjExBC,EAAuBxX,KAAKgS,YAAY3P,KAAK,kCAC7CuF,EAAS5H,KAAKiF,kBAIlB,KAAK1H,EAAM,EAAGI,EAASH,EAAOG,OAAcA,EAANJ,EAAcA,IAEhD,GADA4G,EAAQ3G,EAAOD,GACXyC,KAAK0W,cAAcvS,GAInB,GAHI+S,EAAkB/S,EAAM7G,UAAY6G,EAAM/F,IAAIL,UAAYoG,EAAMrG,MAAMC,WAAamB,EACnF0F,EAAYsS,IAAoBlX,KAAKmH,uBAAyBqQ,EAAuBxX,KAAKuC,QAEzF2U,GAqCE,GAAIlX,KAAKzB,QAAQgM,aACpBpN,EAAQ6C,KAAKyC,OAAOtB,GACfhE,EAAMM,oBACPN,EAAMM,sBAEV6D,EAASnE,EAAMsa,WAAWtT,GACtB7C,EAAO3D,QAIP,GAHAP,EAAQkE,EAAO,GACXmS,EAAarW,EAAMU,MAAMoH,MACzBwO,EAAWtW,EAAMgB,IAAI8G,MACrB0C,GAAU6L,IAAeC,EAKzB,IAJA5V,EAAQV,EAAMU,MAAMA,MACpBM,EAAMhB,EAAMgB,IAAIA,IACZiZ,EAAW,GAAI5a,MAAKqB,GACpBwZ,EAAS,GAAI7a,MAAKqB,GACboT,EAAI9T,EAAMU,MAAMoH,MAAY9H,EAAMgB,IAAI8G,OAAfgM,EAAsBA,IAClD7T,EAAU2C,KAAK4G,oBAAoBzC,GAAQ+S,EAAiBhG,IAAMwC,EAAUxC,IAAMuC,GAC9E8D,EAAYpa,EAAMua,cAAcL,EAAUC,GAAQ,GAAM,GAC5DA,EAAOK,QAAQL,EAAOzZ,UAAY,GAClCwZ,EAASM,QAAQN,EAASxZ,UAAY,GACtCmC,KAAKmT,qBAAqB9V,EAASka,GACnCra,EAAmBC,EAAOoa,EAAWla,GAAS,GAC9CA,EAAQ0I,SAASnB,OAGrBvH,GAAU2C,KAAK4G,oBAAoBzC,GAAQ+S,GAC3ClX,KAAKmT,qBAAqB9V,EAASiE,EAAO,IAC1CpE,EAAmBC,EAAOmE,EAAO,GAAIjE,GAAS,GAC9CA,EAAQ0I,SAASnB,OAhEzB,IAAI5E,KAAKsW,cAAcnS,GAOnB,IANAhH,EAAQ6C,KAAKyC,OAAOtB,GACfhE,EAAMM,oBACPN,EAAMM,sBAEV6D,EAASnE,EAAMsa,WAAWtT,GACtBgT,EAAa7V,EAAO3D,OACf4G,EAAa,EAAgB4S,EAAb5S,EAAyBA,IAC9CnH,EAAQkE,EAAOiD,GACfzG,EAAQqG,EAAMrG,MACdM,EAAM+F,EAAM/F,IACR+Y,EAAa,IACM,IAAf5S,EACAnG,EAAMhB,EAAMgB,IAAIgP,UACT7I,GAAc4S,EAAa,EAClCrZ,EAAQV,EAAMU,MAAMF,aAEpBE,EAAQV,EAAMU,MAAMF,YACpBQ,EAAMhB,EAAMgB,IAAIgP,YAGpBgK,EAAajT,EAAM0C,OACnB/I,MAAOA,EACPM,IAAKA,EACL0W,WAAY3Q,EAAM2Q,WAClBC,SAAU5Q,EAAME,UAEhBrE,KAAKsW,cAAcc,KACfnC,EAAO7X,EAAM6X,KACjB5X,EAAU2C,KAAK4G,oBAAoBzC,GAAQ+S,EAAiBjC,EAAM7X,EAAM8X,MACxE7X,EAAQ0I,SAASnB,GACjB5E,KAAK6U,eAAeuC,EAAY/Z,EAASD,GACzCF,EAAmBC,EAAOC,EAAOC,GAAS,KAuCtEua,OAAQ,SAAUpa,GAAV,GAcAqa,GAEAC,EAOApU,EAEKvC,CAAT,KAxBAnB,KAAK8T,mBAAqB,EAC1B9T,KAAKS,UACLT,KAAK3C,QAAQgF,KAAK,YAAYC,SAC9B9E,EAAS,GAAIW,GAAMmX,KAAKyC,MAAMva,GAAQwa,OAE9BC,MAAO,QACPC,IAAK,QAGLD,MAAO,MACPC,IAAK,UAEVC,UACCN,KACJ7X,KAAKoY,kBAAkB5a,EAAQwC,KAAK2H,iBAAkBkQ,GAClDC,EAAgB1b,EAAEic,IAAIrY,KAAKuJ,OAAQ,SAAUhN,GAC7C,MAAOuG,MAAK/F,IAAI+Y,MAAM,KAAM1Z,EAAEic,IAAIR,EAAkB,SAAUra,GAC1D,MAAOpB,GAAEkc,KAAK9a,EAAQ,SAAU2G,GAC5B,MAAOA,GAAMW,cAAgBlI,EAAcL,EAAMsB,EAAQsG,EAAMrG,OAAQD,EAAQsG,EAAM/F,QACtFT,YAGP+F,EAASZ,KAAK/F,IAAI+Y,MAAM,KAAMgC,GAClC9X,KAAK6W,2BAA2BnT,EAAS,GAAK1D,KAAK2R,qBAC1CxQ,EAAa,EAAgB0W,EAAiBla,OAA9BwD,EAAsCA,IAC3DnB,KAAKiX,cAAcY,EAAiB1W,GAAaA,EAErDnB,MAAK0R,gBACL1R,KAAKU,cAAa,GAClBV,KAAKyM,QAAQ,aAEjB2L,kBAAmB,SAAU5a,EAAQkK,EAAW+I,GAA7B,GAGPvG,GACKqO,EACD1b,EACA2b,EALRC,EAAW/Q,EAAU,EACzB,IAAI+Q,EAEA,IADIvO,EAAOuO,EAAS1W,WAAWmI,OACtBqO,EAAU,EAAarO,EAAKvM,OAAf4a,EAAuBA,IACrC1b,EAAQmD,KAAK0Y,eAAeD,EAAUvO,EAAKqO,IAC3CC,EAA2B,GAAIra,GAAMmX,KAAKyC,MAAMva,GAAQoQ,QACxDqK,MAAOQ,EAASR,MAChBU,SAAU7Z,EAAc8Z,cAAc/b,KACvCsb,UACCzQ,EAAU/J,OAAS,EACnBqC,KAAKoY,kBAAkBI,EAA0B9Q,EAAUmR,MAAM,GAAIpI,GAErEA,EAAOpS,KAAKma,OAIpB/H,GAAOpS,KAAKb,IAGpBwK,yBAA0B,SAAU9C,GAChC,MAAOlF,MAAK8H,qBAAqB5C,GAASlF,KAAK8H,qBAAqB5C,EAAQ,IAEhF4C,qBAAsB,SAAUgR,GAC5B,GAAIC,GAAc/Y,KAAKwQ,aAAasI,EACpC,OAAOC,GAAcA,EAAYpb,OAAS,GAE9CoK,kBAAmB,SAAU+Q,GACzB,GAAIE,GAAWhZ,KAAKuQ,UAAUuI,EAC9B,OAAOE,GAAWA,EAASrb,OAAS,GAExCsb,eAAgB,WACZjZ,KAAKuC,QAAQmD,IAAI1F,KAAKgS,aAAa3P,KAAK,qBAAqB6W,WAAW,MAAMhb,KAAK,iBAAiB,GAAOib,YAAY,qBAE3HC,iBAAkB,SAAUC,EAAW/X,EAAQgY,EAAUC,EAASC,GAAhD,GACVC,GAAYJ,EAAU/b,SACtB0H,EAAY1D,EAAO,GAAGxD,MACtB4b,EAAUpY,EAAOA,EAAO3D,OAAS,GAAGS,GACpCkb,KACIE,EACKC,GAAazU,EAAUE,QAAUwU,EAAQxU,OAASF,EAAU2U,kBAAoBD,EAAQC,kBACzFN,EAAUO,SAAWL,IAGrBE,GAAazU,EAAUE,QAAUwU,EAAQxU,QAAUuU,GAAazU,EAAU2U,kBAAoBD,EAAQC,mBACtGN,EAAUO,SAAWL,KAKrCM,kBAAmB,SAAUR,EAAWE,EAASC,GAA9B,GAEPjd,GACAuB,EACAM,EACA0b,EACA3c,EACAoE,EACA2R,EACAiB,EACA4F,EAII1C,EACAC,CAdZ,OAAKkC,GAAL,GACQjd,EAAOgd,EAAUvZ,KAAKoS,eAAiBpS,KAAKkS,WAC5CpU,EAAQub,EAAUvb,MAClBM,EAAMib,EAAUjb,IAChB0b,EAAiB9Z,KAAKiF,oBAAsBjF,KAAKmH,uBACjDhK,EAAQ6C,KAAKyC,OAAO4W,EAAUlY,YAC9BI,EAAagY,EAAUpc,EAAM6c,qBAAuB7c,EAAM8c,gBAAgB9c,EAAM+c,0BAChFhH,EAAQ3R,EAAWA,EAAW5D,OAAS,GAAGwH,OAC1CgP,EAAaoF,GAAYpc,EAAM+c,yBAA+BhH,EAAMvV,OAAS,EAAnB,EAE9D0b,EAAUvb,MAAQ,GAAIrB,MAAKF,GAC3B8c,EAAUjb,IAAM,GAAI3B,MAAKF,GACrBud,GACIzC,EAAW,GAAI5a,MAAKyW,EAAMiB,GAAWvW,aACrC0Z,EAAS,GAAI7a,MAAKyW,EAAMiB,GAAW/G,WACvC2M,EAAkBpd,EAAgB2a,GAAU3a,EAAgB2a,GAAUpY,EACtExC,EAAQ2c,EAAUvb,MAAOnB,EAAgB0a,IACzC3a,EAAQ2c,EAAUjb,IAAK2b,GACnB5c,EAAM+c,2BACNb,EAAU/b,UAAY+b,EAAU/b,YAGpCyc,EAAkBV,EAAU/b,WAAaX,EAAgByB,GAAOc,EAAavC,EAAgByB,GAC7F1B,EAAQ2c,EAAUvb,MAAOnB,EAAgBmB,IACzCpB,EAAQ2c,EAAUjb,IAAK2b,IAEtB/Z,KAAKmH,yBACNkS,EAAUlY,WAAaoY,EAAUvZ,KAAKyC,OAAO9E,OAAS,EAAI,GAE9D0b,EAAU7b,WACH,KAInBuB,IAAO,EAAMF,GACTgB,aAAcA,EACdsa,QAASta,EAAad,QAClBR,SACI6B,KAAM,UACND,MAAO,OAEXC,KAAM,QAEVga,SAAUva,EAAad,QACnBR,SACI6B,KAAM,WACND,MAAO,OACPsK,mBAAoB,gBACpBC,wBAAyB,iBAE7BtK,KAAM,OACNI,mBAAoB,WAChB,GAAoHjD,GAAKI,EAArH0c,EAAera,KAAKzB,QAAQhC,KAAMuB,EAAQK,EAAM5B,KAAK+d,UAAUD,EAAcra,KAAKua,eAAeC,SAAU,IAAkBpM,IACjI,KAAK7Q,EAAM,EAAGI,EAAS,EAASA,EAANJ,EAAcA,IACpC6Q,EAAM/P,KAAKP,GACXA,EAAQK,EAAM5B,KAAK4V,QAAQrU,EAE/BkC,MAAKqR,QAAQjD,MAGrBqM,aAAc5a,EAAad,QACvBR,SACI6B,KAAM,eACND,MAAO,YACPsK,mBAAoB,gBACpBC,wBAAyB,iBAE7BtK,KAAM,WACN8R,SAAU,WACN,GAAIwI,GAAYvc,EAAM5B,KAAK+d,UAAUnc,EAAM5B,KAAK4V,QAAQnS,KAAKpC,aAAcoC,KAAKua,eAAeC,SAAU,EACzG,OAAOrc,GAAM5B,KAAK+N,QAAQoQ,EAAW1a,KAAKK,UAAU,KAExD+R,aAAc,WAAA,GACNsI,GAAYvc,EAAM5B,KAAK+d,UAAUta,KAAKpC,YAAaoC,KAAKua,eAAeC,SAAU,IACjFhc,EAAWwB,KAAKK,SACpB,OAAOlC,GAAM5B,KAAK+N,QAAQoQ,EAAWlc,EAASA,EAASb,OAAS,GAAK,IAEzE6C,mBAAoB,WAEhB,IADA,GAAI6Z,GAAera,KAAKzB,QAAQhC,KAAM+d,EAAYnc,EAAM5B,KAAK+d,UAAWI,EAAYJ,EAAUD,EAAcra,KAAKua,eAAeC,SAAU,IAAK1c,EAAQwc,EAAUI,EAAW1a,KAAKzB,QAAQG,cAAe,GAAIN,EAAMkc,EAAUxc,EAAOkC,KAAKzB,QAAQI,YAAa,GAAIyP,KACjPhQ,GAATN,GACHsQ,EAAM/P,KAAKP,GACXA,EAAQK,EAAM5B,KAAK4V,QAAQrU,EAE/BkC,MAAKqR,QAAQjD,SAI3BxP,OAAOT,MAAMwc,QACR/b,OAAOT,OACE,kBAAVhC,SAAwBA,OAAOye,IAAMze,OAAS,SAAU0e,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.scheduler.dayview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.dayview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.dayview',\n        name: 'Scheduler Day View',\n        category: 'web',\n        description: 'The Scheduler Day View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, MS_PER_DAY = kendo.date.MS_PER_DAY, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', BORDER_SIZE_COEFF = 0.8666, getMilliseconds = kendo.date.getMilliseconds, NS = '.kendoMultiDayView';\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.toString(date, \\'ddd M/dd\\')#</span>'), ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-w\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-e\"></span>' + '#}#' + '</span>' + '#if(resizable && !singleDay && !data.tail && !data.middle){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !singleDay && !data.head && !data.middle){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>', EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\" ' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '</span>' + '<span class=\"k-event-top-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-n\"></span>' + '# } #' + '</span>' + '<span class=\"k-event-bottom-actions\">' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-s\"></span>' + '# } #' + '</span>' + '# if(resizable && !data.tail && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-n\"></span>' + '# } #' + '# if(resizable && !data.head && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-s\"></span>' + '# } #' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n            if (isAllDay && lastEvent && getDate(lastEvent.start.startDate()).getTime() == startDate) {\n                var idx = events.length - 1;\n                for (; idx > -1; idx--) {\n                    if (events[idx].isAllDay || getDate(events[idx].start.startDate()).getTime() < startDate) {\n                        break;\n                    }\n                }\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart;\n            workDays.push(dayIndex);\n            while (options.workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        var MultiDayView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options;\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                this.times.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                var groupsCount = !options.group || options.group.orientation == 'horizontal' ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find('tr:first th:first');\n                var lastTimesCell = this.times.find('tr:first th:last');\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                        var timesTableMarker = $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                        var timesTableMarkerCss = {};\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = firstTimesCell.position().left + firstTimesCell.outerHeight() - lastTimesCell.outerHeight();\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-left');\n                        } else {\n                            timesTableMarkerCss.left = lastTimesCell.position().left;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-right');\n                        }\n                        timesTableMarkerCss.top = markerTopPosition - timesTableMarker.outerWidth() * BORDER_SIZE_COEFF / 2;\n                        timesTableMarker.css(timesTableMarkerCss);\n                        $(elementHtml).prependTo(this.content).css({\n                            top: markerTopPosition,\n                            height: '1px',\n                            right: '1px',\n                            width: this.content[0].scrollWidth,\n                            left: 0\n                        });\n                    }\n                }\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n                            hint = SchedulerView.fn._createResizeHint.call(this, slot.offsetLeft, top, width, height);\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n                        hint = SchedulerView.fn._createResizeHint.call(this, start.offsetLeft, top, width, height);\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n                var format = 't';\n                var container = this.content;\n                if (multiday) {\n                    format = 'M/dd';\n                    container = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var start = kendo.date.toUtcTime(event.start) + distance;\n                var end = start + event.duration();\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n                start = kendo.timezone.toLocalDate(start);\n                end = kendo.timezone.toLocalDate(end);\n                this._removeMoveHint();\n                if (!multiday && (getMilliseconds(end) === 0 || getMilliseconds(end) < getMilliseconds(this.startTime()))) {\n                    if (ranges.length > 1) {\n                        ranges.pop();\n                    }\n                }\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 4;\n                            hint = this._createEventElement(event.clone({\n                                start: start,\n                                end: end\n                            }), !multiday);\n                            this._appendMoveHint(hint, css);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                            css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n                        if (multiday) {\n                            css.width = range.innerWidth() - 4;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 4;\n                        }\n                        hint = this._createEventElement(event.clone({\n                            start: start,\n                            end: end\n                        }), !multiday);\n                        this._appendMoveHint(hint, css);\n                    }\n                }\n                var content = this.content;\n                if (multiday) {\n                    content = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n                this._moveHint.appendTo(content);\n            },\n            _appendMoveHint: function (hint, css) {\n                hint.addClass('k-event-drag-hint');\n                hint.css(css);\n                this._moveHint = this._moveHint.add(hint);\n            },\n            _slotByPosition: function (x, y) {\n                var slot, offset;\n                if (this._isVerticallyGrouped()) {\n                    offset = this.content.offset();\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                } else {\n                    offset = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day)').find('>div').offset();\n                }\n                if (offset) {\n                    x -= offset.left;\n                    y -= offset.top;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                var group;\n                var groupIndex;\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                if (offset) {\n                    x += offset.left;\n                    y += offset.top;\n                }\n                offset = this.content.offset();\n                x -= offset.left;\n                y -= offset.top;\n                if (!this._isVerticallyGrouped()) {\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                            return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n            _columnCountInResourceView: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        return this._rowCountForLevel(0);\n                    } else {\n                        return this._columnCountForLevel(0);\n                    }\n                }\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n            _timeSlotGroups: function (groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find('tr:not(.k-scheduler-header-all-day)');\n                var group, time, rowIndex, cellIndex;\n                tableRows.attr('role', 'row');\n                var rowCount = tableRows.length;\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n                    rowIndex = rowMultiplier * rowCount;\n                    while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                        time += interval;\n                        rowIndex++;\n                    }\n                }\n            },\n            _addTimeSlotGroup: function (group, cells, cellIndex, time, interval, timeIndex) {\n                var cell = cells[cellIndex];\n                var collection = group.getTimeSlotCollection(timeIndex);\n                var currentDate = this._dates[timeIndex];\n                var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                var start = currentTime + time;\n                var end = start + interval;\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addTimeSlot(cell, start, end);\n            },\n            _addDaySlotGroup: function (collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n            _daySlotGroups: function (groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find('.k-scheduler-header-all-day');\n                } else {\n                    tableRows = this.element.find('.k-scheduler-header-all-day tr');\n                }\n                tableRows.attr('role', 'row');\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n            options: {\n                name: 'MultiDayView',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                allDaySlot: true,\n                showWorkHours: false,\n                title: '',\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                minorTimeHeaderTemplate: '&nbsp;',\n                groupHeaderTemplate: '#=text#',\n                slotTemplate: '&nbsp;',\n                allDaySlotTemplate: '&nbsp;',\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: { command: 'workDay' },\n                messages: {\n                    allDay: 'all day',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-si-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        if (!$(this).parent().hasClass('k-scheduler-header-all-day')) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    }).on('dblclick' + NS, '.k-scheduler-header-all-day td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({}, {\n                                    isAllDay: true,\n                                    start: kendo.date.getDate(slot.startDate()),\n                                    end: kendo.date.getDate(slot.startDate())\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            if (!$(e.target).parent().hasClass('k-scheduler-header-all-day')) {\n                                var x = e.x.location !== undefined ? e.x.location : e.x;\n                                var y = e.y.location !== undefined ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger('add', {\n                                        eventInfo: extend({\n                                            start: slot.startDate(),\n                                            end: slot.endDate()\n                                        }, resourceInfo)\n                                    });\n                                }\n                                e.preventDefault();\n                            }\n                        }\n                    });\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-header-all-day td',\n                        tap: function (e) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({}, {\n                                        isAllDay: true,\n                                        start: kendo.date.getDate(slot.startDate()),\n                                        end: kendo.date.getDate(slot.startDate())\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _layout: function (dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n                    column.text = that.dateHeaderTemplate({ date: dates[idx] });\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = 'k-today';\n                    }\n                    columns.push(column);\n                }\n                var resources = this.groupedResources;\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay,\n                        allDay: true,\n                        cellContent: function (idx) {\n                            var groupIndex = idx;\n                            idx = resources.length && that._groupOrientation() !== 'vertical' ? idx % dates.length : idx;\n                            return that.allDaySlotTemplate({\n                                date: dates[idx],\n                                resources: function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n                this._forTimeRange(this.startTime(), this.endTime(), function (date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? 'k-slot-cell' : ''\n                    };\n                    rows.push(row);\n                });\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                        if (byDate) {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                        } else {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                        }\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval), isMajorTickRow = majorTickDivider === 0, isMiddleRow = majorTickDivider < minorTickCount - 1, isLastSlotRow = majorTickDivider === minorTickCount - 1;\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var allDaySlotTemplate = this.allDaySlotTemplate;\n                var isVerticalGroupped = false;\n                var allDayVerticalGroupRow;\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                if (resources.length) {\n                    isVerticalGroupped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGroupped) {\n                        rowCount = this._rowCountForLevel(this.rowLevels.length - 2);\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1);\n                        }\n                        if (options.allDaySlot) {\n                            allDayVerticalGroupRow = function (groupIndex) {\n                                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                                var dateGroupIndex = byDate ? 0 : groupIndex;\n                                var resources = function () {\n                                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                                };\n                                if (byDate) {\n                                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[dateID],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                } else {\n                                    for (var idx = 0; idx < dates.length; idx++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[idx],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                }\n                                return result + '</tr>';\n                            };\n                        }\n                    } else {\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1) / this._columnCountForLevel(0);\n                        } else {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 2);\n                        }\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date, majorTick) {\n                    var content = '';\n                    var groupIdx = 0;\n                    var idx, length;\n                    content = '<tr' + (majorTick ? ' class=\"k-middle-row\"' : '') + '>';\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n                            }\n                            if (isVerticalGroupped) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                        }\n                    }\n                    content += '</tr>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += allDayVerticalGroupRow ? allDayVerticalGroupRow(rowIdx) : '';\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                        dateID++;\n                    }\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _addCellsToContent: function (content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = '';\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === 'vertical';\n                var resources = function (groupIndex) {\n                    return function () {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += 'k-today';\n                }\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) || !this._isWorkDay(dates[idx])) {\n                    classes += ' k-nonwork-hour';\n                }\n                content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                content += slotTemplate({\n                    date: tmplDate,\n                    resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx)\n                });\n                content += '</td>';\n                return content;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                this._dates = dates;\n                this._startDate = dates[0];\n                this._endDate = dates[dates.length - 1 || 0];\n                this.createLayout(this._layout(dates));\n                this._content(dates);\n                this._footer();\n                this.refreshLayout();\n                var allDayHeader = this.element.find('.k-scheduler-header-all-day td');\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n                that.element.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = th.outerHeight();\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = that.times.outerWidth();\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = that.datesHeader.outerHeight();\n                        }\n                    }\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n                    that.trigger('navigate', {\n                        view: 'day',\n                        date: slot.startDate()\n                    });\n                });\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            _end: function (isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n                if (isAllDay) {\n                    time = 0;\n                }\n                return new Date(this._endDate.getTime() + time);\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            destroy: function () {\n                var that = this;\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n            inRange: function (options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n                if (options.isAllDay) {\n                    return inRange;\n                }\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n                return inRange && startTime <= start && end <= endTime;\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            _timeSlotIndex: function (date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n                return (eventStartTime - startTime) / timeSlotInterval;\n            },\n            _slotIndex: function (date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n                return this._timeSlotIndex(date);\n            },\n            _dateSlotIndex: function (date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n            _positionAllDayEvent: function (element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var currentColumnCount = this._headerColumnCount || 0;\n                var leftOffset = 2;\n                var rightOffset = startIndex !== endIndex ? 5 : 4;\n                var eventHeight = this._allDayHeaderHeight;\n                var start = slotRange.startSlot();\n                element.css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                allDayEvents.push({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                var rows = SchedulerView.createRows(allDayEvents);\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n                var top = slotRange.start.offsetTop;\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({ top: top + idx * eventHeight });\n                    }\n                }\n            },\n            _arrangeColumns: function (element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n                element = {\n                    element: element,\n                    slotIndex: startSlot.index,\n                    start: top,\n                    end: top + height\n                };\n                var columns, slotWidth = startSlot.clientWidth, eventRightOffset = slotWidth * 0.1, columnEvents, eventElements = slotRange.events(), slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end);\n                slotRange.addEvent(element);\n                slotEvents.push(element);\n                columns = SchedulerView.createColumns(slotEvents);\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        columnEvents[j].element[0].style.width = columnWidth - 4 + 'px';\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + 'px';\n                    }\n                }\n            },\n            _positionEvent: function (event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var rect = slotRange.innerRect(start, end, false);\n                var height = rect.bottom - rect.top - 2;\n                if (height < 0) {\n                    height = 0;\n                }\n                element.css({\n                    top: rect.top,\n                    height: height\n                });\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n            },\n            _createEventElement: function (event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var middle;\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if (!isInDateRange(getDate(eventStartDate), startDate, endDate) && !isInDateRange(eventEndDate, startDate, endDate) || isOneDayEvent && eventStartTime < startTime && eventEndTime > endTime) {\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate || isOneDayEvent && eventStartTime < startTime) {\n                    tail = true;\n                } else if (eventEndDate > endDate && !isOneDayEvent || isOneDayEvent && eventEndTime > endTime) {\n                    head = true;\n                }\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _isInTimeSlot: function (event) {\n                var slotStartTime = this.startTime(), slotEndTime = this.endTime(), startTime = event._startTime || event.start, endTime = event._endTime || event.end;\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                if (event._date('end') > event._date('start')) {\n                    endTime = +event._date('end') + (MS_PER_DAY - 1);\n                }\n                endTime = endTime - event._date('end');\n                startTime = startTime - event._date('start');\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n                var overlaps = startTime !== slotEndTime;\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(slotStartTime, startTime, endTime) || isInTimeRange(slotEndTime, startTime, endTime);\n            },\n            _isInDateSlot: function (event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n                return (isInDateRange(startTime, slotStart, slotEnd) || isInDateRange(endTime, slotStart, slotEnd) || isInDateRange(slotStart, startTime, endTime) || isInDateRange(slotEnd, startTime, endTime)) && (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay);\n            },\n            _updateAllDayHeaderHeight: function (height) {\n                if (this._height !== height) {\n                    this._height = height;\n                    var allDaySlots = this.element.find('.k-scheduler-header-all-day td');\n                    if (allDaySlots.length) {\n                        allDaySlots.parent().add(this.element.find('.k-scheduler-times-all-day').parent()).height(height);\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n            _renderEvents: function (events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find('.k-scheduler-header-wrap > div');\n                var byDate = this._isGroupedByDate();\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.end.getTime() - event.start.getTime() >= MS_PER_DAY;\n                        var container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n                        var element, ranges, range, start, end, group;\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n                                ranges = group.slotRanges(event);\n                                var rangeCount = ranges.length;\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n                                    var occurrence = event.clone({\n                                        start: start,\n                                        end: end,\n                                        _startTime: event._startTime,\n                                        _endTime: event.endTime\n                                    });\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n                                        element.appendTo(container);\n                                        this._positionEvent(occurrence, element, range);\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            ranges = group.slotRanges(event);\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = new Date(start);\n                                    var newEnd = new Date(start);\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newEnd.setDate(newEnd.getDate() + 1);\n                                        newStart.setDate(newStart.getDate() + 1);\n                                        this._positionAllDayEvent(element, dateRange);\n                                        addContinuousEvent(group, dateRange, element, true);\n                                        element.appendTo(container);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n                                    this._positionAllDayEvent(element, ranges[0]);\n                                    addContinuousEvent(group, ranges[0], element, true);\n                                    element.appendTo(container);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventsPerDate = $.map(this._dates, function (date) {\n                    return Math.max.apply(null, $.map(eventsByResource, function (events) {\n                        return $.grep(events, function (event) {\n                            return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                        }).length;\n                    }));\n                });\n                var height = Math.max.apply(null, eventsPerDate);\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n                this.refreshLayout();\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _columnOffsetForResource: function (index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            clearSelection: function () {\n                this.content.add(this.datesHeader).find('.k-state-selected').removeAttr('id').attr('aria-selected', false).removeClass('k-state-selected');\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot && startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    } else {\n                        if (isDaySlot && startSlot.index === endSlot.index || !isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n            _changeViewPeriod: function (selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = !reverse && !group.daySlotCollectionCount() ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    selection.start = new Date(date);\n                    selection.end = new Date(date);\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                    } else {\n                        endMilliseconds = selection.isAllDay || !getMilliseconds(end) ? MS_PER_DAY : getMilliseconds(end);\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n                    selection.events = [];\n                    return true;\n                }\n            }\n        });\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: 'DayView',\n                    title: 'Day'\n                },\n                name: 'day'\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: 'WeekView',\n                    title: 'Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'week',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: 'WorkWeekView',\n                    title: 'Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'workWeek',\n                nextDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, dayOfWeek = kendo.date.dayOfWeek, weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), start = dayOfWeek(weekStart, this.options.workWeekStart, 1), end = dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}