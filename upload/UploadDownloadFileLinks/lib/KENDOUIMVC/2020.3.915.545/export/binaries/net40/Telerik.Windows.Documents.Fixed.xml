<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Documents.Fixed</name>
    </assembly>
    <members>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Encodable.GetDerEncoded">
             Return the DER encoding of the object, null if the DER encoding can not be made.
            
             @return a DER byte array, null otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Asn1InputStream">
            a general purpose ASN.1 decoder - note: this class differs from the
            others in that it returns null after it has read the last object in
            the stream. If an ASN.1 Null is encountered a Der/BER Null object is
            returned.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1InputStream.#ctor(System.IO.Stream,System.Int32)">
             Create an ASN1InputStream where no DER object will be longer than limit.
            
             @param input stream containing ASN.1 encoded data.
             @param limit maximum size of a DER encoded object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1InputStream.#ctor(System.Byte[])">
             Create an ASN1InputStream based on the input byte array. The length of DER objects in
             the stream is automatically limited to the length of the input array.
            
             @param input array containing ASN.1 encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1InputStream.BuildObject(System.Int32,System.Int32,System.Int32)">
            build an object given its tag and the number of bytes to construct it from.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Asn1Null">
            A Null object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Object.FromByteArray(System.Byte[])">
            <summary>Create a base ASN.1 object from a byte array.</summary>
            <param name="data">The byte array to parse.</param>
            <returns>The base ASN.1 object represented by the byte array.</returns>
            <exception cref="T:System.IO.IOException">If there is a problem parsing the data.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Object.FromStream(System.IO.Stream)">
            <summary>Read a base ASN.1 object from a stream.</summary>
            <param name="inStr">The stream to parse.</param>
            <returns>The base ASN.1 object represented by the byte array.</returns>
            <exception cref="T:System.IO.IOException">If there is a problem parsing the data.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1OctetString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Octet string from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                          be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1OctetString.GetInstance(System.Object)">
             return an Octet string from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1OctetString.#ctor(System.Byte[])">
            @param string the octets making up the octet string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Sequence.GetInstance(System.Object)">
             return an Asn1Sequence from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Sequence.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             Return an ASN1 sequence from a tagged object. There is a special
             case here, if an object appears to have been explicitly tagged on
             reading but we were expecting it to be implicitly tagged in the
             normal course of events it indicates that we lost the surrounding
             sequence - so we need to add it back (this will happen if the tagged
             object is a sequence that contains other sequences). If you are
             dealing with implicitly tagged sequences you really <b>should</b>
             be using this method.
            
             @param obj the tagged object.
             @param explicitly true if the object is meant to be explicitly tagged,
                      false otherwise.
             @exception ArgumentException if the tagged object cannot
                      be converted.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Asn1Sequence.Item(System.Int32)">
             return the object at the sequence position indicated by index.
            
             @param index the sequence number (starting at zero) of the object
             @return the object at the sequence position indicated by index.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Set.GetInstance(System.Object)">
             return an ASN1Set from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Set.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             Return an ASN1 set from a tagged object. There is a special
             case here, if an object appears to have been explicitly tagged on
             reading but we were expecting it to be implicitly tagged in the
             normal course of events it indicates that we lost the surrounding
             set - so we need to add it back (this will happen if the tagged
             object is a sequence that contains other sequences). If you are
             dealing with implicitly tagged sets you really <b>should</b>
             be using this method.
            
             @param obj the tagged object.
             @param explicitly true if the object is meant to be explicitly tagged
                      false otherwise.
             @exception ArgumentException if the tagged object cannot
                      be converted.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Asn1Set.Item(System.Int32)">
             return the object at the set position indicated by index.
            
             @param index the set number (starting at zero) of the object
             @return the object at the set position indicated by index.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Asn1TaggedObject">
            ASN.1 TaggedObject - in ASN.1 notation this is any object preceded by
            a [n] where n is some number - these are assumed to follow the construction
            rules (as with sequences).
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.#ctor(System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.#ctor(System.Boolean,System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param explicitly true if the object is explicitly tagged.
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.IsExplicit">
            return whether or not the object may be explicitly tagged.
            <p>
            Note: if the object has been read from an input stream, the only
            time you can be sure if isExplicit is returning the true state of
            affairs is if it returns false. An implicitly tagged object may appear
            to be explicitly tagged, so you need to understand the context under
            which the reading was done as well, see GetObject below.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.GetObject">
            return whatever was following the tag.
            <p>
            Note: tagged objects are generally context dependent if you're
            trying to extract a tagged object you should be going via the
            appropriate GetInstance method.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.GetObjectParser(System.Int32,System.Boolean)">
            Return the object held in this tagged object as a parser assuming it has
            the type of the passed in tag. If the object doesn't have a parser
            associated with it, the base object is returned.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerApplicationSpecific">
            Base class for an application specific object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerApplicationSpecific.GetObject">
             Return the enclosed object assuming explicit tagging.
            
             @return  the resulting object
             @throws IOException if reconstruction fails.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerApplicationSpecific.GetObject(System.Int32)">
             Return the enclosed object assuming implicit tagging.
            
             @param derTagNo the type tag that should be applied to the object's contents.
             @return  the resulting object
             @throws IOException if reconstruction fails.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IAsn1String">
            basic interface for Der string objects.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.GetInstance(System.Object)">
             return a Bit string from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Bit string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.#ctor(System.Byte[],System.Int32)">
            @param data the octets making up the bit string.
            @param padBits the number of extra bits at the end of the string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.GetOctets">
             Return the octets contained in this BIT STRING, checking that this BIT STRING really
             does represent an octet aligned string. Only use this method when the standard you are
             following dictates that the BIT STRING will be octet aligned.
            
             @return a copy of the octet aligned data.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerBitString.IntValue">
            @return the value of the bit string as an int (truncating if necessary)
        </member>
        <member name="T:Org.BouncyCastle.Asn1.BerNull">
            A BER Null object.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerNull">
            A Null object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerOctetString.#ctor(System.Byte[])">
            <param name="str">The octets making up the octet string.</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerOctetString.ToBytes(System.Collections.IEnumerable)">
            convert a vector of octet strings into a single byte string
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerOctetString.#ctor(System.Byte[])">
            <param name="str">The octets making up the octet string.</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerOctetString.GetEnumerator">
            return the DER octets that make up this string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSequence.#ctor">
            create an empty sequence
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            create a sequence containing one object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            create a sequence containing a vector of objects.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSequence.#ctor">
            create an empty sequence
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            create a sequence containing one object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            create a sequence containing a vector of objects.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerSet">
            A Der encoded set object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSet.#ctor">
            create an empty set
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSet.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param obj - a single object that makes up the set.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSet.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            @param v - a vector of objects making up the set.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSet.#ctor">
            create an empty sequence
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSet.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            create a set containing one object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSet.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            create a set containing a vector of objects.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.BerTaggedObject">
            BER TaggedObject - in ASN.1 notation this is any object preceded by
            a [n] where n is some number - these are assumed to follow the construction
            rules (as with sequences).
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerTaggedObject">
            DER TaggedObject - in ASN.1 notation this is any object preceded by
            a [n] where n is some number - these are assumed to follow the construction
            rules (as with sequences).
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerTaggedObject.#ctor(System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerTaggedObject.#ctor(System.Boolean,System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param explicitly true if an explicitly tagged object.
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerTaggedObject.#ctor(System.Int32)">
            create an implicitly tagged object that contains a zero
            length sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerTaggedObject.#ctor(System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerTaggedObject.#ctor(System.Boolean,System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param explicitly true if an explicitly tagged object.
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerTaggedObject.#ctor(System.Int32)">
            create an implicitly tagged object that contains a zero
            length sequence.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerBmpString">
            Der BMPString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.GetInstance(System.Object)">
             return a BMP string from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a BMP string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                          be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.#ctor(System.String)">
            basic constructor
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBoolean.GetInstance(System.Object)">
             return a bool from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBoolean.GetInstance(System.Boolean)">
            return a DerBoolean from the passed in bool.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBoolean.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Boolean from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerEnumerated.GetInstance(System.Object)">
             return an integer from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerEnumerated.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Enumerated from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerExternal">
            Class representing the DER-type External
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerExternal.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.DerInteger,Org.BouncyCastle.Asn1.Asn1Object,Org.BouncyCastle.Asn1.DerTaggedObject)">
            Creates a new instance of DerExternal
            See X.690 for more informations about the meaning of these parameters
            @param directReference The direct reference or <code>null</code> if not set.
            @param indirectReference The indirect reference or <code>null</code> if not set.
            @param dataValueDescriptor The data value descriptor or <code>null</code> if not set.
            @param externalData The external data in its encoded form.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerExternal.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.DerInteger,Org.BouncyCastle.Asn1.Asn1Object,System.Int32,Org.BouncyCastle.Asn1.Asn1Object)">
            Creates a new instance of DerExternal.
            See X.690 for more informations about the meaning of these parameters
            @param directReference The direct reference or <code>null</code> if not set.
            @param indirectReference The indirect reference or <code>null</code> if not set.
            @param dataValueDescriptor The data value descriptor or <code>null</code> if not set.
            @param encoding The encoding to be used for the external data
            @param externalData The external data
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerExternal.Encoding">
            The encoding of the content. Valid values are
            <ul>
            <li><code>0</code> single-ASN1-type</li>
            <li><code>1</code> OCTET STRING</li>
            <li><code>2</code> BIT STRING</li>
            </ul>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerGeneralizedTime">
            Generalized time object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.GetInstance(System.Object)">
             return a generalized time from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Generalized Time object from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.#ctor(System.String)">
             The correct format for this is YYYYMMDDHHMMSS[.f]Z, or without the Z
             for local time, or Z+-HHMM on the end, for difference between local
             time and UTC time. The fractional second amount f must consist of at
             least one number with trailing zeroes removed.
            
             @param time the time string.
             @exception ArgumentException if string is an illegal format.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.#ctor(System.DateTime)">
            base constructor from a local time object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.GetTime">
            return the time - always in the form of
             YYYYMMDDhhmmssGMT(+hh:mm|-hh:mm).
            <p>
            Normally in a certificate we would expect "Z" rather than "GMT",
            however adding the "GMT" means we can just use:
            <pre>
                dateF = new SimpleDateFormat("yyyyMMddHHmmssz");
            </pre>
            To read in the time and Get a date which is compatible with our local
            time zone.</p>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerGeneralizedTime.TimeString">
            Return the time.
            @return The time string as it appeared in the encoded object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGraphicString.GetInstance(System.Object)">
             return a Graphic String from the passed in object
            
             @param obj a DerGraphicString or an object that can be converted into one.
             @exception IllegalArgumentException if the object cannot be converted.
             @return a DerGraphicString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGraphicString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Graphic String from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception IllegalArgumentException if the tagged object cannot
                           be converted.
             @return a DerGraphicString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGraphicString.#ctor(System.Byte[])">
            basic constructor - with bytes.
            @param string the byte encoding of the characters making up the string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerIA5String">
            Der IA5String object - this is an ascii string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.GetInstance(System.Object)">
             return a IA5 string from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an IA5 string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.#ctor(System.Byte[])">
            basic constructor - with bytes.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.#ctor(System.String)">
            basic constructor - without validation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.#ctor(System.String,System.Boolean)">
             Constructor with optional validation.
            
             @param string the base string to wrap.
             @param validate whether or not to check the string.
             @throws ArgumentException if validate is true and the string
             contains characters that should not be in an IA5String.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.IsIA5String(System.String)">
             return true if the passed in String can be represented without
             loss as an IA5String, false otherwise.
            
             @return true if in printable set, false otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerInteger.GetInstance(System.Object)">
             return an integer from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerInteger.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Integer from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param isExplicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerInteger.PositiveValue">
            in some cases positive values Get crammed into a space,
            that's not quite big enough...
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerNumericString">
            Der NumericString object - this is an ascii string of characters {0,1,2,3,4,5,6,7,8,9, }.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.GetInstance(System.Object)">
             return a Numeric string from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Numeric string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.#ctor(System.Byte[])">
            basic constructor - with bytes.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.#ctor(System.String)">
            basic constructor -  without validation..
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.#ctor(System.String,System.Boolean)">
             Constructor with optional validation.
            
             @param string the base string to wrap.
             @param validate whether or not to check the string.
             @throws ArgumentException if validate is true and the string
             contains characters that should not be in a NumericString.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.IsNumericString(System.String)">
             Return true if the string can be represented as a NumericString ('0'..'9', ' ')
            
             @param str string to validate.
             @return true if numeric, fale otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerObjectIdentifier.GetInstance(System.Object)">
             return an Oid from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerObjectIdentifier.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an object Identifier from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerObjectIdentifier.On(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            Return  true if this oid is an extension of the passed in branch, stem.
            @param stem the arc or branch that is a possible parent.
            @return  true if the branch is on the passed in stem, false otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerPrintableString">
            Der PrintableString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.GetInstance(System.Object)">
             return a printable string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Printable string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.#ctor(System.String)">
            basic constructor - this does not validate the string
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.#ctor(System.String,System.Boolean)">
             Constructor with optional validation.
            
             @param string the base string to wrap.
             @param validate whether or not to check the string.
             @throws ArgumentException if validate is true and the string
             contains characters that should not be in a PrintableString.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.IsPrintableString(System.String)">
             return true if the passed in String can be represented without
             loss as a PrintableString, false otherwise.
            
             @return true if in printable set, false otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerT61String">
            Der T61String (also the teletex string) - 8-bit characters
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.GetInstance(System.Object)">
             return a T61 string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an T61 string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.#ctor(System.Byte[])">
            basic constructor - with bytes.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.#ctor(System.String)">
            basic constructor - with string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerUniversalString">
            Der UniversalString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUniversalString.GetInstance(System.Object)">
             return a Universal string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUniversalString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Universal string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUniversalString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerUtcTime">
            UTC time object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.GetInstance(System.Object)">
             return an UTC Time from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an UTC Time from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.#ctor(System.String)">
            The correct format for this is YYMMDDHHMMSSZ (it used to be that seconds were
            never encoded. When you're creating one of these objects from scratch, that's
            what you want to use, otherwise we'll try to deal with whatever Gets read from
            the input stream... (this is why the input format is different from the GetTime()
            method output).
            <p>
            @param time the time string.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.#ctor(System.DateTime)">
            base constructor from a DateTime object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.ToDateTime">
             return the time as a date based on whatever a 2 digit year will return. For
             standardised processing use ToAdjustedDateTime().
            
             @return the resulting date
             @exception ParseException if the date string cannot be parsed.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.ToAdjustedDateTime">
             return the time as an adjusted date
             in the range of 1950 - 2049.
            
             @return a date in the range of 1950 to 2049.
             @exception ParseException if the date string cannot be parsed.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerUtcTime.TimeString">
            return the time - always in the form of
             YYMMDDhhmmssGMT(+hh:mm|-hh:mm).
            <p>
            Normally in a certificate we would expect "Z" rather than "GMT",
            however adding the "GMT" means we can just use:
            <pre>
                dateF = new SimpleDateFormat("yyMMddHHmmssz");
            </pre>
            To read in the time and Get a date which is compatible with our local
            time zone.</p>
            <p>
            <b>Note:</b> In some cases, due to the local date processing, this
            may lead to unexpected results. If you want to stick the normal
            convention of 1950 to 2049 use the GetAdjustedTime() method.</p>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerUtcTime.AdjustedTimeString">
            <summary>
            Return a time string as an adjusted date with a 4 digit year.
            This goes in the range of 1950 - 2049.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerUtf8String">
            Der UTF8String object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.GetInstance(System.Object)">
             return an UTF8 string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an UTF8 string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.#ctor(System.String)">
            basic constructor
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVideotexString.GetInstance(System.Object)">
             return a Videotex String from the passed in object
            
             @param obj a DERVideotexString or an object that can be converted into one.
             @exception IllegalArgumentException if the object cannot be converted.
             @return a DERVideotexString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVideotexString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Videotex String from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception IllegalArgumentException if the tagged object cannot
                           be converted.
             @return a DERVideotexString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVideotexString.#ctor(System.Byte[])">
            basic constructor - with bytes.
            @param string the byte encoding of the characters making up the string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerVisibleString">
            Der VisibleString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.GetInstance(System.Object)">
             return a Visible string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Visible string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.#ctor(System.String)">
            basic constructor
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IAsn1Choice">
            Marker interface for CHOICE objects - if you implement this in a roll-your-own
            object, any attempt to tag the object implicitly will convert the tag to an
            explicit one as the encoding rules require.
            <p>
            If you use this interface your class should also implement the getInstance
            pattern which takes a tag object and the tagging mode used. 
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.OidTokenizer">
            class for breaking up an Oid into it's component tokens, ala
            java.util.StringTokenizer. We need this class as some of the
            lightweight Java environment don't support classes like
            StringTokenizer.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.AddMagnitudes(System.Int32[],System.Int32[])">
            return a = a + b - b preserved.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.CompareTo(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            unsigned comparison on two arrays - note the arrays may
            start with leading zeros.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Divide(System.Int32[],System.Int32[])">
            return z = x / y - done in place (z value preserved, x contains the
            remainder)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.IsProbablePrime(System.Int32)">
            return whether or not a BigInteger is probably prime with a
            probability of 1 - (1/2)**certainty.
            <p>From Knuth Vol 2, pg 395.</p>
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ExtEuclid(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger@)">
             Calculate the numbers u1, u2, and u3 such that:
            
             u1 * a + u2 * b = u3
            
             where u3 is the greatest common divider of a and b.
             a and b using the extended Euclid algorithm (refer p. 323
             of The Art of Computer Programming vol 2, 2nd ed).
             This also seems to have the side effect of calculating
             some form of multiplicative inverse.
            
             @param a    First number to calculate gcd for
             @param b    Second number to calculate gcd for
             @param u1Out      the return object for the u1 value
             @return     The greatest common divisor of a and b
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Square(System.Int32[],System.Int32[])">
            return w with w = x * x - w is assumed to have enough space.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Multiply(System.Int32[],System.Int32[],System.Int32[])">
            return x with x = y * z - x is assumed to have enough space.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.GetMQuote">
            Calculate mQuote = -m^(-1) mod b with b = 2^32 (32 = word size)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.MultiplyMonty(System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.UInt32,System.Boolean)">
            Montgomery multiplication: a = x * y * R^(-1) mod m
            <br/>
            Based algorithm 14.36 of Handbook of Applied Cryptography.
            <br/>
            <li> m, x, y should have length n </li>
            <li> a should have length (n + 1) </li>
            <li> b = 2^32, R = b^n </li>
            <br/>
            The result is put in x
            <br/>
            NOTE: the indices of x, y, m, a different in HAC and in Java
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Remainder(System.Int32[],System.Int32[])">
            return x = x % y - done in place (y value preserved)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftLeft(System.Int32[],System.Int32)">
            do a left shift - this returns a new array.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftRightInPlace(System.Int32,System.Int32[],System.Int32)">
            do a right shift - this does it in place.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftRightOneInPlace(System.Int32,System.Int32[])">
            do a right shift by one - this does it in place.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Subtract(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            returns x = x - y - we assume x is >= y
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Arrays">
            <summary> General array utilities.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Byte[],System.Byte[])">
            <summary>
            Are two arrays equal.
            </summary>
            <param name="a">Left side.</param>
            <param name="b">Right side.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual(System.Byte[],System.Byte[])">
            <summary>
            A constant time equals comparison - does not terminate early if
            test will fail.
            </summary>
            <param name="a">first array</param>
            <param name="b">second array</param>
            <returns>true if arrays equal, false otherwise.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Byte[],System.Int32,System.Int32)">
             Make a copy of a range of bytes from the passed in data array. The range can
             extend beyond the end of the input array, in which case the return array will
             be padded with zeroes.
            
             @param data the array from which the data is to be copied.
             @param from the start index at which the copying should take place.
             @param to the final index of the range (exclusive).
            
             @return a new byte array containing the range given.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Date.DateTimeUtilities.DateTimeToUnixMs(System.DateTime)">
            <summary>
            Return the number of milliseconds since the Unix epoch (1 Jan., 1970 UTC) for a given DateTime value.
            </summary>
            <param name="dateTime">A UTC DateTime value not before epoch.</param>
            <returns>Number of whole milliseconds after epoch.</returns>
            <exception cref="T:System.ArgumentException">'dateTime' is before epoch.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Date.DateTimeUtilities.UnixMsToDateTime(System.Int64)">
            <summary>
            Create a DateTime value from the number of milliseconds since the Unix epoch (1 Jan., 1970 UTC).
            </summary>
            <param name="unixMs">Number of milliseconds since the epoch.</param>
            <returns>A UTC DateTime value</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Date.DateTimeUtilities.CurrentUnixMs">
            <summary>
            Return the current number of milliseconds since the Unix epoch (1 Jan., 1970 UTC).
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.Hex">
            <summary>
            Class to decode and encode Hex.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[])">
             encode the input data producing a Hex encoded byte array.
            
             @return a byte array containing the Hex encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.Int32,System.Int32)">
             encode the input data producing a Hex encoded byte array.
            
             @return a byte array containing the Hex encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.IO.Stream)">
             Hex encode the byte data writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             Hex encode the byte data writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.Byte[])">
             decode the Hex encoded input data. It is assumed the input data is valid.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.String)">
             decode the Hex encoded string data - whitespace will be ignored.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.String,System.IO.Stream)">
             decode the Hex encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.IEncoder">
            Encode and decode byte arrays (typically from binary to 7-bit ASCII
            encodings).
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             encode the input data producing a Hex output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             decode the Hex encoded byte data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString(System.String,System.IO.Stream)">
             decode the Hex encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited(System.IO.Stream,System.Int64,System.IO.Stream)">
            <summary>
            Pipe all bytes from <c>inStr</c> to <c>outStr</c>, throwing <c>StreamFlowException</c> if greater
            than <c>limit</c> bytes in <c>inStr</c>.
            </summary>
            <param name="inStr">
            A <see cref="T:System.IO.Stream"/>
            </param>
            <param name="limit">
            A <see cref="T:System.Int64"/>
            </param>
            <param name="outStr">
            A <see cref="T:System.IO.Stream"/>
            </param>
            <returns>The number of bytes actually transferred, if not greater than <c>limit</c></returns>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Strings">
            <summary> General string utilities.</summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedActionException">
            <summary>
            Represents not supported action exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedActionException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedActionException"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedActionException.ActionName">
            <summary>
            Represent the name of the action from the pdf file.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException">
            <summary>
            Represents not supported charset format exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException"/> class.
            </summary>
            <param name="charsetFormat">The charset format.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException"/> class.
            </summary>
            <param name="charsetFormat">The charset format.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedCharsetFormatException.CharsetFormat">
            <summary>
            Gets or sets the charset format.
            </summary>
            <value>The charset format.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException">
            <summary>
            Represents not supported color space exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException"/> class.
            </summary>
            <param name="colorSpace">The color space.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException"/> class.
            </summary>
            <param name="colorSpace">The color space.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedColorSpaceException.ColorSpace">
            <summary>
            Gets or sets the color space.
            </summary>
            <value>The color space.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException">
            <summary>
            Represents not supported encryption exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException"/> class.
            </summary>
            <param name="encryptionCode">The encryption code.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException"/> class.
            </summary>
            <param name="encryptionCode">The encryption code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedEncryptionException.EncryptionCode">
            <summary>
            Gets or sets the encryption code.
            </summary>
            <value>The encryption code.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException">
            <summary>
            Represents not supported font exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException"/> class.
            </summary>
            <param name="fontType">Type of the font.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException"/> class.
            </summary>
            <param name="fontType">Type of the font.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontException.FontType">
            <summary>
            Gets or sets the type of the font.
            </summary>
            <value>The type of the font.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException">
            <summary>
            Represents not supported font family exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFontFamilyException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException">
            <summary>
            Represents not supported function type exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException"/> class.
            </summary>
            <param name="functionType">Type of the function.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException"/> class.
            </summary>
            <param name="functionType">Type of the function.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFunctionTypeException.FunctionType">
            <summary>
            Gets or sets the type of the function.
            </summary>
            <value>The type of the function.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException">
            <summary>
            Represents not supported paint type exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException"/> class.
            </summary>
            <param name="paintType">Type of the paint.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException"/> class.
            </summary>
            <param name="paintType">Type of the paint.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPaintTypeException.PaintType">
            <summary>
            Gets or sets the type of the paint.
            </summary>
            <value>The type of the paint.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException">
            <summary>
            Represents not supported predefined CMap exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException"/> class.
            </summary>
            <param name="cmapName">Name of the cmap.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException"/> class.
            </summary>
            <param name="cmapName">Name of the cmap.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedPredefinedCMapException.CMapName">
            <summary>
            Gets or sets the name of the C map.
            </summary>
            <value>The name of the C map.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException">
            <summary>
            Represents not supported shading type exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException"/> class.
            </summary>
            <param name="shadingType">Type of the shading.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException"/> class.
            </summary>
            <param name="shadingType">Type of the shading.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedShadingTypeException.ShadingType">
            <summary>
            Gets or sets the type of the shading.
            </summary>
            <value>The type of the shading.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException">
            <summary>
            Represents not supported stream type exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException"/> class.
            </summary>
            <param name="supportsRead">The supports read.</param>
            <param name="supportsSeek">The supports seek.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.#ctor(System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException"/> class.
            </summary>
            <param name="supportsRead">The supports read.</param>
            <param name="supportsSeek">The supports seek.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.SupportsSeek">
            <summary>
            Gets or sets the supports seek.
            </summary>
            <value>The supports seek.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedStreamTypeException.SupportsRead">
            <summary>
            Gets or sets the supports read.
            </summary>
            <value>The supports read.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException">
            <summary>
            Represents not supported XObject exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedXObjectTypeException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Telerik.Windows.Documents.Extensibility.PredefinedCMapsProviderBase">
            <summary>
            Represents a provider of predefined CMap resources for Adobe’s public character collections.
            A list with predefined resources can be found on the following repository - https://github.com/adobe-type-tools/cmap-resources.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Extensibility.PredefinedCMapsProviderBase.GetCidCMapData(System.String)">
            <summary>
            Retrieves the character code to CID mapping of a predefined CMap.
            </summary>
            <param name="name">The name of the predefined CMap.</param>
            <returns>The CMap resource data.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Extensibility.PredefinedCMapsProviderBase.GetUnicodeCMapData(System.String)">
            <summary>
            Retrieves the character code to Unicode mapping of a predefined CMap.
            </summary>
            <param name="name">The name of the predefined CMap.</param>
            <returns>The CMap resource data.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Extensibility.FixedExtensibilityManager">
            <summary>
            Represents a manager used to provide extensibility mechanisms.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Extensibility.FixedExtensibilityManager.PredefinedCMapsProvider">
            <summary>
            Gets or sets a <see cref="T:Telerik.Windows.Documents.Extensibility.PredefinedCMapsProviderBase"/> instance used to provide predefined CMap resources.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Core.Fonts.Type1.CFFFormat.CFFTables.Charset.#ctor(Telerik.Windows.Documents.Core.Fonts.Type1.ICFFFontFile,System.UInt16[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Core.Fonts.Type1.CFFFormat.CFFTables.Charset"/> class.
            </summary>
            <param name="file">Font file.</param>
            <param name="glyphs">Array of cids or character codes, depending of the font encoding.</param>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings">
            <summary>
            Represents settings that <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider"/> uses to import PDF.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings.#ctor(Telerik.Windows.Documents.Fixed.FormatProviders.ReadingMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings"/> class.
            </summary>
            <param name="mode">The rendering mode.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings.ReadAllAtOnce">
            <summary>
            Gets the default format provider settings.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings.ReadOnDemand">
            <summary>
            Gets the read on demand format provider settings.
            </summary>
            <value>The read on demand.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings.ReadingMode">
            <summary>
            Gets or sets the reading mode.
            </summary>
            <value>The reading mode.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings.UsePdfProcessingModel">
            <summary>
            Gets or sets whether to use the PdfProcessing model when importing the document for RadPdfViewer. 
            This allows accessing the imported document page content.
            </summary>
            <value>True by default.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Converters.TypeAwareConverter`1">
            <summary>
            Converts a PDF dictionary to a concrete object instance based on some type property in the dictionary.
            </summary>
            <typeparam name="T">The type of the type property.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Old.Pdf.OldToProcessingTranslator.GetColorSpaceObjectFromColorSpaceOld(Telerik.Windows.Documents.Fixed.FormatProviders.Old.Pdf.DocumentModel.Core.ColorSpaces.ColorSpaceOld)">
            <summary>
            Returns <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.ColorSpaces.ColorSpaceObject"/> from <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Old.Pdf.DocumentModel.Core.ColorSpaces.ColorSpaceOld"/>. 
            Not implemented for all types! Throws not implemented exception for the non-implemented conversion.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.IPagesCacheManager">
            <summary>
            Class responsible for page content caching operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.IPagesCacheManager.SavePage(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Preserves all currently applied changes of the page content in memory.
            </summary>
            <param name="page">The page instance.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.IPagesCacheManager.BeginUsingPage(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Loads the page content.
            </summary>
            <param name="page">The page instance.</param>
            <returns>A disposable object responsible for 
            unloading the page content.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.IPagesCacheManager.Clear">
            <summary>
            Clears the cached content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfSingleLineWriter">
            <summary>
            This writer is used for writing all the content on a single line (does not support multiline text writing).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.IPdfFilter">
            <summary>
            Represents PDF filter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.IPdfFilter.Encode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.Byte[])">
            <summary>
            Encodes the specified data.
            </summary>
            <param name="encodedObject">The encoded object.</param>
            <param name="inputData">The input data.</param>
            <returns>The encoded data.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.IPdfFilter.Decode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.Byte[],Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DecodeParameters)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="decodedObject">The decoded object.</param>
            <param name="inputData">The input data.</param>
            <param name="decodeParameters">The decode parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.IPdfFilter.Name">
            <summary>
            Gets the name of the PDF filter.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.ImageQuality">
            <summary>
            Represents image quality for the exported images.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.ImageQuality.High">
            <summary>
            Represents high image quality.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.ImageQuality.Medium">
            <summary>
            Represents medium image quality.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.ImageQuality.Low">
            <summary>
            Represents low image quality.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfComplianceLevel">
            <summary>
            Represents PDF compliance levels.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfComplianceLevel.None">
            <summary>
            Specify no comliance level.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfComplianceLevel.PdfA1B">
            <summary>
            Specify PDF/A-1b compliance level.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfComplianceLevel.PdfA2B">
            <summary>
            Specify PDF/A-2b compliance level.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfComplianceLevel.PdfA2U">
            <summary>
            Specify PDF/A-2u compliance level.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfComplianceLevel.PdfA3B">
            <summary>
            Specify PDF/A-3b compliance level.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfComplianceLevel.PdfA3U">
            <summary>
            Specify PDF/A-3u compliance level.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ASCIIHexDecode">
            <summary>
            Implements the ASCIIHexDecode filter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ASCIIHexDecode.Encode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.Byte[])">
            <summary>
            Encodes the specified data.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ASCIIHexDecode.Decode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.IO.Stream,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DecodeParameters)">
            <summary>
            Decodes the specified data.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PasswordNeededEventArgs">
            <summary>
            Represents password needed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PasswordNeededEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PasswordNeededEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PasswordNeededEventArgs.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Converters.TypeAwareConverterWithParameter`2">
            <summary>
            Converts a PDF dictionary to a concrete object instance based on some type property and some parameter property in the dictionary.
            </summary>
            <typeparam name="T">The type of the type property.</typeparam>
            <typeparam name="P">The type of the parameter property.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.DocumentStructure.CrossReferenceStream.SetInt(System.Byte[],System.Int32,System.Int32,System.Int64)">
            <summary>
            Sets a calculated byte at the specified position in the data byte array for the parameter number.
            This is reverse of the GetInt method.
            </summary>
            <param name="data">The data to be filled.</param>
            <param name="position">The position in the data array.</param>
            <param name="length">The length in bytes reserved for a specific field value from W.</param>
            <param name="number">The number aka field value.</param>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Forms.FormFieldTypes.Button">
            <summary>
            Represents Button field type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Forms.FormFieldTypes.Text">
            <summary>
            Represents Text field type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Forms.FormFieldTypes.Choice">
            <summary>
            Represents Choice field type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Forms.FormFieldTypes.Signature">
            <summary>
            Represents Signature field type.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Patterns.GradientStopsCalculator.CalculateLinearGradientStopsMaximalStep(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.IGradient)">
            <summary>
            Calculates step appropriate for calculating neighbouring colors in a linear gradient.
            </summary>
            <param name="gradient">The linear gradient.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Patterns.GradientStopsCalculator.CalculateRadialGradientStopsMaximalStep(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.IRadialGradient)">
            <summary>
            Calculates step appropriate for calculating neighbouring colors in a radial gradient.
            </summary>
            <param name="gradient">The radial gradient.</param>
            <returns>The step.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes">
            <summary>
            Represents annotation types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Link">
            <summary>
            Represents Link annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Widget">
            <summary>
            Represents Widget annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Text">
            <summary>
            Represents Text annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.FreeText">
            <summary>
            Represents FreeText annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Line">
            <summary>
            Represents Line annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Square">
            <summary>
            Represents Square annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Circle">
            <summary>
            Represents Circle annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Polygon">
            <summary>
            Represents Polygon annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.PolyLine">
            <summary>
            Represents Polyline annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Highlight">
            <summary>
            Represents Highlight annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Underline">
            <summary>
            Represents Underline annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Squiggly">
            <summary>
            Represents Squiggly annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.StrikeOut">
            <summary>
            Represents Strikeout annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Stamp">
            <summary>
            Represents Stamp annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Caret">
            <summary>
            Represents Caret annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Ink">
            <summary>
            Represents Ink annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Popup">
            <summary>
            Represents Popup annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.FileAttachment">
            <summary>
            Represents FileAttachment annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Sound">
            <summary>
            Represents Sound annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Movie">
            <summary>
            Represents Movie annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Screen">
            <summary>
            Represents Screen annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.PrinterMark">
            <summary>
            Represents PrinterMark annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.TrapNet">
            <summary>
            Represents TrapNet annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Watermark">
            <summary>
            Represents Watermark annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.ThreeD">
            <summary>
            Represents ThreeD annotation type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.Annotations.AnnotationTypes.Redact">
            <summary>
            Represents Redact annotation type.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.IncrementalUpdate.PagePropertiesEditor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource">
            <summary>
            Represent source PDF file.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource"/> class.
            </summary>
            <param name="pdfFileStream">The pdf file stream.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource"/> class.
            </summary>
            <param name="pdfFileStream">The pdf file stream.</param>
            <param name="leaveStreamOpen">Boolean value indicating whether or not to close the stream when <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource"/> instance is disposed. The default value is false.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource.#ctor(System.IO.Stream,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource"/> class.
            </summary>
            <param name="pdfFileStream">The PDF file <see cref="T:System.IO.Stream"/> instance.</param>
            <param name="importSettings">The <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings"/> instance specifying settings for PDF file import.</param>
            <param name="leaveStreamOpen">Boolean value indicating whether or not to close the stream when <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource"/> instance is disposed. The default value is false.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFileSource.Pages">
            <summary>
            Gets the pages.
            </summary>
            <value>The pages.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFormFieldSourceCollection.Item(System.String)">
            <summary>
            Gets PdfFormFieldSource instance by field name.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfFormFieldSourceCollection.Count">
            <summary>
            Gets the count of the fields in the collection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter">
            <summary>
            Represents PDF file stream that writes file content directly to a given stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="leaveStreamOpen">Boolean value indicating whether or not to close the stream after <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter"/> instance is disposed.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.WritePage(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource)">
            <summary>
            Writes the page.
            </summary>
            <param name="pageSource">The page source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.WritePage(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Writes the page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.BeginPage(System.Windows.Size)">
            <summary>
            Begins the page.
            </summary>
            <param name="pageSize">Size of the page.</param>
            <returns>The page stream.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.BeginPage(System.Windows.Size,Telerik.Windows.Documents.Fixed.Model.Data.Rotation)">
            <summary>
            Begins the page.
            </summary>
            <param name="pageSize">Size of the page.</param>
            <param name="rotation">The rotation.</param>
            <returns>The page stream.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.BeginPage(System.Windows.Rect,System.Windows.Rect,Telerik.Windows.Documents.Fixed.Model.Data.Rotation)">
            <summary>
            Begins the page.
            </summary>
            <param name="mediaBox">Defines the boundaries of the physical medium 
            on which the page is intended to be displayed or printed.</param>
            <param name="cropBox">Defines the boundaries of the visible region of the page. 
            When the page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.</param>
            <param name="rotation">The rotation.</param>
            <returns>The page stream.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriter.Settings">
            <summary>
            The settings 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource">
            <summary>
            Represents PDF file page source.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.IFixedPage">
            <summary>
            Abstraction representing a fixed page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IFixedPage.MediaBox">
            <summary>
            Gets the rectangle defining the boundaries of the physical medium 
            on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IFixedPage.CropBox">
            <summary>
            Gets the rectangle defining the boundaries of the visible region of the page. 
            When the page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IFixedPage.Rotation">
            <summary>
            Gets the rotation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource.Rotation">
            <summary>
            Gets the rotation.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource.Size">
            <summary>
            Gets the size of the physical medium 
            on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource.MediaBox">
            <summary>
            Gets the rectangle defining the boundaries of the physical medium 
            on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource.CropBox">
            <summary>
            Gets the rectangle defining the boundaries of the visible region of the page. 
            When the page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter">
            <summary>
            Represent a PDF page stream that writes page content directly to a given stream on Dispose method call.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.WriteContent(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource)">
            <summary>
            Writes the content of a <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageSource"/>.
            </summary>
            <param name="pdfPageSource">The PDF page source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.WriteContent(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Writes the content of a <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedPage"/>.
            </summary>
            <param name="page">The page instace.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.SaveContentPosition">
            <summary>
            Saves current content position and returns IDisposable action that restores the position when disposed.
            </summary>
            <returns>IDisposable action that restores the position when disposed.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.PageSize">
            <summary>
            Gets the size of the physical medium 
            on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.MediaBox">
            <summary>
            Gets the rectangle defining the boundaries of the physical medium 
            on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.CropBox">
            <summary>
            Gets the rectangle defining the boundaries of the visible region of the page. 
            When the page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.PageRotation">
            <summary>
            Gets the page rotation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfPageStreamWriter.ContentPosition">
            <summary>
            Gets or sets the current content position.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriterSettings">
            <summary>
            Represents settings for the produced PDF file stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriterSettings.#ctor(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings,Telerik.Windows.Documents.Fixed.Model.RadFixedDocumentInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriterSettings"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriterSettings.DocumentInfo">
            <summary>
            Gets the document information.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriterSettings.ImageQuality">
            <summary>
            Gets or sets the default image quality when exporting images to PDF. The default value is High.
            <para>
            The value of this property will be overriden when specifying the ImageQuality in ImageSource constructor or when creating ImageSource from EncodedImageData.
            The higher the quality, the bigger the document size.
            </para>
            </summary>
            <value>The image quality.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Streaming.PdfStreamWriterSettings.WriteAnnotations">
            <summary>
            Gets or sets boolean value indicating whether to write annotations.
            </summary>
            <value>Value indication whether to write annotations.</value>
        </member>
        <member name="F:JBig2Decoder.MMRDecoder.whiteTable1">
            white run lengths 
        </member>
        <member name="F:JBig2Decoder.MMRDecoder.blackTable1">
            black run lengths 
        </member>
        <member name="M:JBig2Decoder.JBIG2Bitmap.setPixel(System.Int64,System.Int64,JBig2Decoder.FastBitSet,System.Int64)">
                    private static void setPixel(int col, int row, FastBitSet data, int value) {
                        if (value == 1)
                            data.set(row, col);
                        else
                            data.clear(row, col);
                    }/*
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Actions.Action">
            <summary>
            Represents base class for action object.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder">
            <summary>
            Describes the settings which are used to determine how the border will appear in the document.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder.#ctor(System.Double,Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorderStyle,System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="style">The style.</param>
            <param name="dashArray">The dash array.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorder.DashArray">
            <summary>
            Gets or sets the dash array.
            </summary>
            <value>The dash array.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorderStyle">
            <summary>
            Describes the possible types for the style of the border.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorderStyle.Solid">
            <summary>
            Specifies that the border should be from one solid line.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorderStyle.Dashed">
            <summary>
            Specifies that the border should be from one dashed line.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorderStyle.Beveled">
            <summary>
            A simulated embossed rectangle that appearance to be raised above the surface of the page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorderStyle.Inset">
            <summary>
            A simulated engraved rectangle that appears to be recessed below the surface of the page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationBorderStyle.None">
            <summary>
            Specifies that no border should be applied on this element.
            Table cell borders will not inherit their value from the containing table.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics">
            <summary>
            Represents the characteristics of button Widget annotation dynamic appearance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics">
            <summary>
            Represents the characteristics of Widget annotation dynamic appearance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics.#ctor(Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics"/> class by copying its properties from other instance.
            </summary>
            <param name="other">Other <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics"/> instance.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics.Rotation">
            <summary>
            Gets or sets the rotation of the Widget appearance content within the annotation rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics.BorderColor">
            <summary>
            Gets or sets the border color. If null the border will be fully transparent.
            If not null, then only the R, G and B values are accounted and the alpha value is ignored.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics.Background">
            <summary>
            Gets or sets the annotation rectangle background color. If null the background will be fully transparent.
            If not null, then only the R, G and B values are accounted and the alpha value is ignored.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics.#ctor(Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics"/> class by copying its properties from other instance.
            </summary>
            <param name="other">Other <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics"/> instance.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.ButtonAppearanceCharacteristics.NormalCaption">
            <summary>
            Gets or sets the button normal caption displayed when the mouse is not interacting with the widget.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation">
            <summary>
            Represents base class for annotation object.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementBase">
            <summary>
            Represent base class for all fixed document elements.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.IFixedDocumentElement">
            <summary>
            Represents base interface for fixed document element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IFixedDocumentElement.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementBase.SetParent(Telerik.Windows.Documents.Fixed.Model.Common.IFixedDocumentElement)">
            <summary>
            Sets the parent.
            </summary>
            <param name="newParent">The new parent.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementBase.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementBase.ElementType">
            <summary>
            Gets the fixed document element type.
            </summary>
            <value>The fixed document element type.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation.Rect">
            <summary>
            Gets or sets the position of the annotation.
            </summary>
            <value>The rect.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation.Type">
            <summary>
            Gets the type of the annotation.
            </summary>
            <value>The type of the annotation.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation.Border">
            <summary>
            Gets or sets the annotation borders.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation.IsPrintable">
            <summary>
            Gets or sets boolean value indicating whether the annotation instance should be visualized when printing the document.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.SignatureWidget">
            <summary>
            Represents widget used by the signature annotation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget`1">
            <summary>
            Represents widget annotation with <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.DynamicAppearanceCharacteristics"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget">
            <summary>
            Represents a form field widget.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget.RecalculateContent">
            <summary>
            Recalculates the Widget <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource"/> content based on Widget text properties and dynamic appearance characteristics.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget.HighlightingMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget.TextProperties">
            <summary>
            Represents the text properties used by the PDF viewer in order to build the widget appearance dynamically.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget.Field">
            <summary>
            Gets or sets the parent field.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget.WidgetContentType">
            <summary>
            Gets the widget content type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget.Type">
            <summary>
            Gets the type of the annotation.
            </summary>
            <value>The type of the annotation.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget`1.AppearanceCharacteristics">
            <summary>
            Gets or sets the appearance characteristics used by a PDF viewer to construct the widget appearance dynamically.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.SignatureWidget.RecalculateContent">
            <summary>
            Recalculates the Widget <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource"/> content based on Widget text properties and dynamic appearance characteristics.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.SignatureWidget.WidgetContentType">
            <summary>
            Gets the widget content type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.SignatureWidget.Content">
            <summary>
            Gets the source defining the visual content of the widget.
            This content is with bigger priority compared to Widget appearance characteristics and text properties and it is visualized by default when opening the exported document in some PDF viewer.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.HighlightingMode">
            <summary>
            Represents the effect to be applied to widget appearance when the annotation is highlighted.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.HighlightingMode.NoHighlighting">
            <summary>
            No highlighting should be applied.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.HighlightingMode.InvertContentOfAnnotationRectangle">
            <summary>
            The content of the annotation rectangle should be inverted.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.HighlightingMode.InvertBorderOfAnnotationRectangle">
            <summary>
            The border of the annotation rectangle should be inverted.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.HighlightingMode.UseAnnotationDownAppearance">
            <summary>
            The annotation source for MouseDown state should be used.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition">
            <summary>
            Represents the relative positioning between button icon and caption.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition.NoIconCaptionOnly">
            <summary>
            No icon will be displayed and only the caption will be drawn.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition.NoCaptionIconOnly">
            <summary>
            No caption will be displayed and only the icon will be drawn.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition.CaptionBelowIcon">
            <summary>
            The caption will be positioned below the icon.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition.CaptionAboveIcon">
            <summary>
            The caption will be positioned above the icon.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition.CaptionToRightOfIcon">
            <summary>
            The caption will be position right of the icon.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition.CaptionToLeftOfIcon">
            <summary>
            The caption will be positioned left of the icon.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconAndCaptionPosition.CaptionOverIcon">
            <summary>
            The caption will be positioned over the icon.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions">
            <summary>
            Represents options specifying how to fit the button icon inside the annotation rectangle.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions.ScaleCondition">
            <summary>
            Gets or sets the conditions specifying when the icon should be scaled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions.ScalingType">
            <summary>
            Gets or sets the type of the scaling.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions.BlankSpaceFromTheLeftSide">
            <summary>
            Gets or sets the percent of the blank space from the left side compared to the whole horizontal blank space occured after a proportional scaling operation.
            The value must be in range between 0 and 1. The default value is 0.5 meaning that the left and right blank spaces are equal and the icon should be centered horizontally after the scaling.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions.BlankSpaceFromTheBottomSide">
            <summary>
            Gets or sets the percent of the blank space from the bottom side compared to the whole vertical blank space occured after a proportional scaling operation.
            The value must be in range between 0 and 1. The default value is 0.5 meaning that the bottom and top blank spaces are equal and the icon should be centered vertically after the scaling.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.IconFitOptions.IgnoreBorderWidth">
            <summary>
            Gets or sets boolean value indicating whether to ignore annotation border thickness when making the icon fit calculations.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScalingType">
            <summary>
            Represents the icon scaling types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScalingType.FitExactly">
            <summary>
            The icon should be scaled to fit the annotation rectangle ignoring the original icon sides ratio.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScalingType.Proportional">
            <summary>
            The icon should be scaled to fit inside the annotation rectangle preserving the original icon sides ratio.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics">
            <summary>
            Represents the characteristics of а PushButton Widget annotation dynamic appearance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.#ctor(Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics"/> class by copying its properties from other instance.
            </summary>
            <param name="other">Other <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics"/> instance.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.MouseOverCaption">
            <summary>
            Gets or sets the button caption displayed when the mouse is over the widget.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.MouseDownCaption">
            <summary>
            Gets or sets the button caption displayed when the mouse button is pressed on the widget.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.NormalIconSource">
            <summary>
            Gets or sets the button normal icon displayed when the mouse is not interacting with the widget.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.MouseOverIconSource">
            <summary>
            Gets or sets the button icon displayed when the mouse is over the widget.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.MouseDownIconSource">
            <summary>
            Gets or sets the button icon displayed when the mouse button is pressed on the widget.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.IconFitOptions">
            <summary>
            Gets the options specifying how fit the icon inside the annotation rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonAppearanceCharacteristics.IconAndCaptionPosition">
            <summary>
            Gets or sets the relative positioning of icon and caption in the button appearance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonWidget">
            <summary>
            Represetns a push button widget.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonWidget.RecalculateContent">
            <summary>
            Recalculates the Widget <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource"/> content based on Widget text properties and dynamic appearance characteristics.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonWidget.WidgetContentType">
            <summary>
            Gets the widget content type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.PushButtonWidget.Content">
            <summary>
            Gets the source defining the visual content of the widget.
            This content is with bigger priority compared to Widget appearance characteristics and text properties and it is visualized by default when opening the exported document in some PDF viewer.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScaleCondition">
            <summary>
            Represents the conditions by which the button icon will be scaled in Annotation rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScaleCondition.AlwaysScale">
            <summary>
            Always scale the icon.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScaleCondition.ScaleIfBiggerThanAnnotationRectangle">
            <summary>
            Scale the icon if it is bigger than Annotation Rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScaleCondition.ScaleIfSmallerThanAnnotationRectangle">
            <summary>
            Scale the icon if it is smaller than Annotation Rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.IconScaleCondition.NeverScale">
            <summary>
            Never scale the icon.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.RadioButtonWidget">
            <summary>
            Represents the radio button widget.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonWidget">
            <summary>
            Represents widget that has ON and OFF states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonWidget.RecalculateContent">
            <summary>
            Recalculates the Widget <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource"/> content based on Widget text properties and dynamic appearance characteristics.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonWidget.WidgetContentType">
            <summary>
            Gets the widget content type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonWidget.OnStateContent">
            <summary>
            Represents the content source displayed when the widget is in its ON state. 
            This content is with bigger priority compared to Widget appearance characteristics and text properties and it is visualized by default when opening the exported document in some PDF viewer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonWidget.OffStateContent">
            <summary>
            Represents the content source displayed when the widget is in its OFF state.
            This content is with bigger priority compared to Widget appearance characteristics and text properties and it is visualized by default when opening the exported document in some PDF viewer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.RadioButtonWidget.Option">
            <summary>
            Gets the option that is represented by the widget.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonTemplateCaptions">
            <summary>
            Represents a set of constants corresponding to the button normal captions for <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonWidget"/> with font ZapfDingbats.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonTemplateCaptions.Check">
            <summary>
            The check button template caption.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonTemplateCaptions.Circle">
            <summary>
            The circle button template caption.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonTemplateCaptions.Cross">
            <summary>
            The cross button template caption.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonTemplateCaptions.Diamond">
            <summary>
            The diamond button template caption.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonTemplateCaptions.Square">
            <summary>
            The square button template caption.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.TwoStatesButtonTemplateCaptions.Star">
            <summary>
            The star button template caption.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.VariableContentWidget">
            <summary>
            Represents widget that has variable content generated dynamically while interacting with the widget in a PDF viewer.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.VariableContentWidget.RecalculateContent">
            <summary>
            Recalculates the Widget <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource"/> content based on Widget text properties and dynamic appearance characteristics.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.VariableContentWidget.WidgetContentType">
            <summary>
            Gets the widget content type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.VariableContentWidget.Content">
            <summary>
            The content used to initially visualize the Widget appearance in a PDF viewer. 
            This content is with bigger priority compared to Widget appearance characteristics and text properties and it is visualized by default when opening the exported document in some PDF viewer.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource">
            <summary>
            Represents the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource"/> instances used for displaying the widget content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource.NormalContentSource">
            <summary>
            Gets or sets the normal content source displayed when the mouse is not interacting with the widget.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource.MouseDownContentSource">
            <summary>
            Gets or sets the content source displayed when the mouse button is pressed on the widget.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationContentSource.MouseOverContentSource">
            <summary>
            Gets or sets the content source displayed when the mouse is over the widget.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.WidgetContentType">
            <summary>
            Represents the widget content types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.WidgetContentType.VariableContent">
            <summary>
            The variable content type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.WidgetContentType.TwoStatesContent">
            <summary>
            The content type for widgets that have two states.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.WidgetContentType.SignatureContent">
            <summary>
            The content type for signature widget.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.WidgetContentType.PushButtonContent">
            <summary>
            The content type for push button widget.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceBase.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.CalGray.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.CalRgb.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames">
            <summary>
            Represents the color space names.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.CalRgb">
            <summary>
            The CalRGB color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.CalGray">
            <summary>
            The CalGray color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.Lab">
            <summary>
            The Lab color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.IccBased">
            <summary>
            The ICCBased color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.DeviceRgb">
            <summary>
            The DeviceRGB color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.DeviceCmyk">
            <summary>
            The DeviceCMYK color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.DeviceGray">
            <summary>
            The DeviceGray color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.Separation">
            <summary>
            The Separation color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.DeviceN">
            <summary>
            The DeviceN color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.Indexed">
            <summary>
            The Indexed color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorSpaceNames.Pattern">
            <summary>
            The Pattern color space.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.DeviceCmyk.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.DeviceGray.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.DeviceN.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop">
            <summary>
            Represents gradient stop.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop.#ctor(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.SimpleColor,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop"/> class.
            </summary>
            <param name="color">The color.</param>
            <param name="offset">The offset. This value can be between 0 and 1.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop.Offset">
            <summary>
            Gets the offset. The value can be between 0 and 1.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection">
            <summary>
            Represents gradient stop collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.IndexOf(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop)">
            <summary>
            Indexes the of.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.Insert(System.Int32,Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item
            at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.
            </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" />
            is read-only.</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.Add(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" />
            is read-only. </exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.Contains(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop)">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.CopyTo(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.Remove(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can
            be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be
            used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" />
            is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" />
            is read-only; otherwise, false.</returns>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStopCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.GradientStop"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.IccBased.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Lab.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.PaintType">
            <summary>
            Represents paint type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.PaintType.Colored">
            <summary>
            Colored tiling.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.PaintType.Uncolored">
            <summary>
            Tiling without color.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RadialGradient">
            <summary>
            Represents radial gradient.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient">
            <summary>
            Represents base class for gradient color.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.PatternColor">
            <summary>
            Represents base class for Pattern color
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase">
            <summary>
            Represents color.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase.Equals(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.PatternColor.#ctor">
            <summary>
            Creates new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.PatternColor"/> class. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.PatternColor.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.#ctor(System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.#ctor(System.Windows.Point,System.Windows.Point,Telerik.Windows.Documents.Fixed.Model.Data.IPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient"/> class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.Equals(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <value>The start point.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>The end point.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.ExtendBefore">
            <summary>
            Specifies if the gradient should extends before the start point.
            </summary>
            <value>The extend before.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.ExtendAfter">
            <summary>
            Specifies if the gradient should extends after the end point.
            </summary>
            <value>True to extend.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.Background">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The background color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.GradientStops">
            <summary>
            Gets the gradient stops.
            </summary>
            <value>The gradient stops.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Gradient.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RadialGradient.#ctor(System.Windows.Point,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RadialGradient"/> class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="startRadius">The start radius.</param>
            <param name="endRadius">The end radius.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RadialGradient.Equals(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RadialGradient.StartRadius">
            <summary>
            Gets or sets the start radius.
            </summary>
            <value>The start radius.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RadialGradient.EndRadius">
            <summary>
            Gets or sets the end radius.
            </summary>
            <value>The end radius.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.LinearGradient">
            <summary>
            Represents linear gradient.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.LinearGradient.#ctor(System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.LinearGradient"/> class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.LinearGradient.Equals(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Pattern.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Separation.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.SimpleColor">
            <summary>
            Represents simple color
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase">
            <summary>
            Represents tiling base.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement">
            <summary>
            Represents the base interface for the root of the content elements tree.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.IContainerElement">
            <summary>
            Represents base interface for container element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IContainerElement.Content">
            <summary>
            Gets the content for the element.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement.SupportsAnnotations">
            <summary>
            Gets if the element supports annotations.
            </summary>
            <value>True if the element supports annotations.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement.Annotations">
            <summary>
            Gets the annotations collection.
            </summary>
            <value>The annotations collection.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.TilingType">
            <summary>
            Gets or sets the type of the tiling.
            </summary>
            <value>The type of the tiling.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.VerticalSpacing">
            <summary>
            Gets or sets the vertical spacing.
            </summary>
            <value>The vertical spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
            <value>The bounding box.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.HorizontalSpacing">
            <summary>
            Gets or sets the horizontal spacing.
            </summary>
            <value>The horizontal spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.Content">
            <summary>
            Gets the content for the element.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.SupportsAnnotations">
            <summary>
            Gets if the element supports annotations.
            </summary>
            <value>True if the element supports annotations.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase.Annotations">
            <summary>
            Gets the annotations collection.
            </summary>
            <value>The annotations collection.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingType">
            <summary>
            Represents tiling type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingType.AllowSmallDistortion">
            <summary>
            Allows small distortion.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingType.NoDistortion">
            <summary>
            Does not allow any distortion.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingType.FastTiling">
            <summary>
            Allows additional distortion which permits faster tiling.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling">
            <summary>
            Represents tiling.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.#ctor(System.Windows.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling"/> class.
            </summary>
            <param name="boundingBox">The bounding box.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.#ctor(Telerik.Windows.Documents.Fixed.Model.Data.IPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling"/> class.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.#ctor(System.Windows.Rect,Telerik.Windows.Documents.Fixed.Model.Data.IPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling"/> class.
            </summary>
            <param name="boundingBox">The bounding box.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.Equals(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.Content">
            <summary>
            Gets the content for the element.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.VerticalSpacing">
            <summary>
            Gets or sets the vertical spacing.
            </summary>
            <value>The vertical spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.HorizontalSpacing">
            <summary>
            Gets or sets the horizontal spacing.
            </summary>
            <value>The horizontal spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
            <value>The bounding box.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling.TilingType">
            <summary>
            Gets or sets the type of the tiling.
            </summary>
            <value>The type of the tiling.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling">
            <summary>
            Represents uncolored tiling.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.#ctor(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Tiling,Telerik.Windows.Documents.Fixed.Model.ColorSpaces.SimpleColor)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling"/> class.
            </summary>
            <param name="tiling">The tiling.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.Equals(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.Tiling">
            <summary>
            Gets the tiling.
            </summary>
            <value>The tiling.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.Content">
            <summary>
            Gets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
            <value>The bounding box.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.HorizontalSpacing">
            <summary>
            Gets or sets the horizontal spacing.
            </summary>
            <value>The horizontal spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.VerticalSpacing">
            <summary>
            Gets or sets the vertical spacing.
            </summary>
            <value>The vertical spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.UncoloredTiling.TilingType">
            <summary>
            Gets or sets the type of the tiling.
            </summary>
            <value>The type of the tiling.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.PageMode">
            <summary>
            An enumeration specifying how the document should be displayed when opened.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.PageMode.UseNone">
            <summary>
            None page mode is specified.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.PageMode.UseBookmarks">
            <summary>
            Document bookmarks visible.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Common.PdfProperty`1.#ctor(System.Func{`0})">
            <summary>
            Initialize property with default value getter.
            </summary>
            <param name="getDefaultValue">Default value getter allowing to get the default value on demand only.</param>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Data.ImageFormat">
            <summary>
            Represents image format.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Data.ImageFormat.Jpeg">
            <summary>
            Represents Jpeg image format.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Data.IPosition">
            <summary>
            Represents IPosition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.Scale(System.Double,System.Double)">
            <summary>
            Appends the specified scale vector.
            </summary>
            <param name="scaleX">The scale X.</param>
            <param name="scaleY">The scale Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies a scale by the specified amount about the specified point.
            </summary>
            <param name="scaleX">The scale X.</param>
            <param name="scaleY">The scale Y.</param>
            <param name="centerX">The center X.</param>
            <param name="centerY">The center Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.Rotate(System.Double)">
            <summary>
            Applies a rotation of the specified angle about the origin.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.RotateAt(System.Double,System.Double,System.Double)">
            <summary>
            Rotates this matrix about the specified point.
            </summary>
            <param name="angle">The angle.</param>
            <param name="centerX">The center X.</param>
            <param name="centerY">The center Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.Translate(System.Double,System.Double)">
            <summary>
            Appends a translation of the specified offsets.
            </summary>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Data.IPosition.Matrix">
            <summary>
            Gets the matrix.
            </summary>
            <value>The matrix.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.PositionStack.SavePosition">
            <summary>
            Saves the position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.PositionStack.RestorePosition">
            <summary>
            Restores the position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Data.PositionStack.Position">
            <summary>
            Gets or sets the current position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ByteArraySourceStream">
            <summary>
             Defines a class used for reading a document source in a byte array format.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ISourceStream">
            <summary>
            Defines an interface used for reading a document source.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ISourceStream.Read(System.Byte[],System.Int32,System.Int64,System.Int32)">
            <summary>
            Reads the specified output buffer.
            </summary>
            <param name="outputBuffer">The output buffer.</param>
            <param name="outputBufferPosition">The output buffer position.</param>
            <param name="streamOffset">The stream offset.</param>
            <param name="length">The length.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ByteArraySourceStream.Read(System.Byte[],System.Int32,System.Int64,System.Int32)">
            <summary>
            Reads the specified output buffer.
            </summary>
            <param name="outputBuffer">The output buffer.</param>
            <param name="outputBufferPosition">The output buffer position.</param>
            <param name="streamOffset">The stream offset.</param>
            <param name="length">The length.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.FileSourceStream">
            <summary>
            Defines a class used for reading a document source in a <see cref="T:System.IO.Stream"/> format.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.FileSourceStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.FileSourceStream"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.FileSourceStream.Read(System.Byte[],System.Int32,System.Int64,System.Int32)">
            <summary>
             Reads a reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="outputBuffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (streamOffset + length - 1) replaced by
            the bytes read from the current source.
            </param>
            <param name="outputBufferPosition">The zero-based byte offset in outputBuffer at which to begin storing the data read from the current stream.</param>
            <param name="streamOffset">The zero-based byte offset in buffer at which to begin read from the current stream.</param>
            <param name="length">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.HashAlgorithmsManager">
            <summary>
            Defines a hash algorithm factory.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.HashAlgorithmsManager.CreateHashAlgorithm(System.Security.Cryptography.Oid)">
            <summary>
            Creates an instance of a predefined hash algorithm class from an Oid.
            </summary>
            <param name="algorithmOid">The algorithm oid.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.HashAlgorithmsManager.RegisterHashAlgorithm(System.Security.Cryptography.Oid,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Registers a hash algorithm.
            </summary>
            <param name="oid">The oid.</param>
            <param name="hashAlgorithm">The hash algorithm.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.HashAlgorithmsManager.HasRegisteredHashAlgorithm(System.Security.Cryptography.Oid)">
            <summary>
            Determines whether the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.HashAlgorithmsManager"/> contains a definition of a hash algorithm for the specificied Oid.
            </summary>
            <param name="oid">The oid.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.HashAlgorithmsManager.UnregisterHashAlgorithm(System.Security.Cryptography.Oid)">
            <summary>
            Unregisters a hash algorithm.
            </summary>
            <param name="oid">The oid.</param>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureOids">
            <summary>
            Defines a predefined Oids used in the digital signature.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureOids.GetMainAlgorithmOid(System.Security.Cryptography.Oid)">
            <summary>
            Gets the main algorithm oid.
            </summary>
            <param name="oid">The oid.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs1">
            <summary>
            Defines a class used for handling the validation of digital signature in a PKCS#1 cryptographic message syntax.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase">
            <summary>
            Defines a base class with the most basic need of functionality used for digital signature validaiton.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.ValidateOverride(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties,Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties)">
            <summary>
             When overridden in a derived class, validates the digital signature.
            </summary>
            <param name="dataProperties"></param>
            <param name="validationProperties"></param>
            <returns>An instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class describing the result from the validation.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.Validate(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties,Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties)">
            <summary>
            Validates a digital signature.
            </summary>
            <returns>An instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class describing the result from the validation.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.ComputeHash(System.Security.Cryptography.Oid)">
            <summary>
            Computes a hash.
            </summary>
            <param name="hashAlgorithmOid">The hash algorithm oid.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.ComputeHash(System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Computes a hash.
            </summary>
            <param name="hashAlgorithm">The hash algorithm.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.GetByteArrayCompositionForHash">
            <summary>
            Gets the byte array over which the hash should be computed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.GetSourceParts">
            <summary>
            Gets a collection from a <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SourcePart"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.ValidateHash(System.Byte[],System.Security.Cryptography.Oid)">
            <summary>
            Validates the hash.
            </summary>
            <param name="originalHash">The original hash.</param>
            <param name="hashAlgorithmOid">The hash algorithm oid used for computing a comparing hash.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.ValidateHash(System.Byte[],System.Byte[])">
            <summary>
            Validates the hash.
            </summary>
            <param name="originalHash">The original hash.</param>
            <param name="computedHash">The computed hash.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.ValidateCertificates(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>
             Validates the certificates and builds the corresponding data into the validation result.
            </summary>
            <param name="validationResultBuilder">The validation result builder.</param>
            <param name="certificateCollection">The certificate collection.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.SetResultHashAlgorithm(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder,System.Security.Cryptography.Oid)">
            <summary>
            Builds the hash algorithm into the the validation result argument.
            </summary>
            <param name="validationResultBuilder">The validation result builder.</param>
            <param name="digestAlgorithm">The digest algorithm.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.DataProperties">
            <summary>
            Gets the signature data properties.
            </summary>
            <value>The signature data properties.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase.ValidationProperties">
            <summary>
            Gets the signature validation properties.
            </summary>
            <value>The signature validation properties.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs1"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs1.ValidateOverride(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties,Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties)">
            <summary>
            When overridden in a derived class, validates the digital signature.
            </summary>
            <param name="dataProperties"></param>
            <param name="validationProperties"></param>
            <returns>
            An instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class describing the result from the validation.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7">
            <summary>
            Defines a class used for handling the validation of digital signature in a PKCS#7 cryptographic message syntax.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7.ValidateOverride(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties,Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties)">
            <summary>
            When overridden in a derived class, validates the digital signature.
            </summary>
            <param name="dataProperties"></param>
            <param name="validationProperties"></param>
            <returns>
            An instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class describing the result from the validation.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7Detached">
            <summary>
            Defines a class used for handling the validation of digital signature in a PKCS#7 cryptographic message syntax with detached signature.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7Detached.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7Detached"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Pkcs7Detached.ValidateOverride(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties,Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties)">
            <summary>
            When overridden in a derived class, validates the digital signature.
            </summary>
            <param name="dataProperties"></param>
            <param name="validationProperties"></param>
            <returns>
            An instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class describing the result from the validation.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature">
            <summary>
            Defines a class used for signing and verifying a digital signature.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature"/> class.
            </summary>
            <param name="certificate">The certificate used for signing the signature.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.TryValidate(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult@)">
            <summary>
            Tries to validate the signature. Return <c>true</c> on success; otherwise <c>false</c>.
            </summary>
            <param name="validationResult">When this method returns, contains the signature validation result.</param>
            <returns>Return <c>true</c> on success; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.TryValidate(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties,Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult@)">
            <summary>
            Tries to validate the signature. Return <c>true</c> on success; otherwise <c>false</c>.
            </summary>
            <param name="validationProperties">The validation properties.</param>
            <param name="validationResult">When this method returns, contains the signature validation result.</param>
            <returns>Return <c>true</c> on success; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.Validate">
            <summary>
            Validates this digital signature instance.
            </summary>
            <returns>An instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.Validate(Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties)">
            <summary>
            Validates this digital signature instance with specified validation properties.
            </summary>
            <param name="validationProperties">The validation properties.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.Properties">
            <summary>
            Gets or sets the signature data properties.
            </summary>
            <value>The signature data properties.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.Signature.SupportsValidation">
            <summary>
            Gets a value indicating whether the signature supports validation. Only imported signatures supports validation.
            </summary>
            <value><c>true</c> if the signature is imported; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties">
            <summary>
             Defines a set of data properties represending a digital signature.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.FieldName">
            <summary>
            Gets the name of the signature form field associated with this properties.
            </summary>
            <value>The name of the signature form field.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.Filter">
            <summary>
            Gets the name of the preferred signature handler to use when validating this signature.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.SubFilter">
            <summary>
            Gets a name that describes the encoding of the signature value and key information in the signature dictionary.
            </summary>
            <value>The sub filter.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.Contents">
            <summary>
            Gets the signature value.
            </summary>
            <value>The contents.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.Certificates">
            <summary>
            Gets a collection of X.509 certificate chain used when signing and verifying signatures.
            </summary>
            <value>The certificates.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.ByteRange">
            <summary>
            Gets an array of pairs of integers (starting byte offset, length in bytes) describing the exact byte range for the digest calculation.
            </summary>
            <value>The byte range.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.Changes">
            <summary>
            Gets an array of three integers specifying changes to the document that have been made between the previous signature and this signature.
            </summary>
            <value>The changes.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.Name">
            <summary>
            Gets the name of the person or authority signing the document.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.Location">
            <summary>
            Gets the CPU host name or physical location of the signing.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.Reason">
            <summary>
            Gets the reason for the signing.
            </summary>
            <value>The reason.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.ContactInfo">
            <summary>
            Gets contact information enabling a recipient to contact the signer to verify the signature.
            </summary>
            <value>The contact info.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.SignatureHandlerVersion">
            <summary>
            Gets the version of the signature handler used to create the signature.
            </summary>
            <value>The signature handler version.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.SignatureDictionaryVersion">
            <summary>
            Gets the version of the signature dictionary format.
            </summary>
            <value>The signature dictionary version.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureDataProperties.TimeOfSigning">
            <summary>
            Gets or sets the time of signing.
            </summary>
            <value>The time of signing.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureSubFilterNames">
            <summary>
            Defines a class with predefined constants for sub filter strings.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureSubFilterNames.ADBE_X509_RSA_SHA1">
            <summary>
            Gets the name of the x509 rsa sha1 sub filter.
            </summary>
            <value>Sub filter.</value>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureSubFilterNames.ADBE_PKCS7_SHA1">
            <summary>
            Gets the name of the pkcs7 sub filter.
            </summary>
            <value>Sub filter.</value>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureSubFilterNames.ADBE_PKCS7_DETACHED">
            <summary>
            Gets the name of the pkcs7 detached sub filter.
            </summary>
            <value>Sub filter.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlersManager">
            <summary>
            Defines a digital signature validation handlers manager.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlersManager.RegisterHandler(System.String,Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlerBase)">
            <summary>
            Registers the signature validation handler.
            </summary>
            <param name="subFilter">The sub filter.</param>
            <param name="validationHandler">The instantiate func.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlersManager.UnregisterHandler(System.String)">
            <summary>
            Unregisters the signature validation handler.
            </summary>
            <param name="subFilter">The sub filter.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlersManager.HasRegisteredHandler(System.String)">
            <summary>
            Determines whether the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlersManager"/> contains a definition of a signature handler for the specified sub filter.
            </summary>
            <param name="subFilter">The sub filter.</param>
            <returns>
            <c>true</c> if <paramref name="subFilter"/> is found in the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlersManager"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationHandlersManager.GetHandler(System.String)">
            <summary>
            Instantiates a signature validation handler.
            </summary>
            <param name="subFilter">The sub filter.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties">
            <summary>
             Defines a set of properties used to validate the certificates of the digital signature.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties.Chain">
            <summary>
            Gets or sets the chain used to validate the certificate that signed the digital signature.
            </summary>
            <value>The chain.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationProperties.ChainStatusFlags">
            <summary>
            Gets or sets the chain status flags which describes the used signature certificate as invalid.
            </summary>
            <value>The chain status flags.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult">
            <summary>
            Defines a set of properties describing the result from the digital signatire validation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.FieldName">
            <summary>
            Gets or sets the name of the signature form field associated with this validation result.
            </summary>
            <value>The name of the signature form field.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.IsDocumentModified">
            <summary>
            Gets or sets a value indicating whether the document was modified after it was signed.
            </summary>
            <value>
            <c>true</c> if the document was modified; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.IsCertificateValid">
            <summary>
            Gets or sets a value indicating whether the used certificate is valid. For additional details when the certificate is invalid use the CertificatesChainElements property.
            </summary>
            <value>
            <c>true</c> if the used certificate is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.Certificates">
            <summary>
            Gets or sets the certificates used to sign the document.
            </summary>
            <value>The certificates used to sign the document.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.CertificatesChainElements">
            <summary>
            Gets or sets a collection of chain elements describing the errors from the certificate validation.
            </summary>
            <value>A collection of chain elements.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.SignerInformation">
            <summary>
            Gets or sets the signer information. The name of the person or authority signing the document.
            </summary>
            <value>The signer information.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult.HashAlgorithm">
            <summary>
            Gets or sets the hash algorithm Oid used for calculating the message digest.
            </summary>
            <value>The hash algorithm Oid.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder">
            <summary>
            Defines a class used to construct an instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.BuildFieldName(System.String)">
            <summary>
            Builds the name of the signature form field.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.BuildIsDocumentModified(System.Boolean)">
            <summary>
            Builds the is document modified.
            </summary>
            <param name="isDocumentModified">if set to <c>true</c> [is document modified].</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.BuildIsCertificateValid(System.Boolean)">
            <summary>
            Builds the is certificate valid.
            </summary>
            <param name="isCertificateValid">if set to <c>true</c> [is certificate valid].</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.BuildCertificates(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>
            Builds the certificates.
            </summary>
            <param name="certificates">The certificates.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.BuildCertificatesChainElements(System.Security.Cryptography.X509Certificates.X509ChainElementCollection)">
            <summary>
            Builds the certificates chain elements.
            </summary>
            <param name="certificatesChainElements">The certificates chain elements.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.BuildSignerInformation(System.String)">
            <summary>
            Builds the signer information.
            </summary>
            <param name="signerInformation">The signer information.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.BuildHashAlgorithm(System.Security.Cryptography.Oid)">
            <summary>
            Builds the hash algorithm.
            </summary>
            <param name="hashAlgorithm">The hash algorithm.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResultBuilder.GetResult">
            <summary>
            Gets the signature validation result.
            </summary>
            <returns>An instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SignatureValidationResult"/> class.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SourcePart">
            <summary>
            Defines a class used for determining what part of a <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ISourceStream"/> should be read.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SourcePart.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SourcePart"/> class.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SourcePart.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SourcePart.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ByteRangeComposer">
            <summary>
            Defines a class used for composing a byte range from a specified multiple <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.SourcePart"/> instances of a <see cref="T:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ISourceStream"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ByteRangeComposer.Compose">
            <summary>
            Composes the byte range.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DigitalSignatures.ByteRangeComposer.Length">
            <summary>
            Gets the calculated length from all source parts.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.DocumentUnhandledExceptionEventArgs">
            <summary>
            Represents data for unhandled exception event related to <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.DocumentUnhandledExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.DocumentUnhandledExceptionEventArgs"/> class.
            </summary>
            <param name="exception">The document exception.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DocumentUnhandledExceptionEventArgs.Exception">
            <summary>
            Gets the raised exception.
            </summary>
            <value>The document exception.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.DocumentUnhandledExceptionEventArgs.Handled">
            <summary>
            Gets or sets whether the exception event has been handled.
            </summary>
            <value>true if the exception was handled; otherwise, false.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.CollectionBase`1">
            <summary>
            Defines a base collection class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.CollectionBase`1.Add(`0)">
            <summary>
            Adds the specified item to the collection.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.CollectionBase`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can
            be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.CollectionBase`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be
            used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.CollectionBase`1.Count">
            <summary>
            Gets the collection items count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.CollectionBase`1.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <value>The element.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.WatermarkSettingsBase">
            <summary>
            Represents a base class for the watermark settings classes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.WatermarkSettingsBase.Width">
            <summary>
            Gets or sets the width of the watermark element.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.WatermarkSettingsBase.Height">
            <summary>
            Gets or sets the height of the watermark element.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.WatermarkSettingsBase.Angle">
            <summary>
            Gets or sets the angle of the watermark element towards the horizontal direction.
            </summary>
            <value>The angle.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ImageWatermarkSettings.ImageSource">
            <summary>
            Gets or sets the source of the image.
            </summary>
            <value>The source of the image.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopLeader">
            <summary>
            Defines tab stop leader types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopLeader.None">
            <summary> 
            No tab stop leader type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopLeader.Dot">
            <summary> 
            Dot tab stop leader type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopLeader.Hyphen">
            <summary> 
            Hyphen tab stop leader type. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopLeader.Underscore">
            <summary>
            Underscore tab stop leader type. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopLeader.MiddleDot">
            <summary> 
            MiddleDot tab stop leader type.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopType">
            <summary>
            Defines tab stop types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopType.Left">
            <summary> 
            Left aligned tab. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopType.Center">
            <summary> 
            Center aligned tab. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopType.Right">
            <summary> 
            Right aligned tab. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopType.Decimal">
            <summary> 
            Decimal tab stop. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopType.Bar">
            <summary> 
            Specifies that the current tab is a bar tab. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TabStopType.Clear">
            <summary> 
            Clears an inherited tab stop.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TextWatermarkSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TextWatermarkSettings"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TextWatermarkSettings.TrySetFont(System.Windows.Media.FontFamily)">
            <summary>
            Tries to set the current font.
            </summary>
            <param name="fontFamily">The font family.</param>
            <returns>True if succeeded.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TextWatermarkSettings.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TextWatermarkSettings.Font">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TextWatermarkSettings.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the text.
            </summary>
            <value>The the foreground color.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.HeightType">
            <summary>
            Specifies type of height.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.HeightType.Auto">
            <summary>
            Automatically determined height.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.HeightType.AtLeast">
            <summary>
            Minimum height.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.HeightType.Exact">
            <summary>
            Exact height.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Layout.LayoutElementBase">
            <summary>
            Represents layout element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Layout.LayoutElementBase.Width">
            <summary>
            Gets the element width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Layout.LayoutElementBase.Height">
            <summary>
            Gets the element height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Fonts.FontBase">
            <summary>
            Represents the base class for the font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontBase.Name">
            <summary>
            Gets the name of the font.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontBase.ActualFontSource">
            <summary>
            The <see cref="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontBase.FontSource"/> or a fallback <see cref="T:Telerik.Windows.Documents.Core.Fonts.FontSource"/> used when rendering the glyph outlines.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.AcroForm">
            <summary>
            Represents an interactive form instance specific for each <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument"/> instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.AcroForm.FormFields">
            <summary>
            Represents the form fields
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.AcroForm.ViewersShouldRecalculateWidgetAppearances">
            <summary>
            Gets or sets boolean value indicating whether the Widget appearances should be recalculated before visualizing them in a PDF viewer.
            If true then the PDF viewers should dynamically reconstruct all widgets content based on widget text properties and appearance characteristics.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField">
            <summary>
            Represents a checkbox field.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField`1">
            <summary>
            Represents FormField providing a collection of type specific widgets.
            </summary>
            <typeparam name="T">The widget type.</typeparam>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField">
            <summary>
            Represents a form field.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField"/>. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
            <exception cref="T:System.ArgumentException">Name cannot contain .(period).</exception>
            <exception cref="T:System.ArgumentNullException">Name cannot be empty.</exception>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.TextProperties">
            <summary>
            Represents the text properties used by the PDF viewer in order to build the fields appearance dynamically.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.UserInterfaceName">
            <summary>
            Gets or sets an alternate field name to be used in place of the actual field name wherever the field must be identified in the user interface.
            For instance this may be used for error or status messages referring to the field. 
            This text is also useful when extracting the document’s contents in support of accessibility to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form field data from the document.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.IsReadOnly">
            <summary>
            Gets or sets boolean value indicating whether the field is readonly.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.IsRequired">
            <summary>
            Gets or sets boolean value indicating whether the field must have value at the time it is exported by submitting the form.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.ShouldBeSkipped">
            <summary>
            Gets or sets boolean value indicating whether the field should be skipped when submitting the form.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField.Widgets">
            <summary>
            Gets the widgets.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField`1.Widgets">
            <summary>
            Gets the widgets.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField.IsChecked">
            <summary>
            Gets or sets a boolean value indicating whether the field is checked or not.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField.IsCheckedByDefault">
            <summary>
            Gets or sets a boolean value indicating whether the check box should be checked when the form is reset to its default values.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField.ExportValue">
            <summary>
            Gets or sets the field export values.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceField">
            <summary>
            Represents a choice field.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceField.Options">
            <summary>
            Gets the collection of options to choose.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceField.ShouldCommitOnSelectionChange">
            <summary>
            Gets or sets boolean value indicating whether to submit the newly selected value on selection change.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceOption">
            <summary>
            Represents an option in a choice field.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionBase">
            <summary>
            Represents a field option.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionBase.Value">
            <summary>
            Gets or sets the option value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceOption.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceOption"/> class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceOption.Value">
            <summary>
            Gets or sets the option value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceOption.UserInterfaceValue">
            <summary>
            Gets or set the value that will be displayed in the UI.
            If this property is null then the Value property will be displayed in the UI instead.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceOptionCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ChoiceOption"/> instances.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1">
            <summary>
            Represents a collection of field options.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1.Add(`0)">
            <summary>
            Adds option.
            </summary>
            <param name="option">The option.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes option at specified index.
            </summary>
            <param name="index">The option index.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1.GetEnumerator">
            <summary>
            Iterates the options in the collection.
            </summary>
            <returns>The options.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Iterates the options in the collection.
            </summary>
            <returns>The options.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FieldOptionCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <returns>The number of elements contained in the collection.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField">
            <summary>
            Represents a combobox field.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField.HasEditableTextBox">
            <summary>
            Gets or sets boolean value indicating whether combo box should have an additional text box for choice input.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField.ShouldSpellCheck">
            <summary>
            Gets or sets boolean value indicating whether the inputted text should be spell checked.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField.Value">
            <summary>
            Gets or set the field value. 
            This value may differ from all choice values when it is inputed from the editable  text box.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField.DefaultValue">
            <summary>
            Gets or set the default value used when the form is reset to its default values.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CombTextBoxField">
            <summary>
            Represents a text field which restricts its text input to equally spaced character positions.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextField">
            <summary>
            Represents a text field.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextField.Value">
            <summary>
            Gets or sets the field value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextField.DefaultValue">
            <summary>
            Gets or sets the field default value used when the form is reset to its default values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CombTextBoxField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CombTextBoxField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CombTextBoxField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CombTextBoxField.MaxLengthOfInputCharacters">
            <summary>
            Gets or sets the max length of the input characters.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldNameChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldNameChangedEventArgs"/> class.
            </summary>
            <param name="oldName">The old field name.</param>
            <param name="newName">The new field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldNameChangedEventArgs.OldName">
            <summary>
            Gets the old name of the field.
            </summary>
            <value>
            The old name.
            </value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldNameChangedEventArgs.NewName">
            <summary>
            Gets the new name of the field.
            </summary>
            <value>
            The new name.
            </value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonWidgetCollection">
            <summary>
            Represents the widgets collection of a <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.WidgetCollectionBase`1">
            <summary>
            Represents a collection of widgets from specific type.
            </summary>
            <typeparam name="T">The widget type.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.WidgetCollectionBase`1.Remove(`0)">
            <summary>
            Removes widget from the collection
            </summary>
            <param name="widget">The widget to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.WidgetCollectionBase`1.GetEnumerator">
            <summary>
            Iterates the options in the collection.
            </summary>
            <returns>The options.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.WidgetCollectionBase`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Iterates the options in the collection.
            </summary>
            <returns>The options.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.WidgetCollectionBase`1.Count">
            <summary>
            Gets the count of the widgets in the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonWidgetCollection.AddWidget(Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioOption)">
            <summary>
            Adds option in the collection.
            </summary>
            <param name="option">The option.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioOption">
            <summary>
            Represents a Radio button option.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioOption.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioOption"/> class.
            </summary>
            <param name="value">The option value.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioOption.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioOptionCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField"/> options.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties">
            <summary>
            Represents the text properties used by PDF viewers when generating the widgets dynamic appearance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.#ctor(Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties"/> class.
            </summary>
            <param name="other">The other properties.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.CharacterSpacing">
            <summary>
            Gets or sets the character spacing.
            </summary>
            <value>The character spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.WordSpacing">
            <summary>
            Gets or sets the word spacing.
            </summary>
            <value>The word spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.HorizontalScaling">
            <summary>
            Gets or sets the horizontal scaling.
            </summary>
            <value>The horizontal scaling.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.TextRise">
            <summary>
            Gets or sets the text rise.
            </summary>
            <value>The text rise.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.RenderingMode">
            <summary>
            Gets or sets the rendering mode.
            </summary>
            <value>The rendering mode.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.Fill">
            <summary>
            Gets or sets the fill color.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.Stroke">
            <summary>
            Gets or sets the stroke color.
            </summary>
            <value>The stroke color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.StrokeThickness">
            <summary>
            Gets or sets the width of the stroke line.
            </summary>
            <value>The width of the stroke line.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.StrokeLineCap">
            <summary>
            Gets or sets the stroke line cap.
            </summary>
            <value>The stroke line cap.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.StrokeLineJoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.VariableTextProperties.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
            <value>The miter limit.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection">
            <summary>
            Represents a collection of document fields.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddPushButton(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.PushButtonField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddCheckBox(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CheckBoxField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddRadioButton(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddCombTextBox(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.CombTextBoxField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddTextBox(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddComboBox(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ComboBoxField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddListBox(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.AddSignature(System.String)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.SignatureField"/> and adds it to the collection.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The result field.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.Add(Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField)">
            <summary>
            Adds field to the collection.
            </summary>
            <param name="field">The field to be added.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.Remove(Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField)">
            <summary>
            Removes field from the collection.
            </summary>
            <param name="field">The field to be removed.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.Rename(System.String,System.String)">
            <summary>
            Renames field with a specified name.
            </summary>
            <param name="oldName">The old name of the field.</param>
            <param name="newName">The new name.</param>
            <exception cref="T:System.ArgumentException">
            Name cannot be empty.
            or
            Could not find a field with the specified name. - oldName
            or
            The specified name is already used by another field. - newName
            or
            Name cannot contain .(period). - newName
            </exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.Contains(System.String)">
            <summary>
            Determines whether this instance contains the object.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>
              <c>true</c> if a field with the specified name exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.GetEnumerator">
            <summary>
            Gets the enumerator for the elements in the collection.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator for the elements in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.Item(System.String)">
            <summary>
            Gets FormField instance by field name.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldCollection.Count">
            <summary>
            Gets the count of the fields in the collection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType">
            <summary>
            Represents the type of a <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.PushButton">
            <summary>
            Represents the PushButton button type, which is used by simple button that may be clicked with the mouse in a PDF viewer.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.CheckBox">
            <summary>
            Represents the CheckBox button type, which is used by buttons that may be checked or unchecked.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.RadioButton">
            <summary>
            Represents the RadioButton button type, which is usually used by a group of buttons only one of which may be selected at a time.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.CombTextBox">
            <summary>
            Represents the Combs type which restricts the text input to equally spaced character positions.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.TextBox">
            <summary>
            Representes the TextBox type which provides a box for the text input.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.ComboBox">
            <summary>
            Represents the ComboBox choice type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.ListBox">
            <summary>
            Represents the ListBox choice type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormFieldType.Signature">
            <summary>
            Represents the Signature form field type.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField">
            <summary>
            Represents a listbox field.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField.AllowMultiSelection">
            <summary>
            Gets or sets boolean value indicating whether to allow multiple items selection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField.Value">
            <summary>
            Gets or sets an array of selected values.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField.DefaultValue">
            <summary>
            Gets or set the default selected values used when the form is reset to its default values.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.ListBoxField.TopIndex">
            <summary>
            Gets or sets the index of the first item to be visible when displaying the ListBox.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.PushButtonField">
            <summary>
            Represents a button that may be pushed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.PushButtonField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.PushButtonField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.PushButtonField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField">
            <summary>
            Represents a field which usually provides group with several radio button options.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.Options">
            <summary>
            Gets the collection of options to choose from.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.Widgets">
            <summary>
            Gets the collection of widgets which are representing the radio button options.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.Value">
            <summary>
            Gets or sets the field value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.DefaultValue">
            <summary>
            Gets or sets the default field value used when the form is reset to its default values.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.AllowToggleOff">
            <summary>
            Gets or sets boolean value indicating whether to allow deselecting all radio buttons.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField.ShouldUpdateRadiosInUnison">
            <summary>
            Gets or sets boolean value indicating whether to turn on and off in unison radio buttons that have the same value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.SignatureField">
            <summary>
            Represents a signature field.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.SignatureField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.SignatureField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.SignatureField.Signature">
            <summary>
            Gets the signature.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.SignatureField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField">
            <summary>
            Represents a textbox field.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField"/> class. 
            </summary>
            <param name="fieldName">The field name.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.FieldType">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.IsMultiline">
            <summary>
            Gets or sets boolean value indicating whether multiline text input is allowed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.IsPassword">
            <summary>
            Gets or sets boolean value indicating whether the text input is a password.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.IsFileSelect">
            <summary>
            Gets or sets boolean value indicating whether the field represents pathname of a file whose contents are to be sumbitted as the value of the field.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.ShouldSpellCheck">
            <summary>
            Gets or sets boolean value indicating whether the inputted text should be spell checked.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.AllowScroll">
            <summary>
            Gets or sets boolean value indicating whether to allow scrolling for bigger text content.
            If the scrolling is not allowed then the maximum text input is restricted to the Widget annotation rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.TextBoxField.MaxLengthOfInputCharacters">
            <summary>
            Gets or sets the max length of the input characters. If null then the text input is not restricted from these value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.WidgetCollection`1">
            <summary>
            Represents a collection of widgets.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.WidgetCollection`1.AddWidget">
            <summary>
            Creates and adds a Widget in the collection. 
            </summary>
            <returns>The created widget.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.MergedFormFieldNameResolvingEventArgs">
            <summary>
            Provides additional data for the <see cref="E:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.MergedFieldNameResolving"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.MergedFormFieldNameResolvingEventArgs.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.MergedFormFieldNameResolvingEventArgs"/> class.
            </summary>
            <param name="name">The current name of the field.</param>
            <param name="newName">The new name of the field.</param>
            <param name="usedFieldNames">The names that are currently used in the <see cref="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.AcroForm"/>.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.MergedFormFieldNameResolvingEventArgs.Name">
            <summary>
            Gets the current field name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.MergedFormFieldNameResolvingEventArgs.NewName">
            <summary>
            Gets or sets the new field name.
            </summary>
            <value>
            The new name.
            </value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.MergedFormFieldNameResolvingEventArgs.UsedNames">
            <summary>
            Gets the names that are already used for fields in the same <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument"/>.
            </summary>
            <value>
            The used names.
            </value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem">
            <summary>
            Represents a PDF bookmark (outline) item.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.#ctor(System.String,Telerik.Windows.Documents.Fixed.Model.Navigation.Destination)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> class.
            </summary>
            <param name="title">The text to be displayed for this bookmark item.</param>
            <param name="destination">The destination to be displayed when this bookmark item is activated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the title or destination is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.#ctor(System.String,Telerik.Windows.Documents.Fixed.Model.Actions.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> class.
            </summary>
            <param name="title">The text to be displayed for this bookmark item.</param>
            <param name="action">The action to be performed when this bookmark item is activated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the title or action is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.#ctor(System.String,Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> class.
            </summary>
            <param name="title">The text to be displayed for this bookmark item.</param>
            <param name="namedDestination">The named destination to be displayed when this bookmark item is activated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the title or namedDestination is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> class.
            </summary>
            <param name="title">The text to be displayed for this bookmark item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the title is <c>null</c>.</exception>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.IsExpanded">
            <summary>
            Gets or sets whether the bookmark item is open or closed by default. For example, when 
            an item is open by default, its children are initially visible when document is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.Destination">
            <summary>
            Gets the destination to be displayed when this bookmark item is activated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.NamedDestination">
            <summary>
            Gets the named destination to be displayed when this bookmark item is activated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.Action">
            <summary>
            Gets the action to be performed when this bookmark item is activated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.TextStyle">
            <summary>
            Gets or sets the style characteristics for displaying the bookmark item's text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.TextColor">
            <summary>
            Gets or sets the color of the bookmark item's text in RGB color space.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the value is <c>null</c>.</exception>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.Title">
            <summary>
            Gets or sets the text to be displayed for this bookmark item.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the value is <c>null</c>.</exception>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem.Children">
            <summary>
            Gets the immediate child elements for this bookmark item.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection">
            <summary>
            Collection of all top-level <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> instances for the current level of the bookmarks hierarchy.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Collections.DocumentElementCollection`2">
            <summary>
            Represents base DocumentElementCollection.
            </summary>
            <typeparam name="T">The type of the T.</typeparam>
            <typeparam name="TOwner">The type of the T owner.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.DocumentElementCollection`2.#ctor(`1)">
            <summary>
            Initializes a new instance of the DocumentElementCollection /> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.DocumentElementCollection`2.SetParent(`0,`1)">
            <summary>
            Sets the parent of the document element.
            </summary>
            <param name="item">The document element.</param>
            <param name="parent">The parent which should be set to the document element.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.DocumentElementCollection`2.VerifyDocumentElementOnInsert(`0)">
            <summary>
            Verifies the validity of the document element before it is inserted in the collection. 
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection.#ctor(Telerik.Windows.Documents.Fixed.Model.Common.IFixedDocumentElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection"/> class.
            </summary>
            <param name="parent">The parent instance for this bookmarks collection. 
            This parent is applied on each <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> instance added 
            to the collection.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection.IterateBookmarksInDepthFirstSearch">
            <summary>
            Iterates the bookmarks hierarchy in Depth First Search manner.
            The bookmarks are iterated in preorder traversal - root, left child, right child.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection.IterateBookmarksInBreadthFirstSearch">
            <summary>
            Iterates the bookmarks hierarchy in Breadth First Search manner.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection.VerifyDocumentElementOnInsert(Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem)">
            <summary>
            Verifies the validity of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItem"/> before it is inserted in the collection. 
            An item is assumed to be valid when has not already been added in this or other <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection"/> instance, 
            i.e. it's parent is <c>null</c>.
            </summary>
            <param name="item">The item to add.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the item is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the item has already been added in this or other <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection"/> instance.</exception>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection.Telerik#Windows#Documents#Fixed#Model#Common#IFixedDocumentElement#Parent">
            <summary>
            Gets the parent for the current <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.BookmarksCollection"/> instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItemStyles">
            <summary>
            Bookmark item text style characteristics.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItemStyles.Normal">
            <summary>
            If set, none styling is applied for the item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItemStyles.Italic">
            <summary>
            If set, displays the item in italic.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.BookmarkItemStyles.Bold">
            <summary>
            If set, displays the item in bold.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination">
            <summary>
            Represents a named destination. Named destinations are destinations in the document which can be referred to indirectly by means of a name.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination.Name">
            <summary>
            Gets or sets the destination name.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination.Destination">
            <summary>
            Gets or sets the Destination of the named destination.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination.GoToAction">
            <summary>
            Gets or sets the GoToAction of the named destination.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocumentInfo">
            <summary>
            Represent RadFixedDocument info class
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocumentInfo.Author">
            <summary>
            Gets or sets the author of the document.
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocumentInfo.Title">
            <summary>
            Gets or sets the title of the document.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocumentInfo.Description">
            <summary>
            Gets or sets the description of the document.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Border">
            <summary>
            Represents a border element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Border.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Border"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Border.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.BorderStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Border"/> class.
            </summary>
            <param name="borderStyle">The border style.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Border.#ctor(System.Double,Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Border"/> class.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Border.#ctor(System.Double,Telerik.Windows.Documents.Fixed.Model.Editing.BorderStyle,Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Border"/> class.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="borderStyle">The border style.</param>
            <param name="color">The color.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Border.BorderStyle">
            <summary>
            Gets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Border.Thickness">
            <summary>
            Gets the border thickness.
            </summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Border.Color">
            <summary>
            Gets the border color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.BorderStyle">
            <summary>
            Represents the style of the border.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.BorderStyle.None">
            <summary>
            Represent border that will not be rendered.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.BorderStyle.Single">
            <summary>
            Represent border with single line.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.BlockCollection">
            <summary>
            Defines a collection of blocks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.BlockCollection.AddTable">
            <summary>
            Adds a new table to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.BlockCollection.AddBlock">
            <summary>
            Adds a new block to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.BlockCollection.AddBlock(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List,System.Int32)">
            <summary>
            Adds a new block with list bullet.
            </summary>
            <param name="list">The list.</param>
            <param name="listLevel">The list level.</param>
            <returns>The block.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.ListCollection">
            <summary>
            Represents the collection of lists in RadFixedDocument.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.ListCollection.AddList">
            <summary>
            Adds the list.
            </summary>
            <returns>The list.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.ListCollection.AddList(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListTemplateType)">
            <summary>
            Adds the list by some list template.
            </summary>
            <param name="listTemplateType">Type of the list template.</param>
            <returns>The list</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.ListLevelCollection">
            <summary>
            Represents the collection of list levels.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.ListLevelCollection.AddListLevel">
            <summary>
            Adds a list level.
            </summary>
            <returns>The list level.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.TableCellCollection">
            <summary>
            Defines a collection of table cells.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.TableCellCollection.AddTableCell">
            <summary>
            Adds a new table cell to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase">
            <summary>
            Represents base class for fixed content editing.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.SaveGraphicProperties">
            <summary>
            Saves the graphic properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.RestoreGraphicProperties">
            <summary>
            Restores the graphic properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.SaveTextProperties">
            <summary>
            Saves the text properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.RestoreTextProperties">
            <summary>
            Restores the text properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.SaveProperties">
            <summary>
            Saves text and graphic properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.RestoreProperties">
            <summary>
            Restores text and graphic properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.GraphicProperties">
            <summary>
            Gets the graphic state that is responsible for the graphics properties in the fixed content.
            </summary>
            <value>The current graphic state.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditorBase.TextProperties">
            <summary>
            Gets the text state that is responsible for the text properties in the fixed content.
            </summary>
            <value>The text state.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.BaselineAlignment">
            <summary>
            Describes how the baseline for a text-based element is positioned on the vertical axis, relative to the established baseline for text.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.BaselineAlignment.Baseline">
            <summary>
            A baseline that is aligned at the actual baseline of the containing box.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.BaselineAlignment.Subscript">
            <summary>
            A baseline that is aligned at the subscript position of the containing box.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.BaselineAlignment.Superscript">
            <summary>
            A baseline that is aligned at the superscript position of the containing box.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Block">
            <summary>
            Represents block of flowing content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement">
            <summary>
            Represents a block element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement.Measure(System.Windows.Size)">
            <summary>
            Measures the block element with specified available size.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The result size.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement.Draw(Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor,System.Windows.Rect)">
            <summary>
            Draws the block element with the specified editor.
            </summary>
            <param name="editor">The editor.</param>
            <param name="boundingRect">The bounding rect.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement.Split">
            <summary>
            Splits this instance.
            </summary>
            <returns>The remaining block element.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement.HasPendingContent">
            <summary>
            Gets if there is any pending content after the last measure.
            </summary>
            <value>Boolean value indicating whether there is any pending content after the last measure.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement.DesiredSize">
            <summary>
            Gets the desired size.
            </summary>
            <value>The desired size.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Block"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Block)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Block"/> class.
            </summary>
            <param name="other">The other block.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertText(System.String)">
            <summary>
            Inserts the text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertText(System.Windows.Media.FontFamily,System.String)">
            <summary>
            Inserts the text using the given font family.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertText(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.String)">
            <summary>
            Inserts the text using the given font family, font style and font weight.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertLineBreak">
            <summary>
            Inserts a line break.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertForm(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource)">
            <summary>
            Inserts a form.
            </summary>
            <param name="source">The form source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertForm(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource,System.Double,System.Double)">
            <summary>
            Inserts a form.
            </summary>
            <param name="source">The form source.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertForm(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource,System.Windows.Size)">
            <summary>
            Inserts a form.
            </summary>
            <param name="source">The form source.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertImage(System.IO.Stream)">
            <summary>
            Inserts an image.
            </summary>
            <param name="stream">The stream that contains image.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertImage(System.IO.Stream,System.Double,System.Double)">
            <summary>
            Inserts an image.
            </summary>
            <param name="stream">The stream that contains image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertImage(System.IO.Stream,System.Windows.Size)">
            <summary>
            Inserts an image.
            </summary>
            <param name="stream">The stream that contains image.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertImage(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource)">
            <summary>
            Inserts an image.
            </summary>
            <param name="source">The image source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertImage(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource,System.Windows.Size)">
            <summary>
            Inserts an image.
            </summary>
            <param name="source">The image source.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertImage(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource,System.Double,System.Double)">
            <summary>
            Inserts an image.
            </summary>
            <param name="source">The image source.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertLine(System.Windows.Point,System.Windows.Point)">
            <summary>
            Inserts a line.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertRectangle(System.Windows.Rect)">
            <summary>
            Inserts a rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertEllipse(System.Windows.Point,System.Double,System.Double)">
            <summary>
            Inserts an ellipse.
            </summary>
            <param name="center">The center.</param>
            <param name="radiusX">The radius X.</param>
            <param name="radiusY">The radius Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertCircle(System.Windows.Point,System.Double)">
            <summary>
            Inserts a circle.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertPath(Telerik.Windows.Documents.Fixed.Model.Graphics.GeometryBase)">
            <summary>
            Inserts a path.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertHyperlinkStart(System.Uri)">
            <summary>
            Inserts hyperlink start.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertHyperlinkStart(Telerik.Windows.Documents.Fixed.Model.Navigation.Destination)">
            <summary>
            Inserts hyperlink start.
            </summary>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertHyperlinkEnd">
            <summary>
            Inserts hyperlink end.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Insert(Telerik.Windows.Documents.Fixed.Model.Common.PositionContentElement)">
            <summary>
            Inserts the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Insert(Telerik.Windows.Documents.Fixed.Model.Editing.Layout.LayoutElementBase)">
            <summary>
            Inserts the specified layout element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.InsertRange(System.Collections.Generic.IEnumerable{Telerik.Windows.Documents.Fixed.Model.Editing.Layout.LayoutElementBase})">
            <summary>
            Inserts the specified layout elements.
            </summary>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Measure">
            <summary>
            Measures the block in the infinite size.
            </summary>
            <returns>The block size.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Measure(System.Windows.Size)">
            <summary>
            Measures the block element with specified available size.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The result size.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Draw(Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor,System.Windows.Rect)">
            <summary>
            Draws the block element with the specified editor.
            </summary>
            <param name="editor">The editor.</param>
            <param name="boundingRect">The bounding rect.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Split">
            <summary>
            Splits this instance.
            </summary>
            <returns>The remaining block.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Telerik#Windows#Documents#Fixed#Model#Editing#Flow#IBlockElement#Split">
            <summary>
            Splits this instance.
            </summary>
            <returns>The remaining block element.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.SetBullet(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List,System.Int32)">
            <summary>
            Sets the bullet from the corresponding list and list level.
            </summary>
            <param name="list">The list.</param>
            <param name="listLevel">The list level.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Clear">
            <summary>
            Clears the block children.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Block.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current
            <see cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.DesiredSize">
            <summary>
            Gets the desired size.
            </summary>
            <value>The desired size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.ActualSize">
            <summary>
            Gets the actual size of the block after it is drawn.
            </summary>
            <value>The actual size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.HasPendingContent">
            <summary>
            Gets if there is any pending content after the last measure.
            </summary>
            <value>
            Boolean value indicating whether there is any pending content after the last measure.
            </value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.Bullet">
            <summary>
            Gets or sets the bullet element.
            </summary>
            <value>The bullet element.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.IndentAfterBullet">
            <summary>
            Gets or sets the indent after the bullet element.
            </summary>
            <value>The indent after the bullet element.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.SpacingBefore">
            <summary>
            Gets or sets the spacing before.
            </summary>
            <value>The spacing before.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.SpacingAfter">
            <summary>
            Gets or sets the spacing after.
            </summary>
            <value>The spacing after.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.LineSpacing">
            <summary>
            Gets or sets the line spacing.
            </summary>
            <value>The line spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.LineSpacingType">
            <summary>
            Gets or sets the value indicating how the spacing between lines is calculated.
            </summary>
            <value>The type line spacing rule.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.FirstLineIndent">
            <summary>
            Gets or sets the first line indent.
            </summary>
            <value>The first line indent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.LeftIndent">
            <summary>
            Gets or sets the left indent.
            </summary>
            <value>The left indent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.RightIndent">
            <summary>
            Gets or sets the right indent.
            </summary>
            <value>The right indent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.BackgroundColor">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The background color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
            <value>The horizontal alignment.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
            <value>The vertical alignment.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.IsEmpty">
            <summary>
            Indicates if the block contains any elements.
            </summary>
            <value>True if the block does not contain any elements.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Block.PendingElements">
            <summary>
            Gets the pending elements.
            </summary>
            <value>The pending elements.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties">
            <summary>
            Defines a set of properties which will be applied when an inline is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.TrySetFont(System.Windows.Media.FontFamily)">
            <summary>
            Tries to set the current font.
            </summary>
            <param name="fontFamily">The font family.</param>
            <returns>True if succeeded.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.TrySetFont(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight)">
            <summary>
            Tries to set the current font.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>True if succeeded.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.CopyPropertiesFrom(Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties)">
            <summary>
            Copies the properties from.
            </summary>
            <param name="fromProperties">From properties.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.ForegroundColor">
            <summary>
            Gets or sets the color of the foreground.
            </summary>
            <value>The color of the foreground.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.HighlightColor">
            <summary>
            Gets or sets the color of the highlight.
            </summary>
            <value>The color of the highlight.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.BaselineAlignment">
            <summary>
            Gets or sets the baseline alignment.
            </summary>
            <value>The baseline alignment.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.UnderlinePattern">
            <summary>
            Gets or sets the underline pattern.
            </summary>
            <value>The underline pattern.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.CharacterProperties.UnderlineColor">
            <summary>
            Gets or sets the color of the underline.
            </summary>
            <value>The color of the underline.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TableLayoutType">
            <summary>
            Specifies the algorithm which shall be used to lay out the contents of this table.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TableLayoutType.FixedWidth">
            <summary>
            Fixed width table layout algorithm.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.TableLayoutType.AutoFit">
            <summary>
            AutoFit table layout algorithm.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties">
            <summary>
            Defines a set of properties which will be applied when a page is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties.CopyPropertiesFrom(Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties)">
            <summary>
            Copies the properties from.
            </summary>
            <param name="fromProperties">From properties.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties.PageSize">
            <summary>
            Gets or sets the size of the page.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties.PageMargins">
            <summary>
            Gets or sets the page margins.
            </summary>
            <value>The page margins.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.SectionProperties.PageRotation">
            <summary>
            Gets or sets the page rotation.
            </summary>
            <value>The page rotation.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition">
            <summary>
            Represents simple position.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.Scale(System.Double,System.Double)">
            <summary>
            Appends the specified scale vector.
            </summary>
            <param name="scaleX">The scale X.</param>
            <param name="scaleY">The scale Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies a scale by the specified amount about the specified point.
            </summary>
            <param name="scaleX">The scale X.</param>
            <param name="scaleY">The scale Y.</param>
            <param name="centerX">The center X.</param>
            <param name="centerY">The center Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.Rotate(System.Double)">
            <summary>
            Applies a rotation of the specified angle about the origin.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.RotateAt(System.Double,System.Double,System.Double)">
            <summary>
            Rotates this matrix about the specified point.
            </summary>
            <param name="angle">The angle.</param>
            <param name="centerX">The center X.</param>
            <param name="centerY">The center Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.Translate(System.Double,System.Double)">
            <summary>
            Appends a translation of the specified offsets.
            </summary>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Data.SimplePosition.Matrix">
            <summary>
            Gets or sets the matrix.
            </summary>
            <value>The matrix.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.HorizontalAlignment">
            <summary>
            Provides options for different text horizontal alignments.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.HorizontalAlignment.Left">
            <summary>
            The left text horizontal alignment.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.HorizontalAlignment.Right">
            <summary>
            The right text horizontal alignment.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.HorizontalAlignment.Center">
            <summary>
            The center text horizontal alignment.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Layout.BulletLayoutElement.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current
            <see cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IBulletNumberingFormat">
            <summary>
            Represents a list bullet.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IBulletNumberingFormat.GetBulletNumberingElement(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IListLevelsIndexer)">
            <summary>
            Gets the bullet numbering element.
            </summary>
            <param name="listLevelsIndexer">The list levels indexer.</param>
            <returns>The bullet numbering element.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IListLevelsIndexer">
            <summary>
            Represents class which indexes list levels in a List.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IListLevelsIndexer.GetCurrentIndex(System.Int32)">
            <summary>
            Gets the current index of the specified list level.
            </summary>
            <param name="listLevel">The list level.</param>
            <returns>The current index in the list level.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List">
            <summary>
            Represent list element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListTemplateType)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List"/> class.
            </summary>
            <param name="listTemplateType">Type of the list template.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.List.Levels">
            <summary>
            Gets the list levels.
            </summary>
            <value>The list levels.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel">
            <summary>
            Represent a list level.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IBulletNumberingFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel"/> class.
            </summary>
            <param name="numberingStyleFormat">The numbering style format.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.StartIndex">
            <summary>
            Gets or sets the start index.
            </summary>
            <value>The start index.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.RestartAfterLevel">
            <summary>
            Gets or sets the restart after level.
            </summary>
            <value>The restart after level.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.CharacterProperties">
            <summary>
            Gets the bullet numbering character properties.
            </summary>
            <value>The bullet numbering character properties.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.ParagraphProperties">
            <summary>
            Gets the paragraph properties.
            </summary>
            <value>The paragraph properties.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.IndentAfterBullet">
            <summary>
            Gets or sets the indent after the bullet.
            </summary>
            <value>The indent after the bullet.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListLevel.BulletNumberingFormat">
            <summary>
            Gets or sets the bullet numbering format.
            </summary>
            <value>The bullet numbering format.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ParagraphProperties">
            <summary>
            Represents the paragraph properties of a list level.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.PropertiesBase`1">
            <summary>
            Represents base Properties class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.PropertiesBase`1.Save">
            <summary>
            Saves the text properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.PropertiesBase`1.Restore">
            <summary>
            Restores the text properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.PropertiesBase`1.CopyFrom(`0)">
            <summary>
            Copies the text properties from other instance.
            </summary>
            <param name="other">The other properties.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ParagraphProperties.CopyFrom(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ParagraphProperties)">
            <summary>
            Copies the text properties from other instance.
            </summary>
            <param name="other">The other properties.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ParagraphProperties.FirstLineIndent">
            <summary>
            Gets or sets the first line indent.
            </summary>
            <value>The first line indent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ParagraphProperties.LeftIndent">
            <summary>
            Gets or sets the left indent.
            </summary>
            <value>The left indent.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListTemplateType">
            <summary>
            Describes the list templates.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListTemplateType.BulletDefault">
            <summary>
            Default bulleted list.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListTemplateType.NumberedDefault">
            <summary>
            Default Numbered list.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListTemplateType.NumberedParentheses">
            <summary>
            Numbered parentheses list.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.ListTemplateType.NumberedHierarchical">
            <summary>
            Numbered hierarchical list.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.TextBulletNumberingFormat">
            <summary>
            Represents the text bullet numbering format.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.TextBulletNumberingFormat.#ctor(System.Func{Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IListLevelsIndexer,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.TextBulletNumberingFormat"/> class.
            </summary>
            <param name="getTextBullet">The method for getting text bullet representation from number.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Lists.TextBulletNumberingFormat.GetBulletNumberingElement(Telerik.Windows.Documents.Fixed.Model.Editing.Lists.IListLevelsIndexer)">
            <summary>
            Gets the bullet numbering element.
            </summary>
            <param name="listLevelsIndexer">The list levels indexer.</param>
            <returns>The bullet numbering element.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties">
            <summary>
            Defines a set of properties which will be applied when a paragraph is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.CopyPropertiesFrom(Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties)">
            <summary>
            Copies the properties from.
            </summary>
            <param name="fromProperties">From properties.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
            <value>The horizontal alignment.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.SpacingBefore">
            <summary>
            Gets or sets the spacing before.
            </summary>
            <value>The spacing before.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.SpacingAfter">
            <summary>
            Gets or sets the spacing after.
            </summary>
            <value>The spacing after.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.LineSpacing">
            <summary>
            Gets or sets the line spacing.
            </summary>
            <value>The line spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.LineSpacingType">
            <summary>
            Gets or sets the value indicating how the spacing between lines is calculated.
            </summary>
            <value>The type line spacing rule.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.FirstLineIndent">
            <summary>
            Gets or sets the first line indent.
            </summary>
            <value>The first line indent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.LeftIndent">
            <summary>
            Gets or sets the left indent.
            </summary>
            <value>The left indent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.RightIndent">
            <summary>
            Gets or sets the right indent.
            </summary>
            <value>The right indent.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.ListId">
            <summary>
            Gets or sets the list id.
            </summary>
            <value>The list id.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.ParagraphProperties.ListLevel">
            <summary>
            Gets or sets the list level.
            </summary>
            <value>The list level.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor">
            <summary>
            Represents editor that will allow you to create RadFixedDocument
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.#ctor(Telerik.Windows.Documents.Fixed.Model.RadFixedDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertParagraph">
            <summary>
            Inserts new paragraph.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertRun(System.String)">
            <summary>
            Inserts the text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertRun(System.Windows.Media.FontFamily,System.String)">
            <summary>
            Inserts the text using the given font family.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertRun(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.String)">
            <summary>
            Inserts the text using the given font family, font style and font weight.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertLine(System.String)">
            <summary>
            Inserts the text and moves to the next line.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertLineBreak">
            <summary>
            Inserts a line break.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertImageInline(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource,System.Windows.Size)">
            <summary>
            Inserts the image inline.
            </summary>
            <param name="imageSource">The image source.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertImageInline(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource)">
            <summary>
            Inserts the image inline.
            </summary>
            <param name="imageSource">The image source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertFormInline(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource)">
            <summary>
            Inserts the form inline.
            </summary>
            <param name="formSource">The form source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertFormInline(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource,System.Windows.Size)">
            <summary>
            Inserts the form inline.
            </summary>
            <param name="formSource">The form source.</param>
            <param name="size">The form size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertSectionBreak">
            <summary>
            Inserts new section.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertPageBreak">
            <summary>
            Inserts new page.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertTable(Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table)">
            <summary>
            Inserts the table.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.InsertBlock(Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement)">
            <summary>
            Inserts the block element.
            </summary>
            <param name="block">The block.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.Dispose">
            <summary>
            Finishes the the pages and closes the document.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.Lists">
            <summary>
            Gets the lists.
            </summary>
            <value>The lists.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.SectionProperties">
            <summary>
            Gets the section properties.
            </summary>
            <value>The section properties.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.ParagraphProperties">
            <summary>
            Gets the paragraph properties.
            </summary>
            <value>The paragraph properties.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.RadFixedDocumentEditor.CharacterProperties">
            <summary>
            Gets the character properties.
            </summary>
            <value>The character properties.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.BorderCollapse">
            <summary>
            Specifies whether the measuring algorithm should measure border spacing between borders center lines or between borders outlines.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.BorderCollapse.Collapse">
            <summary>
            Specifies the case when the border spacing is measured from the borders center lines.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.BorderCollapse.Separate">
            <summary>
            Specifies the case when the border spacing is measured from the borders outlines.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders">
            <summary>
            Represent the borders for a table.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Border)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders"/> class.
            </summary>
            <param name="all">All.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders.Left">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders.Right">
            <summary>
            Gets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TableBorders.Bottom">
            <summary>
            Gets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell">
            <summary>
            Represents a cell in the table.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.Measure">
            <summary>
            Measures this instance in infinity.
            </summary>
            <returns>The result size.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.Measure(System.Windows.Size)">
            <summary>
            Measures the cell in the specified size.
            </summary>
            <param name="availableSize">The available.</param>
            <returns>The result size.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current
            <see cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.RowSpan">
            <summary>
            Gets or sets the row span.
            </summary>
            <value>The row span.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.ColumnSpan">
            <summary>
            Gets or sets the column span.
            </summary>
            <value>The column span.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.PreferredWidth">
            <summary>
            Gets or sets the preferred width.
            </summary>
            <value>The preferred width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.Blocks">
            <summary>
            Gets the blocks for the cell.
            </summary>
            <value>The blocks.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.Borders">
            <summary>
            Gets the borders.
            </summary>
            <value>The borders.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCell.DesiredSize">
            <summary>
            Gets the desired size.
            </summary>
            <value>The value of the desired size.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders">
            <summary>
            Represents the borders of a table cell.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Border)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders"/> class.
            </summary>
            <param name="all">All.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border,Telerik.Windows.Documents.Fixed.Model.Editing.Border)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <param name="diagonalUp">The diagonal up.</param>
            <param name="diagonalDown">The diagonal down.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.Left">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.Right">
            <summary>
            Gets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.Bottom">
            <summary>
            Gets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.DiagonalUp">
            <summary>
            Gets or sets the diagonal up.
            </summary>
            <value>The diagonal up.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableCellBorders.DiagonalDown">
            <summary>
            Gets or sets the diagonal down.
            </summary>
            <value>The diagonal down.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.CellProperties">
            <summary>
            Represents the properties of a cell.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.CellProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.CellProperties"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.CellProperties.Borders">
            <summary>
            Gets the borders.
            </summary>
            <value>The borders.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.CellProperties.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.CellProperties.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableRow">
            <summary>
            Represents a row in a table.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableRow.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current
            <see cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.TableRow.Cells">
            <summary>
            Gets the cells for the row.
            </summary>
            <value>The cells.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table">
            <summary>
            Represent a table.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table"/> class.
            </summary>
            <param name="firstRowIndex">The index of the first row.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.#ctor(Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table"/> class.
            </summary>
            <param name="other">The other.</param>
            <param name="firstRowIndex">The index of the first row.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Measure">
            <summary>
            Measures this instance in infinity.
            </summary>
            <returns>The measured size.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Measure(System.Windows.Size)">
            <summary>
            Measures the block element with specified available size.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The result size.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Draw(Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor,System.Windows.Rect)">
            <summary>
            Draws the block element with the specified editor.
            </summary>
            <param name="editor">The editor.</param>
            <param name="boundingRect">The bounding rect.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Split">
            <summary>
            Splits this instance.
            </summary>
            <returns>The remaining block element.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Telerik#Windows#Documents#Fixed#Model#Editing#Flow#IBlockElement#Split">
            <summary>
            Splits this instance.
            </summary>
            <returns>The remaining block element.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>The margin.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.LayoutType">
            <summary>
            Gets or sets the layout type of the table.
            </summary>
            <value>The layout type.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Borders">
            <summary>
            Gets the borders.
            </summary>
            <value>The borders.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Background">
            <summary>
            Gets or sets the background of the table.
            </summary>
            <value>The background of the table.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.DefaultCellProperties">
            <summary>
            Gets the default cell properties.
            </summary>
            <value>The default cell properties.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.DesiredSize">
            <summary>
            Gets the desired size.
            </summary>
            <value>The desired size.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.BorderSpacing">
            <summary>
            Gets or sets the border spacing.
            </summary>
            <value>The border spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.BorderCollapse">
            <summary>
            Gets or sets borders collapse state.
            </summary>
            <value>Value indicating the border collapse state.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.Rows">
            <summary>
            Gets the rows.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table.HasPendingContent">
            <summary>
            Gets if there is any pending content after the last measure.
            </summary>
            <value>
            Boolean value indicating whether there is any pending content after the last measure.
            </value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.TableRowCollection">
            <summary>
            Defines a collection of table rows.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.Collections.TableRowCollection.AddTableRow">
            <summary>
            Adds a new table row to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Extensions.ColorExtensions">
            <summary>
            Extensions for creating color objects.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Extensions.ColorExtensions.ToColor(System.Windows.Media.Color)">
            <summary>
            Converts the Color to ColorBase that is usend in RadPdfProcessing.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Extensions.ImageSourceExtensions">
            <summary>
            Extensions for creating image source from BitmapSource.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Extensions.ImageSourceExtensions.ToImageSource(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Creates ImageSource form the BitmapSource
            </summary>
            <param name="bitmapSource">The bitmap source.</param>
            <returns>The ImageSource</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Extensions.ImageSourceExtensions.ToImageSource(System.Windows.Media.Imaging.BitmapSource,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.ImageQuality)">
            <summary>
            Creates ImageSource form the BitmapSource
            </summary>
            <param name="bitmapSource">The bitmap source.</param>
            <param name="imageQuality">The image quality.</param>
            <returns>The ImageSource</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.UnderlinePattern">
            <summary>
            Specifies the types of patterns which may be used to create an underline.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.UnderlinePattern.None">
            <summary>
            Represents empty decoration.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.UnderlinePattern.Single">
            <summary>Single line underline.</summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.VerticalAlignment">
            <summary>
            Provides options for different text vertical alignments.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.VerticalAlignment.Top">
            <summary>
            The top text vertical alignment.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.VerticalAlignment.Center">
            <summary>
            The center text vertical alignment.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Editing.Flow.VerticalAlignment.Bottom">
            <summary>
            The bottom text vertical alignment.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties">
            <summary>
            Represents graphic state.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.CopyFrom(Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties)">
            <summary>
            Copies the graphic properties from fromProperties instance.
            </summary>
            <param name="graphicProperties">The graphic properties.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.IsFilled">
            <summary>
            Gets or sets whether the drawn geometry is filled.
            </summary>
            <value>Value indicating whether the geometry is filled.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.IsStroked">
            <summary>
            Gets or sets whether the drawn geometry is stroked.
            </summary>
            <value>Value indicating whether the geometry is stroked.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.StrokeColor">
            <summary>
            Gets or sets the stroke color.
            </summary>
            <value>The color of the stroke.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
            <value>The miter limit.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.StrokeLineJoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.GraphicProperties.StrokeLineCap">
            <summary>
            Gets or sets the stroke line cap.
            </summary>
            <value>The stroke line cap.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleFit">
            <summary>
            Represents bounding rectangle fit.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.Destination">
            <summary>
            Represents destination.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.Destination.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.Destination.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleFit.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleHorizontalFit">
            <summary>
            Represents bounding rectangle horizontal fit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleHorizontalFit.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleHorizontalFit.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleVerticalFit">
            <summary>
            Represents bounding rectangle vertical fit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleVerticalFit.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.BoundingRectangleVerticalFit.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.PageHorizontalFit">
            <summary>
            Represents page horizontal fit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.PageHorizontalFit.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.PageHorizontalFit.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.PageFit">
            <summary>
            Represents page fit.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.Location">
            <summary>
            Represents location.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.Location.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.Location.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.Location.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.Location.Zoom">
            <summary>
            Gets or sets the zoom.
            </summary>
            <value>The zoom.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.RectangleFit">
            <summary>
            Represents rectangle fit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.RectangleFit.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.RectangleFit.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.RectangleFit.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.RectangleFit.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.RectangleFit.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.PageVerticalFit">
            <summary>
            Represents vertical page fit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.PageVerticalFit.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Navigation.PageVerticalFit.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData">
            <summary>
            Represents encoded image data.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.#ctor(System.Byte[],System.Int32,System.Int32,System.Int32,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="bitsPerComponent">The bits per component.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="colorSpace">The color space.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.#ctor(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="alphaChannel">The alpha channel data. This data should be encoded with same bitsPerComponent, width, height and filters as the image data.
            The colorspace of the alpha channel is not related to the colorspace of the image data and the alpha data colorspace is always DeviceGray.</param>
            <param name="bitsPerComponent">The bits per component.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="colorSpace">The color space.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.AlphaChannel">
            <summary>
            Gets the alpha channel data. This data should be encoded with same bitsPerComponent, width, height and filters as the image data.
            The colorspace of the alpha channel is not related to the colorspace of the image data and the alpha data colorspace is always DeviceGray.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.BitsPerComponent">
            <summary>
            Gets the bits per component.
            </summary>
            <value>The bits per component.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.ColorSpace">
            <summary>
            Gets the color space.
            </summary>
            <value>The color space.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData.Filters">
            <summary>
            Gets the filters.
            </summary>
            <value>The filters.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageMask">
            <summary>
            This class handles the logic for both ImageMask and ColorKeyMask depending on the constructor.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.CharacterSpacing">
            <summary>
            Gets or sets the character spacing.
            </summary>
            <value>The character spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.WordSpacing">
            <summary>
            Gets or sets the word spacing.
            </summary>
            <value>The word spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.HorizontalScaling">
            <summary>
            Gets or sets the horizontal scaling.
            </summary>
            <value>The horizontal scaling.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.TextRise">
            <summary>
            Gets or sets the text rise.
            </summary>
            <value>The text rise.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.RenderingMode">
            <summary>
            Gets or sets the rendering mode.
            </summary>
            <value>The rendering mode.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.Fill">
            <summary>
            Gets or sets the fill color.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.Stroke">
            <summary>
            Gets or sets the stroke color.
            </summary>
            <value>The stroke color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.StrokeThickness">
            <summary>
            Gets or sets the width of the stroke line.
            </summary>
            <value>The width of the stroke line.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.StrokeLineCap">
            <summary>
            Gets or sets the stroke line cap.
            </summary>
            <value>The stroke line cap.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.StrokeLineJoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.TextPropertiesOwner.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
            <value>The miter limit.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.PostScript.Parser.Keywords.ImageStreamParser">
             This will parse a PDF byte stream and extract operands and such.
            
             @author Ben Litchfield
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException">
            <summary>
            Represents not supported filter exception.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException"/> class.
            </summary>
            <param name="filterName">Name of the filter.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException"/> class.
            </summary>
            <param name="filterName">Name of the filter.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="cause">The cause.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
            method
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" />
            object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />
            structure that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Exceptions.NotSupportedFilterException.FilterName">
            <summary>
            Gets the name of the filter.
            </summary>
            <value>The name of the filter.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace">
            <summary>
            Represents all color spaces.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.Undefined">
            <summary>
            Represents undefined color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.Gray">
            <summary>
            Represents grayscale color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.RGB">
            <summary>
            Represents RGB color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.CMYK">
            <summary>
            Represents CMYK color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.Indexed">
            <summary>
            Represents indexed color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.ICCBased">
            <summary>
            Represents ICC based color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.Pattern">
            <summary>
            Represents pattern color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.Separation">
            <summary>
            Represents separation color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.DeviceN">
            <summary>
            Represents DeviceN color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.Lab">
            <summary>
            Represents Lab color space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.CalRgb">
            <summary>
            Represents CalRgb space.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace.CalGray">
            <summary>
            Represents CalGray space.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DecodeParameters">
            <summary>
            Represents the decode parameters collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.Internal.TextDocumentOld.CreateTextPage(System.Int32)">
            <summary>
            TODO Make base method private when Old model is deleted.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames">
            <summary>
            Contains valid names for PDF filters.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.ASCIIHexDecode">
            <summary>
            Name for ASCIIHexDecode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.ASCII85Decode">
            <summary>
            Name for ASCII85Decode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.LZWDecode">
            <summary>
            Name for LZWDecode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.FlateDecode">
            <summary>
            Name for FlateDecode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.RunLengthDecode">
            <summary>
            Name for RunLengthDecode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.CCITTFaxDecode">
            <summary>
            Name for CCITTFaxDecode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.JBIG2Decode">
            <summary>
            Name for JBIG2Decode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.DCTDecode">
            <summary>
            Name for DCTDecode filter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfFilterNames.JPXDecode">
            <summary>
            Name for JPXDecode filter.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject">
            <summary>
            Represents a PDF object.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.#ctor(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.IPdfExportContext)">
            <summary>
            This constructor is used for exporting stream objects.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.#ctor(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.IPdfExportContext,System.Int32,System.Int32,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace)">
            <summary>
            This constructor is used for exporting image stream objects.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.#ctor(System.Int32,System.Int32,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.ColorSpace)">
            <summary>
            This constructor is used for decoding <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.#ctor(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.Parser.PostScriptReader,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.IPdfImportContext,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Types.PdfDictionary)">
            <summary>
            This constructor is used for decoding stream objects on RadPdfProcessing import.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.#ctor(Telerik.Windows.Documents.Fixed.FormatProviders.Old.Pdf.DocumentModel.Data.PdfDictionaryOld)">
            <summary>
            This constructor is used for decoding stream objects on RadPdfViewer import.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.GetColorSpaceInternal``1">
            <summary>
            Returns <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.ColorSpaces.ColorSpaceObject"/> from this.dictionary when using PdfProcessing model;
            and ColorSpaceOld when using PdfViewer model.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.GetColorSpaceObject">
            <summary>
            Returns <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.ColorSpaces.ColorSpaceObject"/> from this.dictionary when using PdfProcessing;
            and <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Model.Elements.ColorSpaces.ColorSpaceObject"/> from ColorSpaceOld when using PdfViewer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.ColorSpace">
            <summary>
            Gets the color space.
            </summary>
            <value>The color space.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.BitsPerComponent">
            <summary>
            Gets the bits per component.
            </summary>
            <value>The bits per component.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.FiltersManager">
            <summary>
            Represents the PDF filters manager.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.FiltersManager.RegisterFilter(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.IPdfFilter)">
            <summary>
            Registers the specified PDF filter.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType">
            <summary>
            Represents different annotation types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Link">
            <summary>
            Stands for the link annotation, which represents either a hypertext link to a destination elsewhere in the document or an action to be performed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Widget">
            <summary>
            Stands for the widget annotation, which is used by interactive forms to represent the appearance of fields and to manage user interactions.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Text">
            <summary>
            Stands for the text annotation, a “sticky note” attached to a point in the PDF document.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.FreeText">
            <summary>
            Stands for the free text annotation, which displays text directly on the page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Line">
            <summary>
            Stands for the line annotation, which displays a single straight line on the page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Square">
            <summary>
            Stands for the square annotation, which displays a rectangle on the page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Circle">
            <summary>
            Stands for the circle annotation, which displays an ellipse on the page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Polygon">
            <summary>
            Stands for the polygon annotation, which displays a closed polygon on the page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.PolyLine">
            <summary>
            Stands for the polyline annotation which is similar to the polygon annotation,
            except that the first and last vertex of the polygon are not implicitly connected.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Highlight">
            <summary>
            Stands for the highlight annotation which appears as a highlight in the text of the document.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Underline">
            <summary>
            Stands for the underline annotation which appears as an underline in the text of the document.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Squiggly">
            <summary>
            Stands for the squiggly annotation which appears as a jagged underline in the text of the document.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.StrikeOut">
            <summary>
            Stands for the strikeout annotation which appears as a strikeout in the text of the document.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Stamp">
            <summary>
            Stands for the stamp annotation which displays text or graphics intended to look as if they were stamped on the page with a rubber stamp.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Caret">
            <summary>
            Stands for the caret annotation which is a visual symbol that indicates the presence of text edits.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Ink">
            <summary>
            Stands for the ink annotation which represents a freehand “scribble” composed of one or more disjoint paths.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Popup">
            <summary>
            Stands for the popup annotation which displays text in a pop-up window for entry and editing.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.FileAttachment">
            <summary>
            Stands for the file attachment annotation which contains a reference to a file.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Sound">
            <summary>
            Stands for the sound annotation which contains sound recorded from the computer’s microphone or imported from a file.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Movie">
            <summary>
            Stands for the movie annotation which contains animated graphics and sound to be presented on the computer screen and through the speakers.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Screen">
            <summary>
            Stands for the screen annotation which specifies a region of a page upon which media clips may be played.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.PrinterMark">
            <summary>
            Stands for the printer mark annotation which represents a mark, added to a page to assist in identifying components of a multiple-plate job and maintaining consistent output during production.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.TrapNet">
            <summary>
            Stands for the trapnet annotation which defines the trapping characteristics for a page of a PDF document.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Watermark">
            <summary>
            Stands for the watermark annotation which is used to represent graphics that are expected to be printed at a fixed size and position on a page, regardless of the dimensions of the printed page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.ThreeD">
            <summary>
            Stands for the 3D annotation which is the means by which 3D artwork is represented in a PDF document.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Annotations.AnnotationType.Redact">
            <summary>
            Stands for the redact annotation which identifies content that is intended to be removed from the document.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.PositionContentElement">
            <summary>
            Represents a positionalbe content element.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.ContentElementBase">
            <summary>
            Represents base class for all content element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.ContentElementBase.Clipping">
            <summary>
            Gets or sets the clipping.
            </summary>
            <value>The clipping.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Common.PositionContentElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Common.ContentElementBase"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Common.PositionContentElement.Position">
            <summary>
            Gets or sets the other of the element.
            </summary>
            <value>The position.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor">
            <summary>
            Represents content editor that will allow you to easily create fixed content.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.#ctor(Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.#ctor(Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement,Telerik.Windows.Documents.Fixed.Model.Data.IPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor"/> class.
            </summary>
            <param name="root">The root.</param>
            <param name="initialPosition">The initial position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.PushClipping(Telerik.Windows.Documents.Fixed.Model.Graphics.GeometryBase)">
            <summary>
            Pushes the clipping.
            </summary>
            <param name="clip">The clip.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.PushClipping(System.Windows.Rect)">
            <summary>
            Pushes the clipping.
            </summary>
            <param name="clip">The clip.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.PopClipping">
            <summary>
            Pops the clipping.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawText(System.String)">
            <summary>
            Draws the text using current text state at the current position.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawText(System.String,System.Windows.Size)">
            <summary>
            Draws the text.
            </summary>
            <param name="text">The text.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawImage(System.IO.Stream)">
            <summary>
            Draws the image.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawImage(System.IO.Stream,System.Double,System.Double)">
            <summary>
            Draws the image.
            </summary>
            <param name="stream">The stream.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawImage(System.IO.Stream,System.Windows.Size)">
            <summary>
            Draws the image.
            </summary>
            <param name="stream">The stream.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawImage(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource)">
            <summary>
            Draws the image.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawImage(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource,System.Windows.Size)">
            <summary>
            Draws the image.
            </summary>
            <param name="source">The source.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawImage(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource,System.Double,System.Double)">
            <summary>
            Draws the image.
            </summary>
            <param name="source">The source.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawForm(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource)">
            <summary>
            Draws the form.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawForm(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource,System.Double,System.Double)">
            <summary>
            Draws a form.
            </summary>
            <param name="source">The form source.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawForm(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource,System.Windows.Size)">
            <summary>
            Draws a form.
            </summary>
            <param name="source">The form source.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawWidget``1(Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField{``0},System.Windows.Size)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Widget"/> representing a <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.FormField"/> and draws the widget with a specified <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation"/> size.
            This method will add widget only in cases when the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor"/> Root supports annotations.
            </summary>
            <typeparam name="T">The widget type.</typeparam>
            <param name="parentField">The form field the should be represented by the widget.</param>
            <param name="annotationSize">The <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation"/> size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawWidget(Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField,Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioOption,System.Windows.Size)">
            <summary>
            Creates new <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.RadioButtonWidget"/> representing a <see cref="T:Telerik.Windows.Documents.Fixed.Model.InteractiveForms.RadioButtonField"/> and draws the widget with a specified <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation"/> size.
            This method will add widget only in cases when the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor"/> Root supports annotations.
            </summary>
            <param name="parentField">The form field the should be represented by the widget.</param>
            <param name="option">The option that should be represented by the widget.</param>
            <param name="annotationSize">The <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation"/> size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawLine(System.Windows.Point,System.Windows.Point)">
            <summary>
            Draws a line.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawRectangle(System.Windows.Rect)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawEllipse(System.Windows.Point,System.Double,System.Double)">
            <summary>
            Draws a ellipse.
            </summary>
            <param name="center">The center.</param>
            <param name="radiusX">The radius X.</param>
            <param name="radiusY">The radius Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawCircle(System.Windows.Point,System.Double)">
            <summary>
            Draws a circle.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawPath(Telerik.Windows.Documents.Fixed.Model.Graphics.GeometryBase)">
            <summary>
            Draws a path with given geometry.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawTable(Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table)">
            <summary>
            Draws the table.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawTable(Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table,System.Double)">
            <summary>
            Draws the table with some fit table width.
            </summary>
            <param name="table">The table.</param>
            <param name="width">The width to fit the table in.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawTable(Telerik.Windows.Documents.Fixed.Model.Editing.Tables.Table,System.Windows.Size)">
            <summary>
            Draws the table.
            </summary>
            <param name="table">The table.</param>
            <param name="size">The size to fit the table in. Only the rows that fit in the given hight are drawn. The rest of the table can be taken with the table.Split() method.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawBlock(Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement)">
            <summary>
            Draws the block.
            </summary>
            <param name="block">The block.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.DrawBlock(Telerik.Windows.Documents.Fixed.Model.Editing.Flow.IBlockElement,System.Windows.Size)">
            <summary>
            Draws the block in given size.
            </summary>
            <param name="block">The block.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.Draw(Telerik.Windows.Documents.Fixed.Model.Common.PositionContentElement)">
            <summary>
            Draws the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.SavePosition">
            <summary>
            Saves the position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.RestorePosition">
            <summary>
            Restores the position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.Root">
            <summary>
            Gets the root element for the fixed content.
            </summary>
            <value>The root element.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.Position">
            <summary>
            Gets or sets the current position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.FixedContentEditor.Clipping">
            <summary>
            Gets the current clipping object.
            </summary>
            <value>The clipping.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties">
            <summary>
            Represents the text state properties.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.TrySetFont(System.Windows.Media.FontFamily)">
            <summary>
            Tries to set the current font.
            </summary>
            <param name="fontFamily">The font family.</param>
            <returns>True if succeeded.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.TrySetFont(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight)">
            <summary>
            Tries to set the current font.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>True if succeeded.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.CopyFrom(Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties)">
            <summary>
            Copies the text properties from other instance.
            </summary>
            <param name="textProperties">The text properties.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.UnderlinePattern">
            <summary>
            Gets or sets the text decorations.
            </summary>
            <value>The text decorations.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.UnderlineColor">
            <summary>
            Gets or sets the color of the underline.
            </summary>
            <value>The color of the underline.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.HighlightColor">
            <summary>
            Gets or sets the color of the highlight.
            </summary>
            <value>The color of the highlight.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.CharacterSpacing">
            <summary>
            Gets or sets the character spacing.
            </summary>
            <value>The character spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.WordSpacing">
            <summary>
            Gets or sets the word spacing.
            </summary>
            <value>The word spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.HorizontalScaling">
            <summary>
            Gets or sets the horizontal scaling.
            </summary>
            <value>The horizontal scaling.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.RenderingMode">
            <summary>
            Gets or sets the rendering mode.
            </summary>
            <value>The rendering mode.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.BaselineAlignment">
            <summary>
            Gets or sets the baseline alignment.
            </summary>
            <value>The baseline alignment.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Editing.TextProperties.Font">
            <summary>
            Gets or sets the current font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository">
            <summary>
            Represents the fonts repository. It can be used to create new font object.
            </summary>
            <summary>
            Represents the fonts repository. It can be used to create new font object.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.TryCreateFont(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,Telerik.Windows.Documents.Fixed.Model.Fonts.FontBase@)">
            <summary>
            Tries to create a new font object based on the given font properties.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="font">The font.</param>
            <returns>True if the font is created succesfully.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.TryCreateFont(System.Windows.Media.FontFamily,Telerik.Windows.Documents.Fixed.Model.Fonts.FontBase@)">
            <summary>
            Tries to create a new font object based on the given font properties.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="font">The font.</param>
            <returns>True if the font is created succesfully.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.RegisterFont(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Byte[])">
            <summary>
            Registers font.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontStyle">The font style.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="data">The font data.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.ClearRegisteredFonts">
            <summary>
            Clears the registered fonts.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.Symbol">
            <summary>
            Gets the symbol font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.ZapfDingbats">
            <summary>
            Gets the zapfdingbats font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.TimesRoman">
            <summary>
            Gets the times toman font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.TimesBold">
            <summary>
            Gets the times bold font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.TimesBoldItalic">
            <summary>
            Gets the times bold italic font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.TimesItalic">
            <summary>
            Gets the times italic font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.Helvetica">
            <summary>
            Gets the helvetica font object.
            </summary>
            <value>The helvetica.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.HelveticaBold">
            <summary>
            Gets the helvetica bold font object.
            </summary>
            <value>The helvetica.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.HelveticaOblique">
            <summary>
            Gets the helvetica oblique font object.
            </summary>
            <value>The helvetica.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.HelveticaBoldOblique">
            <summary>
            Gets the helvetica bold oblique font object.
            </summary>
            <value>The helvetica.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.Courier">
            <summary>
            Gets the courier font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.CourierBold">
            <summary>
            Gets the courier bold font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.CourierOblique">
            <summary>
            Gets the courier oblique font object.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Fonts.FontsRepository.CourierBoldOblique">
            <summary>
            Gets the courier bold oblique font object.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.EventArgs.AnnotationEventArgs">
            <summary>
            Represent AnnotationEventArgs
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.EventArgs.AnnotationEventArgs.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.EventArgs.AnnotationEventArgs.Annotation">
            <summary>
            Gets or sets the annotation.
            </summary>
            <value>The annotation.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.EventArgs.AnnotationEventArgs.Handled">
            <summary>
            Gets or sets if the event is handled.
            </summary>
            <value>If the event is handled.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Internal.Collections.PagesCollection">
            <summary>
            Represents the pages collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Internal.Collections.PagesCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can
            be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Internal.Collections.PagesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be
            used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Internal.Collections.PagesCollection.Count">
            <summary>
            Gets the pages count.
            </summary>
            <value>The pages count.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.OnDocumentExceptionEventArgs">
            <summary>
            Represents on document exception event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.OnDocumentExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.OnDocumentExceptionEventArgs"/> class.
            </summary>
            <param name="documentException">The document exception.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.OnDocumentExceptionEventArgs.DocumentException">
            <summary>
            Gets the document exception.
            </summary>
            <value>The document exception.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.OnDocumentExceptionEventArgs.Handle">
            <summary>
            Defines if the exception should be handled.
            </summary>
            <value>True by default.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Utils.FormatProviderSettingsTypeConverter">
            <summary>
            Represents format provider settings converter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Utils.FormatProviderSettingsTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified
            type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Utils.FormatProviderSettingsTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified
            type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Utils.FormatProviderSettingsTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of
            the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to
            use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <exception cref="T:System.NotImplementedException">
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
            not implemented in base <see cref="T:System.ComponentModel.TypeConverter" />.
            </exception>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DctDecode">
            <summary>
            Represents DCT filter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DctDecode.Encode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.Byte[])">
            <summary>
            Encodes the specified data.
            </summary>
            <param name="encodedObject">The encoded object.</param>
            <param name="inputData">The input data.</param>
            <returns>The encoded data.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DctDecode.Decode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.Byte[],Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DecodeParameters)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="decodedObject">The decoded object.</param>
            <param name="inputData">The input data.</param>
            <param name="parms"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DctDecode.DecodeWithJpegDecoder(System.Byte[])">
            <summary>
            Decodes the data with Telerik's internal JpegDecoder class. 
            <para>This method was used in previous versions and you can achieve backwards compatibility by using it in the Decode method.</para>
            </summary>
            <param name="inputData">The input data.</param>
            <returns>The decoded data.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DctDecode.Name">
            <summary>
            Gets the name of the PDF filter.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Old.Pdf.Filters.FiltersManagerOld">
            <summary>
            Represents the filters manager.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Old.Pdf.Filters.FiltersManagerOld.RegisterFilter(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.IPdfFilter)">
            <summary>
            Registers the specified PDF filter.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.FlateDecode">
            <summary>
            Represents flate filter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.FlateDecode.Decode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.Byte[],Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.DecodeParameters)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="decodedObject">The decoded object.</param>
            <param name="data">The data.</param>
            <param name="parms">Decode parameters</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.FlateDecode.Encode(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.PdfObject,System.Byte[])">
            <summary>
            Encodes the specified data.
            </summary>
            <param name="encodedObject">The encoded object.</param>
            <param name="data">The data</param>
            <returns>The encoded data.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Filters.FlateDecode.Name">
            <summary>
            Gets the name of the PDF filter.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider">
            <summary>
            Provides functionality for importing PDF documents.
            </summary>
            <summary>
            Represents PDF format provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider"/> class.
            </summary>
            <param name="sourceStream">The source stream.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.#ctor(System.IO.Stream,Telerik.Windows.Documents.Fixed.FormatProviders.FormatProviderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider"/> class. This overload should be used in order to import a document in RadPdfViewer.
            </summary>
            <param name="sourceStream">The stream.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.Import">
            <summary>
            Creates a <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument"/> that represents the PDF file.
            </summary>
            <returns>The fixed document.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.ImportOverride(System.IO.Stream)">
            <summary>
            Imports the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>The imported document.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.ExportOverride(Telerik.Windows.Documents.Fixed.Model.RadFixedDocument,System.IO.Stream)">
            <summary>
            Exports the specified document.
            </summary>
            <param name="document"></param>
            <param name="output">The output.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.SupportedExtensions">
            <summary>
            Gets the supported extensions.
            </summary>
            <value>The supported extensions.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.ImportSettings">
            <summary>
            Gets or sets the import settings.
            </summary>
            <value>The import settings.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.ExportSettings">
            <summary>
            Gets or sets the export settings.
            </summary>
            <value>The export settings.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.CanImport">
            <summary>
            Gets a value indicating whether can import.
            </summary>
            <value>The value indicating whether can import.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider.CanExport">
            <summary>
            Gets a value indicating whether can export.
            </summary>
            <value>The value indicating whether can export.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Old.Pdf.PdfReader.PdfContentManager.#ctor">
            <summary>
            Use for test purposes only!
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.ReadingMode">
            <summary>
            Represents the reading mode on document import.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.ReadingMode.AllAtOnce">
            <summary>
            Reads all the pages content on document import.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.FormatProviders.ReadingMode.OnDemand">
            <summary>
            The pages content is not read on document import. 
            When needed, the page content can be loaded lately.
            </summary>  
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProvider">
            <summary>
            Provides functionality to export RadFixedDocument to text.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProvider.Export(Telerik.Windows.Documents.Fixed.Model.RadFixedDocument,Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings)">
            <summary>
            Exports the specified document as text.
            </summary>
            <param name="document">The document to export.</param>
            <param name="settings">The settings.</param>
            <returns>The text, that is extracted from the RadFixedDocument.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProvider.Export(Telerik.Windows.Documents.Fixed.Model.RadFixedDocument)">
            <summary>
            Exports the specified document as text.
            </summary>
            <param name="document">The document to export.</param>
            <returns>The text, that is extracted from the RadFixedDocument.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings">
            <summary>
            Represents settigs that <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProvider"/> uses to export RadFixedDocument to text.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings"/> class.
            </summary>
            <param name="linesSeparator">The lines separator.</param>
            <param name="pagesSeparator">The pages separator.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings.Default">
            <summary>
            Gets the default settings.
            </summary>
            <value>The default settings.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings.LinesSeparator">
            <summary>
            Gets or sets the lines separator.
            </summary>
            <value>The lines separator.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Text.TextFormatProviderSettings.PagesSeparator">
            <summary>
            Gets or sets the pages separator.
            </summary>
            <value>The pages separator.</value>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.CleanFaxData">
            <summary>
            Regenerated line info.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.CLEANFAXDATA tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.CleanFaxData.CLEAN">
            <summary>
            No errors detected.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.CleanFaxData.REGENERATED">
            <summary>
            Receiver regenerated lines.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.CleanFaxData.UNCLEAN">
            <summary>
            Uncorrected errors exist.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.ColorResponseUnit">
            <summary>
            Color curve accuracy.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.COLORRESPONSEUNIT tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ColorResponseUnit.CRU10S">
            <summary>
            Tenths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ColorResponseUnit.CRU100S">
            <summary>
            Hundredths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ColorResponseUnit.CRU1000S">
            <summary>
            Thousandths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ColorResponseUnit.CRU10000S">
            <summary>
            Ten-thousandths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ColorResponseUnit.CRU100000S">
            <summary>
            Hundred-thousandths.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Compression">
            <summary>
            Compression scheme.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.COMPRESSION tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.NONE">
            <summary>
            Dump mode.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.CCITTRLE">
            <summary>
            CCITT modified Huffman RLE.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.CCITTFAX3">
            <summary>
            CCITT Group 3 fax encoding.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.CCITT_T4">
            <summary>
            CCITT T.4 (TIFF 6 name for CCITT Group 3 fax encoding).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.CCITTFAX4">
            <summary>
            CCITT Group 4 fax encoding.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.CCITT_T6">
            <summary>
            CCITT T.6 (TIFF 6 name for CCITT Group 4 fax encoding).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.LZW">
            <summary>
            Lempel-Ziv &amp; Welch.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.OJPEG">
            <summary>
            Original JPEG / Old-style JPEG (6.0).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.JPEG">
            <summary>
            JPEG DCT compression. Introduced post TIFF rev 6.0.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.NEXT">
            <summary>
            NeXT 2-bit RLE.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.CCITTRLEW">
            <summary>
            CCITT RLE.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.PACKBITS">
            <summary>
            Macintosh RLE.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.THUNDERSCAN">
            <summary>
            ThunderScan RLE.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.IT8CTPAD">
            <summary>
            IT8 CT w/padding. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.IT8LW">
            <summary>
            IT8 Linework RLE. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.IT8MP">
            <summary>
            IT8 Monochrome picture. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.IT8BL">
            <summary>
            IT8 Binary line art. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.PIXARFILM">
            <summary>
            Pixar companded 10bit LZW. Reserved for Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.PIXARLOG">
            <summary>
            Pixar companded 11bit ZIP. Reserved for Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.DEFLATE">
            <summary>
            Deflate compression.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.ADOBE_DEFLATE">
            <summary>
            Deflate compression, as recognized by Adobe.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.DCS">
            <summary>
            Kodak DCS encoding.
            Reserved for Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.JBIG">
            <summary>
            ISO JBIG.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.SGILOG">
            <summary>
            SGI Log Luminance RLE.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.SGILOG24">
            <summary>
            SGI Log 24-bit packed.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Compression.JP2000">
            <summary>
            Leadtools JPEG2000.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.ExtraSample">
            <summary>
            Information about extra samples.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.EXTRASAMPLES tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ExtraSample.UNSPECIFIED">
            <summary>
            Unspecified data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ExtraSample.ASSOCALPHA">
            <summary>
            Associated alpha data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ExtraSample.UNASSALPHA">
            <summary>
            Unassociated alpha data.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.FaxMode">
            <summary>
            Group 3/4 format control.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.FAXMODE tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FaxMode.CLASSIC">
            <summary>
            Default, include RTC.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FaxMode.NORTC">
            <summary>
            No RTC at end of data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FaxMode.NOEOL">
            <summary>
            No EOL code at end of row.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FaxMode.BYTEALIGN">
            <summary>
            Byte align row.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FaxMode.WORDALIGN">
            <summary>
            Word align row.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FaxMode.CLASSF">
            <summary>
            TIFF Class F.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.FileType">
            <summary>
            Subfile data descriptor.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.SUBFILETYPE tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FileType.REDUCEDIMAGE">
            <summary>
            Reduced resolution version.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FileType.PAGE">
            <summary>
            One page of many.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FileType.MASK">
            <summary>
            Transparency mask.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.FillOrder">
            <summary>
            Data order within a byte.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.FILLORDER tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FillOrder.MSB2LSB">
            <summary>
            Most significant -> least.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FillOrder.LSB2MSB">
            <summary>
            Least significant -> most.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.GrayResponseUnit">
            <summary>
            Gray scale curve accuracy.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.GRAYRESPONSEUNIT tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.GrayResponseUnit.GRU10S">
            <summary>
            Tenths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.GrayResponseUnit.GRU100S">
            <summary>
            Hundredths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.GrayResponseUnit.GRU1000S">
            <summary>
            Thousandths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.GrayResponseUnit.GRU10000S">
            <summary>
            Ten-thousandths of a unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.GrayResponseUnit.GRU100000S">
            <summary>
            Hundred-thousandths.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Group3Opt">
            <summary>
            Options for CCITT Group 3/4 fax encoding.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.GROUP3OPTIONS / TiffTag.T4OPTIONS and
            TiffTag.GROUP4OPTIONS / TiffTag.T6OPTIONS tags.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Group3Opt.UNKNOWN">
            <summary>
            Unknown (uninitialized).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Group3Opt.ENCODING2D">
            <summary>
            2-dimensional coding.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Group3Opt.UNCOMPRESSED">
            <summary>
            Data not compressed.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Group3Opt.FILLBITS">
            <summary>
            Fill to byte boundary.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.InkSet">
            <summary>
            Inks in separated image.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.INKSET tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.InkSet.CMYK">
            <summary>
            Cyan-magenta-yellow-black color.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.InkSet.MULTIINK">
            <summary>
            Multi-ink or hi-fi color.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.JpegColorMode">
            <summary>
            Auto RGB&lt;=&gt;YCbCr convert.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.JPEGCOLORMODE tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.JpegColorMode.RAW">
            <summary>
            No conversion (default).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.JpegColorMode.RGB">
            <summary>
            Do auto conversion.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.JpegProc">
            <summary>
            JPEG processing algorithm.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.JPEGPROC tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.JpegProc.BASELINE">
            <summary>
            Baseline sequential.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.JpegProc.LOSSLESS">
            <summary>
            Huffman coded lossless.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.JpegTablesMode">
            <summary>
            Jpeg Tables Mode.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.JPEGTABLESMODE tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.JpegTablesMode.NONE">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.JpegTablesMode.QUANT">
            <summary>
            Include quantization tables.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.JpegTablesMode.HUFF">
            <summary>
            Include Huffman tables.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.OFileType">
            <summary>
            Kind of data in subfile.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.OSUBFILETYPE tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.OFileType.IMAGE">
            <summary>
            Full resolution image data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.OFileType.REDUCEDIMAGE">
            <summary>
            Reduced size image data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.OFileType.PAGE">
            <summary>
            One page of many.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Orientation">
            <summary>
            Image orientation.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.ORIENTATION tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.TOPLEFT">
            <summary>
            Row 0 top, Column 0 lhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.TOPRIGHT">
            <summary>
            Row 0 top, Column 0 rhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.BOTRIGHT">
            <summary>
            Row 0 bottom, Column 0 rhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.BOTLEFT">
            <summary>
            Row 0 bottom, Column 0 lhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.LEFTTOP">
            <summary>
            Row 0 lhs, Column 0 top.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.RIGHTTOP">
            <summary>
            Row 0 rhs, Column 0 top.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.RIGHTBOT">
            <summary>
            Row 0 rhs, Column 0 bottom.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Orientation.LEFTBOT">
            <summary>
            Row 0 lhs, Column 0 bottom.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Photometric">
            <summary>
            Photometric interpretation.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.PHOTOMETRIC tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.MINISWHITE">
            <summary>
            Min value is white.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.MINISBLACK">
            <summary>
            Min value is black.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.RGB">
            <summary>
            RGB color model.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.PALETTE">
            <summary>
            Color map indexed.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.MASK">
            <summary>
            [obsoleted by TIFF rev. 6.0] Holdout mask.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.SEPARATED">
            <summary>
            Color separations.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.YCBCR">
            <summary>
            CCIR 601.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.CIELAB">
            <summary>
            1976 CIE L*a*b*.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.ICCLAB">
            <summary>
            ICC L*a*b*. Introduced post TIFF rev 6.0 by Adobe TIFF Technote 4.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.ITULAB">
            <summary>
            ITU L*a*b*.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.LOGL">
            <summary>
            CIE Log2(L).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Photometric.LOGLUV">
            <summary>
            CIE Log2(L) (u',v').
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.PlanarConfig">
            <summary>
            Storage organization.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.PLANARCONFIG tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.PlanarConfig.UNKNOWN">
            <summary>
            Unknown (uninitialized).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.PlanarConfig.CONTIG">
            <summary>
            Single image plane.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.PlanarConfig.SEPARATE">
            <summary>
            Separate planes of data.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Predictor">
            <summary>
            Prediction scheme w/ LZW.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.PREDICTOR tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Predictor.NONE">
            <summary>
            No prediction scheme used.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Predictor.HORIZONTAL">
            <summary>
            Horizontal differencing.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Predictor.FLOATINGPOINT">
            <summary>
            Floating point predictor.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.ResUnit">
            <summary>
            Units of resolutions.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.RESOLUTIONUNIT tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ResUnit.NONE">
            <summary>
            No meaningful units.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ResUnit.INCH">
            <summary>
            English.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.ResUnit.CENTIMETER">
            <summary>
            Metric.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.SampleFormat">
            <summary>
            Data sample format.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.SAMPLEFORMAT tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.SampleFormat.UINT">
            <summary>
            Unsigned integer data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.SampleFormat.INT">
            <summary>
            Signed integer data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.SampleFormat.IEEEFP">
            <summary>
            IEEE floating point data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.SampleFormat.VOID">
            <summary>
            Untyped data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.SampleFormat.COMPLEXINT">
            <summary>
            Complex signed int
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.SampleFormat.COMPLEXIEEEFP">
            <summary>
            Complex ieee floating
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Threshold">
            <summary>
            Thresholding used on data.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.THRESHHOLDING tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Threshold.BILEVEL">
            <summary>
            B&amp;W art scan.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Threshold.HALFTONE">
            <summary>
            Dithered scan.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Threshold.ERRORDIFFUSE">
            <summary>
            Usually Floyd-Steinberg.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffPrintFlags">
            <summary>
            Flags that can be passed to <see cref="O:BitMiracle.LibTiff.Classic.Tiff.PrintDirectory"/>
            method to control printing of data structures that are potentially very large. 
            </summary>
            <remarks>More than one flag can be used. Bit-or these flags to enable printing
            multiple items.</remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffPrintFlags.NONE">
            <summary>
            no extra info
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffPrintFlags.STRIPS">
            <summary>
            strips/tiles info
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffPrintFlags.CURVES">
            <summary>
            color/gray response curves
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffPrintFlags.COLORMAP">
            <summary>
            colormap
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffPrintFlags.JPEGQTABLES">
            <summary>
            JPEG Q matrices
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffPrintFlags.JPEGACTABLES">
            <summary>
            JPEG AC tables
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffPrintFlags.JPEGDCTABLES">
            <summary>
            JPEG DC tables
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffTag">
            <summary>
            TIFF tag definitions.
            </summary>
            <remarks>
            Joris Van Damme maintains
            <a href="http://www.awaresystems.be/imaging/tiff/tifftags.html" target="_blank">
            TIFF Tag Reference</a>, good source of tag information. It's an overview of known TIFF
            Tags with properties, short description, and other useful information.
            </remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IGNORE">
            <summary>
            Tag placeholder
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SUBFILETYPE">
            <summary>
            Subfile data descriptor.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.FileType"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.OSUBFILETYPE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Kind of data in subfile. For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.OFileType"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEWIDTH">
            <summary>
            Image width in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH">
            <summary>
            Image height in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE">
            <summary>
            Bits per channel (sample).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COMPRESSION">
            <summary>
            Data compression technique.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Compression"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PHOTOMETRIC">
            <summary>
            Photometric interpretation.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Photometric"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.THRESHHOLDING">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Thresholding used on data. For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Threshold"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CELLWIDTH">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Dithering matrix width.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CELLLENGTH">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Dithering matrix height.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER">
            <summary>
            Data order within a byte.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.FillOrder"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DOCUMENTNAME">
            <summary>
            Name of document which holds for image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDESCRIPTION">
            <summary>
            Information about image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MAKE">
            <summary>
            Scanner manufacturer name.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MODEL">
            <summary>
            Scanner model name/number.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS">
            <summary>
            Offsets to data strips.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ORIENTATION">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Image orientation. For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Orientation"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SAMPLESPERPIXEL">
            <summary>
            Samples per pixel.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ROWSPERSTRIP">
            <summary>
            Rows per strip of data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS">
            <summary>
            Bytes counts for strips.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MINSAMPLEVALUE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Minimum sample value.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MAXSAMPLEVALUE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Maximum sample value.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XRESOLUTION">
            <summary>
            Pixels/resolution in x.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YRESOLUTION">
            <summary>
            Pixels/resolution in y.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG">
            <summary>
            Storage organization.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PAGENAME">
            <summary>
            Page name image is from.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XPOSITION">
            <summary>
            X page offset of image lhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YPOSITION">
            <summary>
            Y page offset of image lhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FREEOFFSETS">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Byte offset to free block.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FREEBYTECOUNTS">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br/>
            Sizes of free blocks.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GRAYRESPONSEUNIT">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br/>
            Gray scale curve accuracy.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.GrayResponseUnit"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GRAYRESPONSECURVE">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br/>
            Gray scale response curve.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GROUP3OPTIONS">
            <summary>
            Options for CCITT Group 3 fax encoding. 32 flag bits.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Group3Opt"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.T4OPTIONS">
            <summary>
            TIFF 6.0 proper name alias for GROUP3OPTIONS.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GROUP4OPTIONS">
            <summary>
            Options for CCITT Group 4 fax encoding. 32 flag bits.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Group3Opt"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.T6OPTIONS">
            <summary>
            TIFF 6.0 proper name alias for GROUP4OPTIONS.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.RESOLUTIONUNIT">
            <summary>
            Units of resolutions.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.ResUnit"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PAGENUMBER">
            <summary>
            Page numbers of multi-page.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORRESPONSEUNIT">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br/>
            Color curve accuracy.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.ColorResponseUnit"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TRANSFERFUNCTION">
            <summary>
            Colorimetry info.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SOFTWARE">
            <summary>
            Name &amp; release.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DATETIME">
            <summary>
            Creation date and time.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ARTIST">
            <summary>
            Creator of image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.HOSTCOMPUTER">
            <summary>
            Machine where created.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PREDICTOR">
            <summary>
            Prediction scheme w/ LZW.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Predictor"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.WHITEPOINT">
            <summary>
            Image white point.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PRIMARYCHROMATICITIES">
            <summary>
            Primary chromaticities.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORMAP">
            <summary>
            RGB map for pallette image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.HALFTONEHINTS">
            <summary>
            Highlight + shadow info.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEWIDTH">
            <summary>
            Tile width in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILELENGTH">
            <summary>
            Tile height in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEOFFSETS">
            <summary>
            Offsets to data tiles.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEBYTECOUNTS">
            <summary>
            Byte counts for tiles.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BADFAXLINES">
            <summary>
            Lines with wrong pixel count.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CLEANFAXDATA">
            <summary>
            Regenerated line info.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.CleanFaxData"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CONSECUTIVEBADFAXLINES">
            <summary>
            Max consecutive bad lines.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SUBIFD">
            <summary>
            Subimage descriptors.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INKSET">
            <summary>
            Inks in separated image.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.InkSet"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INKNAMES">
            <summary>
            ASCII names of inks.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.NUMBEROFINKS">
            <summary>
            Number of inks.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DOTRANGE">
            <summary>
            0% and 100% dot codes.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TARGETPRINTER">
            <summary>
            Separation target.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXTRASAMPLES">
            <summary>
            Information about extra samples.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.ExtraSample"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SAMPLEFORMAT">
            <summary>
            Data sample format.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.SampleFormat"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SMINSAMPLEVALUE">
            <summary>
            Variable MinSampleValue.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SMAXSAMPLEVALUE">
            <summary>
            Variable MaxSampleValue.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CLIPPATH">
            <summary>
            ClipPath. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XCLIPPATHUNITS">
            <summary>
            XClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCLIPPATHUNITS">
            <summary>
            YClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INDEXED">
            <summary>
            Indexed. Introduced post TIFF rev 6.0 by Adobe TIFF Technote 3.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGTABLES">
            <summary>
            JPEG table stream. Introduced post TIFF rev 6.0.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.OPIPROXY">
            <summary>
            OPI Proxy. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGPROC">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            JPEG processing algorithm.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.JpegProc"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGIFOFFSET">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            Pointer to SOI marker.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGIFBYTECOUNT">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            JFIF stream length
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGRESTARTINTERVAL">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            Restart interval length.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGLOSSLESSPREDICTORS">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            Lossless proc predictor.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGPOINTTRANSFORM">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            Lossless point transform.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGQTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            Q matrice offsets.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGDCTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            DCT table offsets.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGACTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br/>
            AC coefficient offsets.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCBCRCOEFFICIENTS">
            <summary>
            RGB -> YCbCr transform.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCBCRSUBSAMPLING">
            <summary>
            YCbCr subsampling factors.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCBCRPOSITIONING">
            <summary>
            Subsample positioning.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.YCbCrPosition"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REFERENCEBLACKWHITE">
            <summary>
            Colorimetry info.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XMLPACKET">
            <summary>
            XML packet. Introduced post TIFF rev 6.0 by Adobe XMP Specification, January 2004.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.OPIIMAGEID">
            <summary>
            OPI ImageID. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REFPTS">
            <summary>
            Image reference points. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REGIONTACKPOINT">
            <summary>
            Region-xform tack point. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REGIONWARPCORNERS">
            <summary>
            Warp quadrilateral. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REGIONAFFINE">
            <summary>
            Affine transformation matrix. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MATTEING">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br/>
            Use EXTRASAMPLE tag. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DATATYPE">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br/>
            Use SAMPLEFORMAT tag. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDEPTH">
            <summary>
            Z depth of image. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEDEPTH">
            <summary>
            Z depth/data tile. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_IMAGEFULLWIDTH">
            <summary>
            Full image size in X. This tag is set when an image has been cropped out of a larger
            image. It reflect width of the original uncropped image. The XPOSITION tag can be used
            to determine the position of the smaller image in the larger one.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_IMAGEFULLLENGTH">
            <summary>
            Full image size in Y. This tag is set when an image has been cropped out of a larger
            image. It reflect height of the original uncropped image. The YPOSITION can be used
            to determine the position of the smaller image in the larger one.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_TEXTUREFORMAT">
            <summary>
            Texture map format. Used to identify special image modes and data used by Pixar's
            texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_WRAPMODES">
            <summary>
            S&amp;T wrap modes. Used to identify special image modes and data used by Pixar's
            texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_FOVCOT">
            <summary>
            Cotan(fov) for env. maps. Used to identify special image modes and data used by
            Pixar's texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_MATRIX_WORLDTOSCREEN">
            <summary>
            Used to identify special image modes and data used by Pixar's texture formats.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_MATRIX_WORLDTOCAMERA">
            <summary>
            Used to identify special image modes and data used by Pixar's texture formats.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.WRITERSERIALNUMBER">
            <summary>
            Device serial number. Private tag registered to Eastman Kodak.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COPYRIGHT">
            <summary>
            Copyright string. This tag is listed in the TIFF rev. 6.0 w/ unknown ownership.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.RICHTIFFIPTC">
            <summary>
            IPTC TAG from RichTIFF specifications.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8SITE">
            <summary>
            Site name. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8COLORSEQUENCE">
            <summary>
            Color seq. [RGB, CMYK, etc]. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8HEADER">
            <summary>
            DDES Header. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8RASTERPADDING">
            <summary>
            Raster scanline padding. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BITSPERRUNLENGTH">
            <summary>
            The number of bits in short run. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BITSPEREXTENDEDRUNLENGTH">
            <summary>
            The number of bits in long run. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8COLORTABLE">
            <summary>
            LW colortable. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8IMAGECOLORINDICATOR">
            <summary>
            BP/BL image color switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BKGCOLORINDICATOR">
            <summary>
            BP/BL bg color switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8IMAGECOLORVALUE">
            <summary>
            BP/BL image color value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BKGCOLORVALUE">
            <summary>
            BP/BL bg color value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8PIXELINTENSITYRANGE">
            <summary>
            MP pixel intensity value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8TRANSPARENCYINDICATOR">
            <summary>
            HC transparency switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8COLORCHARACTERIZATION">
            <summary>
            Color characterization table. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8HCUSAGE">
            <summary>
            HC usage indicator. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8TRAPINDICATOR">
            <summary>
            Trapping indicator (untrapped = 0, trapped = 1). Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8CMYKEQUIVALENT">
            <summary>
            CMYK color equivalents.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FRAMECOUNT">
            <summary>
            Sequence Frame Count. Private tag registered to Texas Instruments.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PHOTOSHOP">
            <summary>
            Private tag registered to Adobe for PhotoShop.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIFIFD">
            <summary>
            Pointer to EXIF private directory. This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ICCPROFILE">
            <summary>
            ICC profile data. ?? Private tag registered to Adobe. ??
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JBIGOPTIONS">
            <summary>
            JBIG options. Private tag registered to Pixel Magic.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GPSIFD">
            <summary>
            Pointer to GPS private directory. This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXRECVPARAMS">
            <summary>
            Encoded Class 2 ses. params. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXSUBADDRESS">
            <summary>
            Received SubAddr string. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXRECVTIME">
            <summary>
            Receive time (secs). Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXDCS">
            <summary>
            Encoded fax ses. params, Table 2/T.30. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.STONITS">
            <summary>
            Sample value to Nits. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FEDEX_EDR">
            <summary>
            Private tag registered to FedEx.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INTEROPERABILITYIFD">
            <summary>
            Pointer to Interoperability private directory.
            This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DNGVERSION">
            <summary>
            DNG version number. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DNGBACKWARDVERSION">
            <summary>
            DNG compatibility version. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.UNIQUECAMERAMODEL">
            <summary>
            Name for the camera model. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LOCALIZEDCAMERAMODEL">
            <summary>
            Localized camera model name. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CFAPLANECOLOR">
            <summary>
            CFAPattern->LinearRaw space mapping. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CFALAYOUT">
            <summary>
            Spatial layout of the CFA. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LINEARIZATIONTABLE">
            <summary>
            Lookup table description. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVELREPEATDIM">
            <summary>
            Repeat pattern size for the BlackLevel tag. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVEL">
            <summary>
            Zero light encoding level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVELDELTAH">
            <summary>
            Zero light encoding level differences (columns). Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVELDELTAV">
            <summary>
            Zero light encoding level differences (rows). Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.WHITELEVEL">
            <summary>
            Fully saturated encoding level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DEFAULTSCALE">
            <summary>
            Default scale factors. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DEFAULTCROPORIGIN">
            <summary>
            Origin of the final image area. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DEFAULTCROPSIZE">
            <summary>
            Size of the final image area. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORMATRIX1">
            <summary>
            XYZ->reference color space transformation matrix 1.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORMATRIX2">
            <summary>
            XYZ->reference color space transformation matrix 2.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CAMERACALIBRATION1">
            <summary>
            Calibration matrix 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CAMERACALIBRATION2">
            <summary>
            Calibration matrix 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REDUCTIONMATRIX1">
            <summary>
            Dimensionality reduction matrix 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REDUCTIONMATRIX2">
            <summary>
            Dimensionality reduction matrix 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ANALOGBALANCE">
            <summary>
            Gain applied the stored raw values. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTNEUTRAL">
            <summary>
            Selected white balance in linear reference space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTWHITEXY">
            <summary>
            Selected white balance in x-y chromaticity coordinates.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BASELINEEXPOSURE">
            <summary>
            How much to move the zero point. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BASELINENOISE">
            <summary>
            Relative noise level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BASELINESHARPNESS">
            <summary>
            Relative amount of sharpening. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BAYERGREENSPLIT">
            <summary>
            How closely the values of the green pixels in the blue/green rows 
            track the values of the green pixels in the red/green rows.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LINEARRESPONSELIMIT">
            <summary>
            Non-linear encoding range. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CAMERASERIALNUMBER">
            <summary>
            Camera's serial number. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LENSINFO">
            <summary>
            Information about the lens.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CHROMABLURRADIUS">
            <summary>
            Chroma blur radius. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ANTIALIASSTRENGTH">
            <summary>
            Relative strength of the camera's anti-alias filter.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SHADOWSCALE">
            <summary>
            Used by Adobe Camera Raw. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DNGPRIVATEDATA">
            <summary>
            Manufacturer's private data. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MAKERNOTESAFETY">
            <summary>
            Whether the EXIF MakerNote tag is safe to preserve along with the rest of the EXIF data.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CALIBRATIONILLUMINANT1">
            <summary>
            Illuminant 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CALIBRATIONILLUMINANT2">
            <summary>
            Illuminant 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BESTQUALITYSCALE">
            <summary>
            Best quality multiplier. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.RAWDATAUNIQUEID">
            <summary>
            Unique identifier for the raw image data. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ORIGINALRAWFILENAME">
            <summary>
            File name of the original raw file. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ORIGINALRAWFILEDATA">
            <summary>
            Contents of the original raw file. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ACTIVEAREA">
            <summary>
            Active (non-masked) pixels of the sensor. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MASKEDAREAS">
            <summary>
            List of coordinates of fully masked pixels. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTICCPROFILE">
            <summary>
            Used to map cameras's color space into ICC profile space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTPREPROFILEMATRIX">
            <summary>
            Used to map cameras's color space into ICC profile space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CURRENTICCPROFILE">
            <summary>
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CURRENTPREPROFILEMATRIX">
            <summary>
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSHUESHIFTVALUES">
            <summary>
            Undefined tag used by Eastman Kodak, hue shift correction data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXMODE">
            <summary>
            [pseudo tag. not written to file]<br/>
            Group 3/4 format control.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.FaxMode"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGQUALITY">
            <summary>
            [pseudo tag. not written to file]<br/>
            Compression quality level. Quality level is on the IJG 0-100 scale. Default value is 75.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGCOLORMODE">
            <summary>
            [pseudo tag. not written to file]<br/>
            Auto RGB&lt;=&gt;YCbCr convert.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.JpegColorMode"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGTABLESMODE">
            <summary>
            [pseudo tag. not written to file]<br/>
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.JpegTablesMode"/>.
            Default is <see cref="F:BitMiracle.LibTiff.Classic.JpegTablesMode.QUANT"/> | <see cref="F:BitMiracle.LibTiff.Classic.JpegTablesMode.HUFF"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXFILLFUNC">
            <summary>
            [pseudo tag. not written to file]<br/>
            G3/G4 fill function.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXARLOGDATAFMT">
            <summary>
            [pseudo tag. not written to file]<br/>
            PixarLogCodec I/O data sz.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSIMAGERTYPE">
            <summary>
            [pseudo tag. not written to file]<br/>
            Imager mode &amp; filter.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSINTERPMODE">
            <summary>
            [pseudo tag. not written to file]<br/>
            Interpolation mode.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSBALANCEARRAY">
            <summary>
            [pseudo tag. not written to file]<br/>
            Color balance values.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSCORRECTMATRIX">
            <summary>
            [pseudo tag. not written to file]<br/>
            Color correction values.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSGAMMA">
            <summary>
            [pseudo tag. not written to file]<br/>
            Gamma value.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSTOESHOULDERPTS">
            <summary>
            [pseudo tag. not written to file]<br/>
            Toe &amp; shoulder points.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSCALIBRATIONFD">
            <summary>
            [pseudo tag. not written to file]<br/>
            Calibration file description.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ZIPQUALITY">
            <summary>
            [pseudo tag. not written to file]<br/>
            Compression quality level.
            Quality level is on the ZLIB 1-9 scale. Default value is -1.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXARLOGQUALITY">
            <summary>
            [pseudo tag. not written to file]<br/>
            PixarLog uses same scale.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSCLIPRECTANGLE">
            <summary>
            [pseudo tag. not written to file]<br/>
            Area of image to acquire.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SGILOGDATAFMT">
            <summary>
            [pseudo tag. not written to file]<br/>
            SGILog user data format.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SGILOGENCODE">
            <summary>
            [pseudo tag. not written to file]<br/>
            SGILog data encoding control.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSURETIME">
            <summary>
            Exposure time.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FNUMBER">
            <summary>
            F number.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREPROGRAM">
            <summary>
            Exposure program.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SPECTRALSENSITIVITY">
            <summary>
            Spectral sensitivity.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_ISOSPEEDRATINGS">
            <summary>
            ISO speed rating.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_OECF">
            <summary>
            Optoelectric conversion factor.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXIFVERSION">
            <summary>
            Exif version.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DATETIMEORIGINAL">
            <summary>
            Date and time of original data generation.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DATETIMEDIGITIZED">
            <summary>
            Date and time of digital data generation.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_COMPONENTSCONFIGURATION">
            <summary>
            Meaning of each component.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_COMPRESSEDBITSPERPIXEL">
            <summary>
            Image compression mode.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SHUTTERSPEEDVALUE">
            <summary>
            Shutter speed.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_APERTUREVALUE">
            <summary>
            Aperture.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_BRIGHTNESSVALUE">
            <summary>
            Brightness.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREBIASVALUE">
            <summary>
            Exposure bias.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_MAXAPERTUREVALUE">
            <summary>
            Maximum lens aperture.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTDISTANCE">
            <summary>
            Subject distance.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_METERINGMODE">
            <summary>
            Metering mode.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_LIGHTSOURCE">
            <summary>
            Light source.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FLASH">
            <summary>
            Flash.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALLENGTH">
            <summary>
            Lens focal length.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTAREA">
            <summary>
            Subject area.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_MAKERNOTE">
            <summary>
            Manufacturer notes.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_USERCOMMENT">
            <summary>
            User comments.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBSECTIME">
            <summary>
            DateTime subseconds.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBSECTIMEORIGINAL">
            <summary>
            DateTimeOriginal subseconds.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBSECTIMEDIGITIZED">
            <summary>
            DateTimeDigitized subseconds.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FLASHPIXVERSION">
            <summary>
            Supported Flashpix version.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_COLORSPACE">
            <summary>
            Color space information.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_PIXELXDIMENSION">
            <summary>
            Valid image width.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_PIXELYDIMENSION">
            <summary>
            Valid image height.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_RELATEDSOUNDFILE">
            <summary>
            Related audio file.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FLASHENERGY">
            <summary>
            Flash energy.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SPATIALFREQUENCYRESPONSE">
            <summary>
            Spatial frequency response.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALPLANEXRESOLUTION">
            <summary>
            Focal plane X resolution.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALPLANEYRESOLUTION">
            <summary>
            Focal plane Y resolution.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALPLANERESOLUTIONUNIT">
            <summary>
            Focal plane resolution unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTLOCATION">
            <summary>
            Subject location.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREINDEX">
            <summary>
            Exposure index.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SENSINGMETHOD">
            <summary>
            Sensing method.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FILESOURCE">
            <summary>
            File source.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SCENETYPE">
            <summary>
            Scene type.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_CFAPATTERN">
            <summary>
            CFA pattern.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_CUSTOMRENDERED">
            <summary>
            Custom image processing.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREMODE">
            <summary>
            Exposure mode.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_WHITEBALANCE">
            <summary>
            White balance.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DIGITALZOOMRATIO">
            <summary>
            Digital zoom ratio.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALLENGTHIN35MMFILM">
            <summary>
            Focal length in 35 mm film.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SCENECAPTURETYPE">
            <summary>
            Scene capture type.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_GAINCONTROL">
            <summary>
            Gain control.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_CONTRAST">
            <summary>
            Contrast.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SATURATION">
            <summary>
            Saturation.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SHARPNESS">
            <summary>
            Sharpness.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DEVICESETTINGDESCRIPTION">
            <summary>
            Device settings description.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTDISTANCERANGE">
            <summary>
            Subject distance range.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_IMAGEUNIQUEID">
            <summary>
            Unique image ID.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffType">
            <summary>
            Tag data type.
            </summary>
            <remarks>Note: RATIONALs are the ratio of two 32-bit integer values.</remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.NOTYPE">
            <summary>
            Placeholder.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.ANY">
            <summary>
            For field descriptor searching.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.BYTE">
            <summary>
            8-bit unsigned integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.ASCII">
            <summary>
            8-bit bytes with last byte <c>null</c>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SHORT">
            <summary>
            16-bit unsigned integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.LONG">
            <summary>
            32-bit unsigned integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.RATIONAL">
            <summary>
            64-bit unsigned fraction.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SBYTE">
            <summary>
            8-bit signed integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.UNDEFINED">
            <summary>
            8-bit untyped data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SSHORT">
            <summary>
            16-bit signed integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SLONG">
            <summary>
            32-bit signed integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SRATIONAL">
            <summary>
            64-bit signed fraction.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.FLOAT">
            <summary>
            32-bit IEEE floating point.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.DOUBLE">
            <summary>
            64-bit IEEE floating point.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.IFD">
            <summary>
            32-bit unsigned integer (offset)
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.YCbCrPosition">
            <summary>
            Subsample positioning.<br/>
            Possible values for <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.YCBCRPOSITIONING tag.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.YCbCrPosition.CENTERED">
            <summary>
            As in PostScript Level 2
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.YCbCrPosition.COSITED">
            <summary>
            As in CCIR 601-1
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.FieldBit">
            <summary>
            Field bits (flags) for tags.
            </summary>
            <remarks>Field bits used to indicate fields that have been set in a directory, and to
            reference fields when manipulating a directory.</remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FieldBit.Ignore">
            <summary>
            This value is used to signify tags that are to be processed
            but otherwise ignored.<br/>
            This permits antiquated tags to be quietly read and discarded. Note that
            a bit <b>is</b> allocated for ignored tags; this is understood by the
            directory reading logic which uses this fact to avoid special-case handling.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FieldBit.Pseudo">
            <summary>
            This value is used to signify pseudo-tags.<br/>
            Pseudo-tags don't normally need field bits since they are not
            written to an output file (by definition). The library also has
            express logic to always query a codec for a pseudo-tag so allocating
            a field bit for one is a waste. If codec wants to promote the notion
            of a pseudo-tag being <i>set</i> or <i>unset</i> then it can do using
            internal state flags without polluting the field bit space defined
            for real tags.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FieldBit.Custom">
            <summary>
            This value is used to signify custom tags.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FieldBit.Codec">
            <summary>
            This value is used as a base (starting) value for codec-private tags.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.FieldBit.Last">
            <summary>
            Last usable value for field bit. All tags values should be less than this value.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.FieldValue">
            <summary>
            Holds a value of a Tiff tag.
            </summary>
            <remarks>
            <para>Simply put, it is a wrapper around System.Object, that helps to deal with
            unboxing and conversion of types a bit easier.
            </para><para>
            Please take a look at:
            http://blogs.msdn.com/ericlippert/archive/2009/03/19/representation-and-identity.aspx
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToByte">
            <summary>
            Retrieves value converted to byte.
            </summary>
            <returns>The value converted to byte.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToShort">
            <summary>
            Retrieves value converted to short.
            </summary>
            <returns>The value converted to short.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToUShort">
            <summary>
            Retrieves value converted to ushort.
            </summary>
            <returns>The value converted to ushort.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToInt">
            <summary>
            Retrieves value converted to int.
            </summary>
            <returns>The value converted to int.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToUInt">
            <summary>
            Retrieves value converted to uint.
            </summary>
            <returns>The value converted to uint.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToFloat">
            <summary>
            Retrieves value converted to float.
            </summary>
            <returns>The value converted to float.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToDouble">
            <summary>
            Retrieves value converted to double.
            </summary>
            <returns>The value converted to double.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToString">
            <summary>
            Retrieves value converted to string.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.        
            </returns>
            <remarks>If value is a byte array, then it gets converted to string using
            Latin1 encoding encoder.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.GetBytes">
            <summary>
            Retrieves value converted to byte array.
            </summary>
            <returns>Value converted to byte array.</returns>
            <remarks>
            <para>If value is byte array then it retrieved unaltered.</para>
            <para>If value is array of short, ushort, int, uint, float or double values then this
            array is converted to byte array</para><para>
            If value is a string then it gets converted to byte array using Latin1 encoding
            encoder.</para><para>
            If value is of any other type then <c>null</c> is returned.</para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToByteArray">
            <summary>
            Retrieves value converted to array of bytes.
            </summary>
            <returns>Value converted to array of bytes.</returns>
            <remarks><para>If value is array of bytes then it retrieved unaltered.</para>
            <para>If value is array of short, ushort, int or uint values then each element of
            field value gets converted to byte and added to resulting array.</para>
            <para>If value is string then it gets converted to byte[] using Latin1 encoding
            encoder.</para><para>
            If value is of any other type then null is returned.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToShortArray">
            <summary>
            Retrieves value converted to array of short values.
            </summary>
            <returns>Value converted to array of short values.</returns>
            <remarks><para>If value is array of short values then it retrieved unaltered.</para>
            <para>If value is array of bytes then each pair of bytes is converted to short and
            added to resulting array. If value contains odd amount of bytes, then null is
            returned.</para><para>
            If value is array of ushort, int or uint values then each element of field value gets
            converted to short and added to resulting array.</para><para>
            If value is of any other type then null is returned.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToUShortArray">
            <summary>
            Retrieves value converted to array of ushort values.
            </summary>
            <returns>Value converted to array of ushort values.</returns>
            <remarks><para>If value is array of ushort values then it retrieved unaltered.</para>
            <para>If value is array of bytes then each pair of bytes is converted to ushort and
            added to resulting array. If value contains odd amount of bytes, then null is
            returned.</para><para>
            If value is array of short, int or uint values then each element of field value gets
            converted to ushort and added to resulting array.</para><para>
            If value is of any other type then null is returned.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToIntArray">
            <summary>
            Retrieves value converted to array of int values.
            </summary>
            <returns>Value converted to array of int values.</returns>
            <remarks><para>If value is array of int values then it retrieved unaltered.</para>
            <para>If value is array of bytes then each 4 bytes are converted to int and added to
            resulting array. If value contains amount of bytes that can't be divided by 4 without
            remainder, then null is returned.</para>
            <para>If value is array of short, ushort or uint values then each element of
            field value gets converted to int and added to resulting array.</para><para>
            If value is of any other type then null is returned.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToUIntArray">
            <summary>
            Retrieves value converted to array of uint values.
            </summary>
            <returns>Value converted to array of uint values.</returns>
            <remarks><para>If value is array of uint values then it retrieved unaltered.</para>
            <para>If value is array of bytes then each 4 bytes are converted to uint and added to
            resulting array. If value contains amount of bytes that can't be divided by 4 without
            remainder, then null is returned.</para>
            <para>If value is array of short, ushort or int values then each element of
            field value gets converted to uint and added to resulting array.</para><para>
            If value is of any other type then null is returned.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToFloatArray">
            <summary>
            Retrieves value converted to array of float values.
            </summary>
            <returns>Value converted to array of float values.</returns>
            <remarks><para>If value is array of float values then it retrieved unaltered.</para>
            <para>If value is array of bytes then each 4 bytes are converted to float and added to
            resulting array. If value contains amount of bytes that can't be divided by 4 without
            remainder, then null is returned.</para>
            <para>If value is array of double values then each element of field value gets
            converted to float and added to resulting array.</para><para>
            If value is of any other type then null is returned.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.FieldValue.ToDoubleArray">
            <summary>
            Retrieves value converted to array of double values.
            </summary>
            <returns>Value converted to array of double values.</returns>
            <remarks><para>If value is array of double values then it retrieved unaltered.</para>
            <para>If value is array of bytes then each 8 bytes are converted to double and added to
            resulting array. If value contains amount of bytes that can't be divided by 8 without
            remainder, then null is returned.</para>
            <para>If value is array of float values then each element of field value gets
            converted to double and added to resulting array.</para><para>
            If value is of any other type then null is returned.</para></remarks>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.FieldValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffCodec">
            <summary>
            Base class for all codecs within the library.
            </summary>
            <remarks><para>
            A codec is a class that implements decoding, encoding, or decoding and encoding of a
            compression algorithm.
            </para><para>
            The library provides a collection of builtin codecs. More codecs may be registered
            through calls to the library and/or the builtin implementations may be overridden.
            </para></remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffCodec.m_tif">
            <summary>
            An instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffCodec.m_scheme">
            <summary>
            Compression scheme this codec impelements.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffCodec.m_name">
            <summary>
            Codec name.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.#ctor(BitMiracle.LibTiff.Classic.Tiff,BitMiracle.LibTiff.Classic.Compression,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffCodec"/> class.
            </summary>
            <param name="tif">An instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class.</param>
            <param name="scheme">The compression scheme for the codec.</param>
            <param name="name">The name of the codec.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.Init">
            <summary>
            Initializes this instance.
            </summary>
            <returns><c>true</c> if initialized successfully</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.SetupDecode">
            <summary>
            Setups the decoder part of the codec.
            </summary>
            <returns>
            <c>true</c> if this codec successfully setup its decoder part and can decode data;
            otherwise, <c>false</c>.
            </returns>
            <remarks>
            <b>SetupDecode</b> is called once before
            <see cref="M:BitMiracle.LibTiff.Classic.TiffCodec.PreDecode(System.Int16)"/>.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.PreDecode(System.Int16)">
            <summary>
            Prepares the decoder part of the codec for a decoding.
            </summary>
            <param name="plane">The zero-based sample plane index.</param>
            <returns><c>true</c> if this codec successfully prepared its decoder part and ready
            to decode data; otherwise, <c>false</c>.</returns>
            <remarks>
            <b>PreDecode</b> is called after <see cref="M:BitMiracle.LibTiff.Classic.TiffCodec.SetupDecode"/> and before decoding.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.DecodeRow(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one row of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/>.</param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.DecodeStrip(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one strip of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/>.</param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.DecodeTile(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one tile of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/>.</param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.SetupEncode">
            <summary>
            Setups the encoder part of the codec.
            </summary>
            <returns>
            <c>true</c> if this codec successfully setup its encoder part and can encode data;
            otherwise, <c>false</c>.
            </returns>
            <remarks>
            <b>SetupEncode</b> is called once before
            <see cref="M:BitMiracle.LibTiff.Classic.TiffCodec.PreEncode(System.Int16)"/>.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.PreEncode(System.Int16)">
            <summary>
            Prepares the encoder part of the codec for a encoding.
            </summary>
            <param name="plane">The zero-based sample plane index.</param>
            <returns><c>true</c> if this codec successfully prepared its encoder part and ready
            to encode data; otherwise, <c>false</c>.</returns>
            <remarks>
            <b>PreEncode</b> is called after <see cref="M:BitMiracle.LibTiff.Classic.TiffCodec.SetupEncode"/> and before encoding.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.PostEncode">
            <summary>
            Performs any actions after encoding required by the codec.
            </summary>
            <returns><c>true</c> if all post-encode actions succeeded; otherwise, <c>false</c></returns>
            <remarks>
            <b>PostEncode</b> is called after encoding and can be used to release any external 
            resources needed during encoding.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.EncodeRow(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one row of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/>.</param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.EncodeStrip(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one strip of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/>.</param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.EncodeTile(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one tile of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/>.</param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.Close">
            <summary>
            Flushes any internal data buffers and terminates current operation.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.Seek(System.Int32)">
            <summary>
            Seeks the specified row in the strip being processed.
            </summary>
            <param name="row">The row to seek.</param>
            <returns><c>true</c> if specified row was successfully found; otherwise, <c>false</c></returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.Cleanup">
            <summary>
            Cleanups the state of the codec.
            </summary>
            <remarks>
            <b>Cleanup</b> is called when codec is no longer needed (won't be used) and can be
            used for example to restore tag methods that were substituted.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.DefStripSize(System.Int32)">
            <summary>
            Calculates and/or constrains a strip size.
            </summary>
            <param name="size">The proposed strip size (may be zero or negative).</param>
            <returns>A strip size to use.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffCodec.DefTileSize(System.Int32@,System.Int32@)">
            <summary>
            Calculate and/or constrains a tile size
            </summary>
            <param name="width">The proposed tile width upon the call / tile width to use after the call.</param>
            <param name="height">The proposed tile height upon the call / tile height to use after the call.</param>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffCodec.CanEncode">
            <summary>
            Gets a value indicating whether this codec can encode data.
            </summary>
            <value>
            <c>true</c> if this codec can encode data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffCodec.CanDecode">
            <summary>
            Gets a value indicating whether this codec can decode data.
            </summary>
            <value>
            <c>true</c> if this codec can decode data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.PreDecode(System.Int16)">
            <summary>
            Prepares the decoder part of the codec for a decoding.
            </summary>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if this codec successfully prepared its decoder part and ready
            to decode data; otherwise, <c>false</c>.
            </returns>
            <remarks>
            	<b>PreDecode</b> is called after <see cref="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.SetupDecode"/> and before decoding.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.DecodeRow(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one row of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.DecodeStrip(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one strip of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.DecodeTile(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one tile of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.SetupEncode">
            <summary>
            Setups the encoder part of the codec.
            </summary>
            <returns>
            	<c>true</c> if this codec successfully setup its encoder part and can encode data;
            otherwise, <c>false</c>.
            </returns>
            <remarks>
            	<b>SetupEncode</b> is called once before
            <see cref="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.PreEncode(System.Int16)"/>.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.PreEncode(System.Int16)">
            <summary>
            Prepares the encoder part of the codec for a encoding.
            </summary>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if this codec successfully prepared its encoder part and ready
            to encode data; otherwise, <c>false</c>.
            </returns>
            <remarks>
            	<b>PreEncode</b> is called after <see cref="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.SetupEncode"/> and before encoding.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.PostEncode">
            <summary>
            Performs any actions after encoding required by the codec.
            </summary>
            <returns>
            	<c>true</c> if all post-encode actions succeeded; otherwise, <c>false</c>
            </returns>
            <remarks>
            	<b>PostEncode</b> is called after encoding and can be used to release any external
            resources needed during encoding.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.EncodeRow(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one row of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.EncodeStrip(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one strip of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.EncodeTile(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one tile of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Close">
            <summary>
            Flushes any internal data buffers and terminates current operation.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Cleanup">
            <summary>
            Cleanups the state of the codec.
            </summary>
            <remarks>
            	<b>Cleanup</b> is called when codec is no longer needed (won't be used) and can be
            used for example to restore tag methods that were substituted.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Fax3Decode1D(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decode the requested amount of G3 1D-encoded data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Fax3Decode2D(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decode the requested amount of G3 2D-encoded data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Fax3Encode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encode a buffer of pixels.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Fax3DecodeRLE(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decode the requested amount of RLE-encoded data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Fax4Decode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decode the requested amount of G4-encoded data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.Fax4Encode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encode the requested amount of data.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.CanEncode">
            <summary>
            Gets a value indicating whether this codec can encode data.
            </summary>
            <value>
            	<c>true</c> if this codec can encode data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.Internal.CCITTCodec.CanDecode">
            <summary>
            Gets a value indicating whether this codec can decode data.
            </summary>
            <value>
            	<c>true</c> if this codec can decode data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffTagMethods">
            <summary>
            Tiff tag methods.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTagMethods.DATATYPE_VOID">
            <summary>
            untyped data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTagMethods.DATATYPE_INT">
            <summary>
            signed integer data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTagMethods.DATATYPE_UINT">
            <summary>
            unsigned integer data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTagMethods.DATATYPE_IEEEFP">
            <summary>
            IEEE floating point data
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffTagMethods.SetField(BitMiracle.LibTiff.Classic.Tiff,BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.FieldValue[])">
            <summary>
            Sets the value(s) of a tag in a TIFF file/stream open for writing.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class.</param>
            <param name="tag">The tag.</param>
            <param name="value">The tag value(s).</param>
            <returns>
            <c>true</c> if tag value(s) were set successfully; otherwise, <c>false</c>.
            </returns>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.SetField(BitMiracle.LibTiff.Classic.TiffTag,System.Object[])"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffTagMethods.GetField(BitMiracle.LibTiff.Classic.Tiff,BitMiracle.LibTiff.Classic.TiffTag)">
            <summary>
            Gets the value(s) of a tag in an open TIFF file.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class.</param>
            <param name="tag">The tag.</param>
            <returns>The value(s) of a tag in an open TIFF file/stream as array of
            <see cref="T:BitMiracle.LibTiff.Classic.FieldValue"/> objects or <c>null</c> if there is no such tag set.</returns>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.GetField(BitMiracle.LibTiff.Classic.TiffTag)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffTagMethods.PrintDir(BitMiracle.LibTiff.Classic.Tiff,System.IO.Stream,BitMiracle.LibTiff.Classic.TiffPrintFlags)">
            <summary>
            Prints formatted description of the contents of the current directory to the
            specified stream using specified print (formatting) options.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class.</param>
            <param name="stream">The stream to print to.</param>
            <param name="flags">The print (formatting) options.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffTagMethods.setExtraSamples(BitMiracle.LibTiff.Classic.Internal.TiffDirectory,System.Int32@,BitMiracle.LibTiff.Classic.FieldValue[])">
            <summary>
            Install extra samples information.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Tiff">
            <summary>
            Tag Image File Format (TIFF)
            </summary>
            <remarks>
            Based on Rev 6.0 from
            <see href="http://partners.adobe.com/asn/developer/PDFS/TN/TIFF6.pdf" target="_blank"/>
            </remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.STRIPCHOP_DEFAULT">
            <summary>
            Support strip chopping (whether or not to convert single-strip 
            uncompressed images to mutiple strips of ~8Kb to reduce memory usage)
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.DEFAULT_EXTRASAMPLE_AS_ALPHA">
            <summary>
            Treat extra sample as alpha (default enabled). The RGBA interface 
            will treat a fourth sample with no EXTRASAMPLE_ value as being 
            ASSOCALPHA. Many packages produce RGBA files but don't mark the 
            alpha properly.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.CHECK_JPEG_YCBCR_SUBSAMPLING">
            <summary>
            Pick up YCbCr subsampling info from the JPEG data stream to support 
            files lacking the tag (default enabled).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.NOSTRIP">
            <summary>
            undefined state
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.NOTILE">
            <summary>
            undefined state
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_extender">
            <summary>
            Client Tag extension support (from Niles Ritter).
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.setupBuiltInCodecs">
            <summary>
            Compression schemes statically built into the library.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.tiffFieldInfo">
            <summary>
            NB:   THIS ARRAY IS ASSUMED TO BE SORTED BY TAG.
                  If a tag can have both LONG and SHORT types then the LONG must
                  be placed before the SHORT for writing to work properly.
                  
            NOTE: The second field (field_readcount) and third field
                  (field_writecount) sometimes use the values
                  TiffFieldInfo.Variable (-1), TiffFieldInfo.Variable2 (-3)
                  and TiffFieldInfo.Spp (-2). These values should be used but
                  would throw off the formatting of the code, so please
                  interpret the -1, -2 and -3  values accordingly.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.checkDirOffset(System.UInt32)">
            <summary>
            Checks the directory offset against the list of already seen directory
            offsets.
            </summary>
            <remarks> This is a trick to prevent IFD looping. The one can
            create TIFF file with looped directory pointers. We will maintain a
            list of already seen directories and check every IFD offset against
            that list.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchDirectory(System.UInt32,BitMiracle.LibTiff.Classic.Internal.TiffDirEntry[]@,System.UInt32@)">
            <summary>
            Reads IFD structure from the specified offset.
            </summary>
            <returns>The number of fields in the directory or 0 if failed.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchData(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Byte[])">
            <summary>
            Fetches a contiguous directory item.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchString(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.String@)">
            <summary>
            Fetches an ASCII item from the file.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchFloat(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry)">
            <summary>
            Fetch a single floating point value from the offset field and
            return it as a native float.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchByteArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Byte[])">
            <summary>
            Fetches an array of BYTE or SBYTE values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchShortArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Int16[])">
            <summary>
            Fetch an array of SHORT or SSHORT values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchLongArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Int32[])">
            <summary>
            Fetches an array of LONG or SLONG values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchRationalArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Single[])">
            <summary>
            Fetch an array of RATIONAL or SRATIONAL values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchFloatArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Single[])">
            <summary>
            Fetches an array of FLOAT values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchDoubleArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Double[])">
            <summary>
            Fetches an array of DOUBLE values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchAnyArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Double[])">
            <summary>
            Fetches an array of ANY values.
            </summary>
            <remarks>The actual values are returned as doubles which should be
            able hold all the types. Note in particular that we assume that the
            double return value vector is large enough to read in any
            fundamental type. We use that vector as a buffer to read in the base
            type vector and then convert it in place to double (from end to
            front of course).</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchNormalTag(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry)">
            <summary>
            Fetches a tag that is not handled by special case code.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchPerSampleShorts(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Int16@)">
            <summary>
            Fetches samples/pixel short values for the specified tag and verify
            that all values are the same.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchPerSampleLongs(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Int32@)">
            <summary>
            Fetches samples/pixel long values for the specified tag and verify
            that all values are the same.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchPerSampleAnys(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Double@)">
            <summary>
            Fetches samples/pixel ANY values for the specified tag and verify
            that all values are the same.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchStripThing(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry,System.Int32,System.Int32[]@)">
            <summary>
            Fetches a set of offsets or lengths.
            </summary>
            <remarks>While this routine says "strips", in fact it's also used
            for tiles.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fetchRefBlackWhite(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry)">
            <summary>
            Fetches and sets the RefBlackWhite tag.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.chopUpSingleUncompressedStrip">
            <summary>
            Replace a single strip (tile) of uncompressed data with multiple
            strips (tiles), each approximately 8Kbytes.
            </summary>
            <remarks>This is useful for dealing with large images or for
            dealing with machines with a limited amount of memory.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeDirectory(System.Boolean)">
            <summary>
            Writes the contents of the current directory to the specified file.
            </summary>
            <remarks>This routine doesn't handle overwriting a directory with
            auxiliary storage that's been changed.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeNormalTag(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,BitMiracle.LibTiff.Classic.TiffFieldInfo)">
            <summary>
            Writes tags that are not special cased.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.setupShortLong(BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Int32)">
            <summary>
            Setups a directory entry with either a SHORT or LONG type
            according to the value.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.setupShort(BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Int16)">
            <summary>
            Setups a SHORT directory entry
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeShortTable(BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Int32,System.Int16[][])">
            <summary>
            Setup a directory entry for an NxM table of shorts, where M is
            known to be 2**bitspersample, and write the associated indirect data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeByteArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Byte[])">
            <summary>
            Write/copy data associated with an ASCII or opaque tag value.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeShortArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Int16[])">
            <summary>
            Setup a directory entry of an array of SHORT or SSHORT and write
            the associated indirect values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeLongArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Int32[])">
            <summary>
            Setup a directory entry of an array of LONG or SLONG and write the
            associated indirect values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeRationalArray(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Single[])">
            <summary>
            Setup a directory entry of an array of RATIONAL or SRATIONAL and
            write the associated indirect values.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeAnyArray(BitMiracle.LibTiff.Classic.TiffType,BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Int32,System.Double[])">
            <summary>
            Writes an array of "type" values for a specified tag (i.e. this is
            a tag which is allowed to have different types, e.g. SMaxSampleType).
            Internally the data values are represented as double since a double
            can hold any of the TIFF tag types (yes, this should really be an abstract
            type tany_t for portability).  The data is converted into the specified
            type in a temporary buffer and then handed off to the appropriate array
            writer.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.writeData(BitMiracle.LibTiff.Classic.Internal.TiffDirEntry@,System.Byte[],System.Int32)">
            <summary>
            Writes a contiguous directory item.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.linkDirectory">
            <summary>
            Link the current directory into the directory chain for the file.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_name">
            <summary>
            name of open file
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_mode">
            <summary>
            open mode (O_*)
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_diroff">
            <summary>
            file offset of current directory
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_dir">
            <summary>
            internal rep of current directory
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_row">
            <summary>
            current scanline
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_curstrip">
            <summary>
            current strip for read/write
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_curtile">
            <summary>
            current tile for read/write
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_tilesize">
            <summary>
            # of bytes in a tile
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_scanlinesize">
            <summary>
            # of bytes in a scanline
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_rawdata">
            <summary>
            raw data buffer
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_rawdatasize">
            <summary>
            # of bytes in raw data buffer
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_rawcp">
            <summary>
            current spot in raw buffer
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_rawcc">
            <summary>
            bytes unread from raw buffer
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_clientdata">
            <summary>
            callback parameter
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_postDecodeMethod">
            <summary>
            post decoding method type
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_tagmethods">
            <summary>
            tag get/set/print routines
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_nextdiroff">
            <summary>
            file offset of following directory
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_dirlist">
            <summary>
            list of offsets to already seen directories to prevent IFD looping
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_dirlistsize">
            <summary>
            number of entires in offset list
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_dirnumber">
            <summary>
            number of already seen directories
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_header">
            <summary>
            file's header block
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_typeshift">
            <summary>
            data type shift counts
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_typemask">
            <summary>
            data type masks
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_curdir">
            <summary>
            current directory (index)
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_curoff">
            <summary>
            current offset for read/write
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_dataoff">
            <summary>
            current offset for writing dir
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_nsubifd">
            <summary>
            remaining subifds to write
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_subifdoff">
            <summary>
            offset for patching SubIFD link
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_col">
            <summary>
            current column (offset by row too)
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_fieldinfo">
            <summary>
            sorted table of registered tags
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_nfields">
            <summary>
            # entries in registered tag table
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_foundfield">
            <summary>
            cached pointer to already found tag
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_clientinfo">
            <summary>
            extra client information.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Tiff.m_stream">
            <summary>
            stream used for read|write|etc.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteCustomDirectory(System.Int64@)">
            <summary>
            Writes custom directory. See ticket #51.
            </summary>
            <param name="pdiroff">Output directory offset.</param>
            <returns><c>true</c> if succeeded; otherwise, <c>false</c></returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.postDecode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            post decoding routine
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.startStrip(System.Int32)">
            <summary>
            Set state to appear as if a strip has just been read in.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fillStrip(System.Int32)">
            <summary>
            Read the specified strip and setup for decoding.
            The data buffer is expanded, as necessary, to hold the strip's data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.fillTile(System.Int32)">
            <summary>
            Read the specified tile and setup for decoding. 
            The data buffer is expanded, as necessary, to hold the tile's data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.appendToStrip(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Appends the data to the specified strip.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetVersion">
            <summary>
            Gets the library version string.
            </summary>
            <returns>The library version string.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)">
            <summary>
            Gets the R component from ABGR value returned by 
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage">ReadRGBAImage</see>.
            </summary>
            <param name="abgr">The ABGR value.</param>
            <returns>The R component from ABGR value.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)">
            <summary>
            Gets the G component from ABGR value returned by 
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage">ReadRGBAImage</see>.
            </summary>
            <param name="abgr">The ABGR value.</param>
            <returns>The G component from ABGR value.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)">
            <summary>
            Gets the B component from ABGR value returned by 
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage">ReadRGBAImage</see>.
            </summary>
            <param name="abgr">The ABGR value.</param>
            <returns>The B component from ABGR value.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)">
            <summary>
            Gets the A component from ABGR value returned by 
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage">ReadRGBAImage</see>.
            </summary>
            <param name="abgr">The ABGR value.</param>
            <returns>The A component from ABGR value.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FindCodec(BitMiracle.LibTiff.Classic.Compression)">
            <summary>
            Retrieves the codec registered for the specified compression scheme.
            </summary>
            <param name="scheme">The compression scheme.</param>
            <returns>The codec registered for the specified compression scheme or <c>null</c>
            if there is no codec registered for the given scheme.</returns>
            <remarks>
            <para>
            LibTiff.Net supports a variety of compression schemes implemented by software codecs.
            Each codec adheres to a modular interface that provides for the decoding and encoding
            of image data; as well as some other methods for initialization, setup, cleanup, and
            the control of default strip and tile sizes. Codecs are identified by the associated
            value of the <see cref="T:BitMiracle.LibTiff.Classic.TiffTag"/>.COMPRESSION tag.
            </para>
            <para>
            Other compression schemes may be registered. Registered schemes can also override the
            built-in versions provided by the library.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.RegisterCodec(BitMiracle.LibTiff.Classic.TiffCodec)">
            <summary>
            Adds specified codec to a list of registered codec.
            </summary>
            <param name="codec">The codec to register.</param>
            <remarks>
            This method can be used to augment or override the set of codecs available to an
            application. If the <paramref name="codec"/> is for a scheme that already has a
            registered codec then it is overridden and any images with data encoded with this
            compression scheme will be decoded using the supplied codec.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.UnRegisterCodec(BitMiracle.LibTiff.Classic.TiffCodec)">
            <summary>
            Removes specified codec from a list of registered codecs.
            </summary>
            <param name="codec">The codec to remove from a list of registered codecs.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.IsCodecConfigured(BitMiracle.LibTiff.Classic.Compression)">
            <summary>
            Checks whether library has working codec for the specific compression scheme.
            </summary>
            <param name="scheme">The scheme to check.</param>
            <returns>
            <c>true</c> if the codec is configured and working; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetConfiguredCodecs">
            <summary>
            Retrieves an array of configured codecs, both built-in and registered by user.
            </summary>
            <returns>An array of configured codecs.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Realloc(System.Byte[],System.Int32)">
            <summary>
            Allocates new byte array of specified size and copies data from the existing to
            the new array.
            </summary>
            <param name="array">The existing array.</param>
            <param name="size">The number of elements in new array.</param>
            <returns>
            The new byte array of specified size with data from the existing array.
            </returns>
            <overloads>Allocates new array of specified size and copies data from the existing to
            the new array.</overloads>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Realloc(System.Int32[],System.Int32)">
            <summary>
            Allocates new integer array of specified size and copies data from the existing to
            the new array.
            </summary>
            <param name="array">The existing array.</param>
            <param name="size">The number of elements in new array.</param>
            <returns>
            The new integer array of specified size with data from the existing array.
            </returns>
            <remarks>Size of the array is in elements, not bytes.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Compare(System.Int16[],System.Int16[],System.Int32)">
            <summary>
            Compares specified number of elements in two arrays.
            </summary>
            <param name="first">The first array to compare.</param>
            <param name="second">The second array to compare.</param>
            <param name="elementCount">The number of elements to compare.</param>
            <returns>
            The difference between compared elements or 0 if all elements are equal.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)">
            <summary>
            Initializes new instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class and opens a TIFF file for
            reading or writing.
            </summary>
            <param name="fileName">The name of the file to open.</param>
            <param name="mode">The open mode. Specifies if the file is to be opened for
            reading ("r"), writing ("w"), or appending ("a") and, optionally, whether to override
            certain default aspects of library operation (see remarks).</param>
            <returns>The new instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class if specified file is
            successfully opened; otherwise, <c>null</c>.</returns>
            <remarks>
            <para>
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/> opens a TIFF file whose name is <paramref name="fileName"/>. When
            a file is opened for appending, existing data will not be touched; instead new data
            will be written as additional subfiles. If an existing file is opened for writing,
            all previous data is overwritten.
            </para>
            <para>
            If a file is opened for reading, the first TIFF directory in the file is automatically
            read (see <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetDirectory(System.Int16)"/> for reading directories other than the first). If
            a file is opened for writing or appending, a default directory is automatically
            created for writing subsequent data. This directory has all the default values
            specified in TIFF Revision 6.0: BitsPerSample = 1, ThreshHolding = Threshold.BILEVEL
            (bilevel art scan), FillOrder = MSB2LSB (most significant bit of each data byte is
            filled first), Orientation = TOPLEFT (the 0th row represents the visual top of the
            image, and the 0th column represents the visual left hand side), SamplesPerPixel = 1,
            RowsPerStrip = infinity, ResolutionUnit = INCH, and Compression = NONE. To alter
            these values, or to define values for additional fields, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetField(BitMiracle.LibTiff.Classic.TiffTag,System.Object[])"/> must
            be used.
            </para>
            <para>
            The <paramref name="mode"/> parameter can include the following flags in addition to
            the "r", "w", and "a" flags. Note however that option flags must follow the
            read-write-append specification.
            </para>
            <list type="table"><listheader>
            <term>Flag</term><description>Description</description></listheader>
            <item><term>l</term>
            <description>When creating a new file force information be written with Little-Endian
            byte order (but see below).</description></item>
            <item><term>b</term>
            <description>When creating a new file force information be written with Big-Endian
            byte order (but see below).</description></item>
            <item><term>L</term>
            <description>Force image data that is read or written to be treated with bits filled
            from Least Significant Bit (LSB) to Most Significant Bit (MSB). Note that this is the
            opposite to the way the library has worked from its inception.</description></item>
            <item><term>B</term>
            <description>Force image data that is read or written to be treated with bits filled
            from Most Significant Bit (MSB) to Least Significant Bit (LSB); this is the
            default.</description></item>
            <item><term>H</term>
            <description>Force image data that is read or written to be treated with bits filled
            in the same order as the native CPU.</description></item>
            <item><term>C</term>
            <description>Enable the use of "strip chopping" when reading images that are comprised
            of a single strip or tile of uncompressed data. Strip chopping is a mechanism by which
            the library will automatically convert the single-strip image to multiple strips, each
            of which has about 8 Kilobytes of data. This facility can be useful in reducing the
            amount of memory used to read an image because the library normally reads each strip
            in its entirety. Strip chopping does however alter the apparent contents of the image
            because when an image is divided into multiple strips it looks as though the
            underlying file contains multiple separate strips. The default behaviour is to enable 
            strip chopping.</description></item>
            <item><term>c</term>
            <description>Disable the use of strip chopping when reading images.</description></item>
            <item><term>h</term>
            <description>Read TIFF header only, do not load the first image directory. That could
            be useful in case of the broken first directory. We can open the file and proceed to
            the other directories.</description></item></list>
            <para>
            By default the library will create new files with the native byte-order of the CPU on
            which the application is run. This ensures optimal performance and is portable to any
            application that conforms to the TIFF specification. To force the library to use a
            specific byte-order when creating a new file the "b" and "l" option flags may be
            included in the <paramref name="mode"/> parameter; for example, "wb" or "wl".</para>
            <para>The use of the "l" and "b" flags is strongly discouraged. These flags are
            provided solely because numerous vendors do not correctly support TIFF; they only
            support one of the two byte orders. It is strongly recommended that you not use this
            feature except to deal with busted apps that write invalid TIFF.</para>
            <para>The "L", "B", and "H" flags are intended for applications that can optimize
            operations on data by using a particular bit order.  By default the library returns
            data in MSB2LSB bit order. Returning data in the bit order of the native CPU makes the
            most sense but also requires applications to check the value of the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER"/> tag; something they probably do not do right now.</para>
            <para>The "c" option permits applications that only want to look at the tags, for
            example, to get the unadulterated TIFF tag information.</para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ClientOpen(System.String,System.String,System.Object,BitMiracle.LibTiff.Classic.TiffStream)">
            <summary>
            Initializes new instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class and opens a stream with TIFF data
            for reading or writing.
            </summary>
            <param name="name">The name for the new instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class.</param>
            <param name="mode">The open mode. Specifies if the file is to be opened for
            reading ("r"), writing ("w"), or appending ("a") and, optionally, whether to override
            certain default aspects of library operation (see remarks for <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/>
            method for the list of the mode flags).</param>
            <param name="clientData">Some client data. This data is passed as parameter to every
            method of the <see cref="T:BitMiracle.LibTiff.Classic.TiffStream"/> object specified by the
            <paramref name="stream"/> parameter.</param>
            <param name="stream">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffStream"/> class to use for
            reading, writing and seeking of TIFF data.</param>
            <returns>The new instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class if stream is successfully
            opened; otherwise, <c>null</c>.</returns>
            <remarks>
            <para>
            This method can be used to read TIFF data from sources other than file. When custom
            stream class derived from <see cref="T:BitMiracle.LibTiff.Classic.TiffStream"/> is used it is possible to read (or
            write) TIFF data that reside in memory, database, etc.
            </para>
            <para>Please note, that <paramref name="name"/> is an arbitrary string used as
            ID for the created <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>. It's not required to be a file name or anything
            meaningful at all.</para>
            <para>
            Please read remarks for <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/> method for the list of option flags that
            can be specified in <paramref name="mode"/> parameter.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Close">
            <summary>
            Closes a previously opened TIFF file.
            </summary>
            <remarks>
            This method closes a file or stream that was previously opened with <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/>
            or <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ClientOpen(System.String,System.String,System.Object,BitMiracle.LibTiff.Classic.TiffStream)"/>.
            Any buffered data are flushed to the file/stream,
            including the contents of the current directory (if modified); and all resources
            are reclaimed.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Dispose">
            <summary>
            Frees and releases all resources allocated by this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetTagListCount">
            <summary>
            Gets the number of elements in the custom tag list.
            </summary>
            <returns>The number of elements in the custom tag list.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetTagListEntry(System.Int32)">
            <summary>
            Retrieves the custom tag with specified index.
            </summary>
            <param name="index">The zero-based index of a custom tag to retrieve.</param>
            <returns>The custom tag with specified index.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.MergeFieldInfo(BitMiracle.LibTiff.Classic.TiffFieldInfo[],System.Int32)">
            <summary>
            Merges given field information to existing one.
            </summary>
            <param name="info">The array of <see cref="T:BitMiracle.LibTiff.Classic.TiffFieldInfo"/> objects.</param>
            <param name="count">The number of items to use from the <paramref name="info"/> array.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FindFieldInfo(BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.TiffType)">
            <summary>
            Retrieves field information for the specified tag.
            </summary>
            <param name="tag">The tag to retrieve field information for.</param>
            <param name="type">The tiff data type to use us additional filter.</param>
            <returns>The field information for specified tag with specified type or <c>null</c> if
            the field information wasn't found.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FindFieldInfoByName(System.String,BitMiracle.LibTiff.Classic.TiffType)">
            <summary>
            Retrieves field information for the tag with specified name.
            </summary>
            <param name="name">The name of the tag to retrieve field information for.</param>
            <param name="type">The tiff data type to use us additional filter.</param>
            <returns>The field information for specified tag with specified type or <c>null</c> if
            the field information wasn't found.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FieldWithTag(BitMiracle.LibTiff.Classic.TiffTag)">
            <summary>
            Retrieves field information for the specified tag.
            </summary>
            <param name="tag">The tag to retrieve field information for.</param>
            <returns>The field information for specified tag or <c>null</c> if
            the field information wasn't found.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FieldWithName(System.String)">
            <summary>
            Retrieves field information for the tag with specified name.
            </summary>
            <param name="name">The name of the tag to retrieve field information for.</param>
            <returns>The field information for specified tag or <c>null</c> if
            the field information wasn't found.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetTagMethods">
            <summary>
            Gets the currently used tag methods.
            </summary>
            <returns>The currently used tag methods.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetTagMethods(BitMiracle.LibTiff.Classic.TiffTagMethods)">
            <summary>
            Sets the new tag methods to use.
            </summary>
            <param name="methods">Tag methods.</param>
            <returns>The previously used tag methods.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetClientInfo(System.String)">
            <summary>
            Gets the extra information with specified name associated with this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
            <param name="name">Name of the extra information to retrieve.</param>
            <returns>The extra information with specified name associated with
            this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> or <c>null</c> if extra information with specified
            name was not found.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetClientInfo(System.Object,System.String)">
            <summary>
            Associates extra information with this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
            <param name="data">The information to associate with this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.</param>
            <param name="name">The name (label) of the information.</param>
            <remarks>If there is already an extra information with the name specified by
            <paramref name="name"/> it will be replaced by the information specified by
            <paramref name="data"/>.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Flush">
            <summary>
            Flushes pending writes to an open TIFF file.
            </summary>
            <returns><c>true</c> if succeeded; otherwise, <c>false</c></returns>
            <remarks><see cref="M:BitMiracle.LibTiff.Classic.Tiff.Flush"/> causes any pending writes for the specified file
            (including writes for the current directory) to be done. In normal operation this call
            is never needed − the library automatically does any flushing required.
            </remarks>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.FlushData"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FlushData">
            <summary>
            Flushes any pending image data for the specified file to be written out.
            </summary>
            <returns><c>true</c> if succeeded; otherwise, <c>false</c></returns>
            <remarks><see cref="M:BitMiracle.LibTiff.Classic.Tiff.FlushData"/> flushes any pending image data for the specified file
            to be written out; directory-related data are not flushed. In normal operation this
            call is never needed − the library automatically does any flushing required.
            </remarks>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.Flush"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetField(BitMiracle.LibTiff.Classic.TiffTag)">
            <summary>
            Gets the value(s) of a tag in an open TIFF file.
            </summary>
            <param name="tag">The tag.</param>
            <returns>The value(s) of a tag in an open TIFF file as array of
            <see cref="T:BitMiracle.LibTiff.Classic.FieldValue"/> objects or <c>null</c> if there is no such tag set.</returns>
            <remarks>
            <para>
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetField(BitMiracle.LibTiff.Classic.TiffTag)"/> returns the value(s) of a tag or pseudo-tag associated with the
            current directory of the opened TIFF file. The tag is identified by
            <paramref name="tag"/>. The type and number of values returned is dependent on the
            tag being requested. You may want to consult
            <a href="54cbd23d-dc55-44b9-921f-3a06efc2f6ce.htm">"Well-known tags and their
            value(s) data types"</a> to become familiar with exact data types and calling
            conventions required for each tag supported by the library.
            </para>
            <para>
            A pseudo-tag is a parameter that is used to control the operation of the library but
            whose value is not read or written to the underlying file.
            </para>
            </remarks>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.GetFieldDefaulted(BitMiracle.LibTiff.Classic.TiffTag)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetFieldDefaulted(BitMiracle.LibTiff.Classic.TiffTag)">
            <summary>
            Gets the value(s) of a tag in an open TIFF file or default value(s) of a tag if a tag
            is not defined in the current directory and it has a default value(s).
            </summary>
            <param name="tag">The tag.</param>
            <returns>
            The value(s) of a tag in an open TIFF file as array of
            <see cref="T:BitMiracle.LibTiff.Classic.FieldValue"/> objects or <c>null</c> if there is no such tag set and
            tag has no default value.
            </returns>
            <remarks>
            <para>
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetFieldDefaulted(BitMiracle.LibTiff.Classic.TiffTag)"/> returns the value(s) of a tag or pseudo-tag associated
            with the current directory of the opened TIFF file or default value(s) of a tag if a
            tag is not defined in the current directory and it has a default value(s). The tag is
            identified by <paramref name="tag"/>. The type and number of values returned is
            dependent on the tag being requested. You may want to consult
            <a href="54cbd23d-dc55-44b9-921f-3a06efc2f6ce.htm">"Well-known tags and their
            value(s) data types"</a> to become familiar with exact data types and calling
            conventions required for each tag supported by the library.
            </para>
            <para>
            A pseudo-tag is a parameter that is used to control the operation of the library but
            whose value is not read or written to the underlying file.
            </para>
            </remarks>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.GetField(BitMiracle.LibTiff.Classic.TiffTag)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadDirectory">
            <summary>
            Reads the contents of the next TIFF directory in an open TIFF file/stream and makes
            it the current directory.
            </summary>
            <returns><c>true</c> if directory was successfully read; otherwise, <c>false</c> if an
            error was encountered, or if there are no more directories to be read.</returns>
            <remarks><para>Directories are read sequentially.</para>
            <para>Applications only need to call <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadDirectory"/> to read multiple
            subfiles in a single TIFF file/stream - the first directory in a file/stream is
            automatically read when <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/> or
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ClientOpen(System.String,System.String,System.Object,BitMiracle.LibTiff.Classic.TiffStream)"/> is called.
            </para><para>
            The images that have a single uncompressed strip or tile of data are automatically
            treated as if they were made up of multiple strips or tiles of approximately 8
            kilobytes each. This operation is done only in-memory; it does not alter the contents
            of the file/stream. However, the construction of the "chopped strips" is visible to
            the application through the number of strips returned by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.NumberOfStrips"/>
            or the number of tiles returned by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.NumberOfTiles"/>.</para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadCustomDirectory(System.Int64,BitMiracle.LibTiff.Classic.TiffFieldInfo[],System.Int32)">
            <summary>
            Reads a custom directory from the arbitrary offset within file/stream.
            </summary>
            <param name="offset">The directory offset.</param>
            <param name="info">The array of <see cref="T:BitMiracle.LibTiff.Classic.TiffFieldInfo"/> objects to merge to
            existing field information.</param>
            <param name="count">The number of items to use from
            the <paramref name="info"/> array.</param>
            <returns><c>true</c> if a custom directory was read successfully;
            otherwise, <c>false</c></returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadEXIFDirectory(System.Int64)">
            <summary>
            Reads an EXIF directory from the given offset within file/stream.
            </summary>
            <param name="offset">The directory offset.</param>
            <returns><c>true</c> if an EXIF directory was read successfully; 
            otherwise, <c>false</c></returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ScanlineSize">
            <summary>
            Calculates the size in bytes of a row of data as it would be returned in a call to
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadScanline"/>, or as it would be
            expected in a call to <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteScanline"/>.
            </summary>
            <returns>The size in bytes of a row of data.</returns>
            <remarks><b>ScanlineSize</b> calculates size for one sample plane only. Please use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.RasterScanlineSize"/> if you want to get size in bytes of a complete
            decoded and packed raster scanline.</remarks>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.RasterScanlineSize"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.RasterScanlineSize">
            <summary>
            Calculates the size in bytes of a complete decoded and packed raster scanline.
            </summary>
            <returns>The size in bytes of a complete decoded and packed raster scanline.</returns>
            <remarks>The value returned by <b>RasterScanlineSize</b> may be different from the
            value returned by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ScanlineSize"/> if data is stored as separate
            planes (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.DefaultStripSize(System.Int32)">
            <summary>
            Computes the number of rows for a reasonable-sized strip according to the current
            settings of the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEWIDTH"/>, <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/>
            and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.SAMPLESPERPIXEL"/> tags and any compression-specific requirements.
            </summary>
            <param name="estimate">The esimated value (may be zero).</param>
            <returns>The number of rows for a reasonable-sized strip according to the current
            tag settings and compression-specific requirements.</returns>
            <remarks>If the <paramref name="estimate"/> parameter is non-zero, then it is taken
            as an estimate of the desired strip size and adjusted according to any
            compression-specific requirements. The value returned by <b>DefaultStripSize</b> is
            typically used to define the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.ROWSPERSTRIP"/> tag. If there is no
            any unusual requirements <b>DefaultStripSize</b> tries to create strips that have
            approximately 8 kilobytes of uncompressed data.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.StripSize">
            <summary>
            Computes the number of bytes in a row-aligned strip.
            </summary>
            <returns>The number of bytes in a row-aligned strip</returns>
            <remarks>
            <para>
            <b>StripSize</b> returns the equivalent size for a strip of data as it would be
            returned in a call to <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadEncodedStrip(System.Int32,System.Byte[],System.Int32,System.Int32)"/> or as it would be expected in a
            call to <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteEncodedStrip"/>.
            </para><para>
            If the value of the field corresponding to <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.ROWSPERSTRIP"/> is
            larger than the recorded <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>, then the strip size is
            truncated to reflect the actual space required to hold the strip.</para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.VStripSize(System.Int32)">
            <summary>
            Computes the number of bytes in a row-aligned strip with specified number of rows.
            </summary>
            <param name="rowCount">The number of rows in a strip.</param>
            <returns>
            The number of bytes in a row-aligned strip with specified number of rows.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.RawStripSize(System.Int32)">
            <summary>
            Computes the number of bytes in a raw (i.e. not decoded) strip.
            </summary>
            <param name="strip">The zero-based index of a strip.</param>
            <returns>The number of bytes in a raw strip.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)">
            <summary>
            Computes which strip contains the specified coordinates (row, plane).
            </summary>
            <param name="row">The row.</param>
            <param name="plane">The sample plane.</param>
            <returns>The number of the strip that contains the specified coordinates.</returns>
            <remarks>
            A valid strip number is always returned; out-of-range coordinate values are clamped to
            the bounds of the image. The <paramref name="row"/> parameter is always used in
            calculating a strip. The <paramref name="plane"/> parameter is used only if data are
            organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.NumberOfStrips">
            <summary>
            Retrives the number of strips in the image.
            </summary>
            <returns>The number of strips in the image.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.DefaultTileSize(System.Int32@,System.Int32@)">
            <summary>
            Computes the pixel width and height of a reasonable-sized tile suitable for setting
            up the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.TILEWIDTH"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.TILELENGTH"/> tags.
            </summary>
            <param name="width">The proposed tile width upon the call / tile width to use
            after the call.</param>
            <param name="height">The proposed tile height upon the call / tile height to use
            after the call.</param>
            <remarks>If the <paramref name="width"/> and <paramref name="height"/> values passed
            in are non-zero, then they are adjusted to reflect any compression-specific
            requirements. The returned width and height are constrained to be a multiple of
            16 pixels to conform with the TIFF specification.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.TileSize">
            <summary>
            Compute the number of bytes in a row-aligned tile.
            </summary>
            <returns>The number of bytes in a row-aligned tile.</returns>
            <remarks><b>TileSize</b> returns the equivalent size for a tile of data as it would be
            returned in a call to <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadTile(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)"/> or as it would be expected in a
            call to <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteTile"/>.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.VTileSize(System.Int32)">
            <summary>
            Computes the number of bytes in a row-aligned tile with specified number of rows.
            </summary>
            <param name="rowCount">The number of rows in a tile.</param>
            <returns>
            The number of bytes in a row-aligned tile with specified number of rows.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.RawTileSize(System.Int32)">
            <summary>
            Computes the number of bytes in a raw (i.e. not decoded) tile.
            </summary>
            <param name="tile">The zero-based index of a tile.</param>
            <returns>The number of bytes in a raw tile.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.TileRowSize">
            <summary>
            Compute the number of bytes in each row of a tile.
            </summary>
            <returns>The number of bytes in each row of a tile.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)">
            <summary>
            Computes which tile contains the specified coordinates (x, y, z, plane).
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-coordinate.</param>
            <param name="plane">The sample plane.</param>
            <returns>The number of the tile that contains the specified coordinates.</returns>
            <remarks>
            A valid tile number is always returned; out-of-range coordinate values are
            clamped to the bounds of the image. The <paramref name="x"/> and <paramref name="y"/>
            parameters are always used in calculating a tile. The <paramref name="z"/> parameter
            is used if the image is deeper than 1 slice (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDEPTH"/> &gt; 1).
            The <paramref name="plane"/> parameter is used only if data are organized in separate
            planes (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CheckTile(System.Int32,System.Int32,System.Int32,System.Int16)">
            <summary>
            Checks whether the specified (x, y, z, plane) coordinates are within the bounds of
            the image.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-coordinate.</param>
            <param name="plane">The sample plane.</param>
            <returns><c>true</c> if the specified coordinates are within the bounds of the image;
            otherwise, <c>false</c>.</returns>
            <remarks>The <paramref name="x"/> parameter is checked against the value of the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEWIDTH"/> tag. The <paramref name="y"/> parameter is checked
            against the value of the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag. The <paramref name="z"/>
            parameter is checked against the value of the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDEPTH"/> tag
            (if defined). The <paramref name="plane"/> parameter is checked against the value of
            the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.SAMPLESPERPIXEL"/> tag if the data are organized in separate
            planes.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.NumberOfTiles">
            <summary>
            Retrives the number of tiles in the image.
            </summary>
            <returns>The number of tiles in the image.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Clientdata">
            <summary>
            Returns the custom client data associated with this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
            <returns>The custom client data associated with this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetClientdata(System.Object)">
            <summary>
            Asscociates a custom data with this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
            <param name="data">The data to associate.</param>
            <returns>The previously associated data.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetMode">
            <summary>
            Gets the mode with which the underlying file or stream was opened.
            </summary>
            <returns>The mode with which the underlying file or stream was opened.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetMode(System.Int32)">
            <summary>
            Sets the new mode for the underlying file or stream.
            </summary>
            <param name="mode">The new mode for the underlying file or stream.</param>
            <returns>The previous mode with which the underlying file or stream was opened.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.IsTiled">
            <summary>
            Gets the value indicating whether the image data of this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> has a
            tiled organization.
            </summary>
            <returns>
            <c>true</c> if the image data of this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> has a tiled organization or
            <c>false</c> if the image data of this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> is organized in strips.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.IsByteSwapped">
            <summary>
            Gets the value indicating whether the image data was in a different byte-order than
            the host computer.
            </summary>
            <returns><c>true</c> if the image data was in a different byte-order than the host
            computer or <c>false</c> if the TIFF file/stream and local host byte-orders are the
            same.</returns>
            <remarks><para>
            Note that <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadTile(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadEncodedTile(System.Int32,System.Byte[],System.Int32,System.Int32)"/>,
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadEncodedStrip(System.Int32,System.Byte[],System.Int32,System.Int32)"/> and
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadScanline"/> methods already
            normally perform byte swapping to local host order if needed.
            </para><para>
            Also note that <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRawTile(System.Int32,System.Byte[],System.Int32,System.Int32)"/> and <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRawStrip(System.Int32,System.Byte[],System.Int32,System.Int32)"/> do not
            perform byte swapping to local host order.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.IsUpSampled">
            <summary>
            Gets the value indicating whether the image data returned through the read interface
            methods is being up-sampled.
            </summary>
            <returns>
            <c>true</c> if the data is returned up-sampled; otherwise, <c>false</c>.
            </returns>
            <remarks>The value returned by this method can be useful to applications that want to
            calculate I/O buffer sizes to reflect this usage (though the usual strip and tile size
            routines already do this).</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.IsMSB2LSB">
            <summary>
            Gets the value indicating whether the image data is being returned in MSB-to-LSB
            bit order.
            </summary>
            <returns>
            <c>true</c> if the data is being returned in MSB-to-LSB bit order (i.e with bit 0 as
            the most significant bit); otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.IsBigEndian">
            <summary>
            Gets the value indicating whether given image data was written in big-endian order.
            </summary>
            <returns>
            <c>true</c> if given image data was written in big-endian order; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetStream">
            <summary>
            Gets the tiff stream.
            </summary>
            <returns>The tiff stream.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CurrentRow">
            <summary>
            Gets the current row that is being read or written.
            </summary>
            <returns>The current row that is being read or written.</returns>
            <remarks>The current row is updated each time a read or write is done.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CurrentDirectory">
            <summary>
            Gets the zero-based index of the current directory.
            </summary>
            <returns>The zero-based index of the current directory.</returns>
            <remarks>The zero-based index returned by this method is suitable for use with
            the <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetDirectory(System.Int16)"/> method.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.NumberOfDirectories">
            <summary>
            Gets the number of directories in a file.
            </summary>
            <returns>The number of directories in a file.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CurrentDirOffset">
            <summary>
            Retrieves the file/stream offset of the current directory.
            </summary>
            <returns>The file/stream offset of the current directory.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CurrentStrip">
            <summary>
            Gets the current strip that is being read or written.
            </summary>
            <returns>The current strip that is being read or written.</returns>
            <remarks>The current strip is updated each time a read or write is done.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CurrentTile">
            <summary>
            Gets the current tile that is being read or written.
            </summary>
            <returns>The current tile that is being read or written.</returns>
            <remarks>The current tile is updated each time a read or write is done.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadBufferSetup(System.Byte[],System.Int32)">
            <summary>
            Sets up the data buffer used to read raw (encoded) data from a file.
            </summary>
            <param name="buffer">The data buffer.</param>
            <param name="size">The buffer size.</param>
            <remarks>
            <para>
            This method is provided for client-control of the I/O buffers used by the library.
            Applications need never use this method; it's provided only for "intelligent clients"
            that wish to optimize memory usage and/or eliminate potential copy operations that can
            occur when working with images that have data stored without compression.
            </para>
            <para>
            If the <paramref name="buffer"/> is <c>null</c>, then a buffer of appropriate size is
            allocated by the library. Otherwise, the caller must guarantee that the buffer is
            large enough to hold any individual strip of raw data.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteBufferSetup(System.Byte[],System.Int32)">
            <summary>
            Sets up the data buffer used to write raw (encoded) data to a file.
            </summary>
            <param name="buffer">The data buffer.</param>
            <param name="size">The buffer size.</param>
            <remarks>
            <para>
            This method is provided for client-control of the I/O buffers used by the library.
            Applications need never use this method; it's provided only for "intelligent clients"
            that wish to optimize memory usage and/or eliminate potential copy operations that can
            occur when working with images that have data stored without compression.
            </para>
            <para>
            If the <paramref name="size"/> is -1 then the buffer size is selected to hold a
            complete tile or strip, or at least 8 kilobytes, whichever is greater. If the
            <paramref name="buffer"/> is <c>null</c>, then a buffer of appropriate size is
            allocated by the library.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetupStrips">
            <summary>
            Setups the strips.
            </summary>
            <returns><c>true</c> if setup successfully; otherwise, <c>false</c></returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteCheck(System.Boolean,System.String)">
            <summary>
            Verifies that file/stream is writable and that the directory information is
            setup properly.
            </summary>
            <param name="tiles">If set to <c>true</c> then ability to write tiles will be verified;
            otherwise, ability to write strips will be verified.</param>
            <param name="method">The name of the calling method.</param>
            <returns><c>true</c> if file/stream is writeable and the directory information is
            setup properly; otherwise, <c>false</c></returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FreeDirectory">
            <summary>
            Releases storage associated with current directory.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CreateDirectory">
            <summary>
            Creates a new directory within file/stream.
            </summary>
            <remarks>The newly created directory will not exist on the file/stream till
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteDirectory"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.CheckpointDirectory"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Flush"/>
            or <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Close"/> is called.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.LastDirectory">
            <summary>
            Returns an indication of whether the current directory is the last directory
            in the file.
            </summary>
            <returns><c>true</c> if current directory is the last directory in the file;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetDirectory(System.Int16)">
            <summary>
            Sets the directory with specified number as the current directory.
            </summary>
            <param name="number">The zero-based number of the directory to set as the
            current directory.</param>
            <returns><c>true</c> if the specified directory was set as current successfully;
            otherwise, <c>false</c></returns>
            <remarks><b>SetDirectory</b> changes the current directory and reads its contents with
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadDirectory"/>.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetSubDirectory(System.Int64)">
            <summary>
            Sets the directory at specified file/stream offset as the current directory.
            </summary>
            <param name="offset">The offset from the beginnig of the file/stream to the directory
            to set as the current directory.</param>
            <returns><c>true</c> if the directory at specified file offset was set as current
            successfully; otherwise, <c>false</c></returns>
            <remarks><b>SetSubDirectory</b> acts like <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetDirectory(System.Int16)"/>, except the
            directory is specified as a file offset instead of an index; this is required for
            accessing subdirectories linked through a SubIFD tag (e.g. thumbnail images).</remarks>        
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.UnlinkDirectory(System.Int16)">
            <summary>
            Unlinks the specified directory from the directory chain.
            </summary>
            <param name="number">The zero-based number of the directory to unlink.</param>
            <returns><c>true</c> if directory was unlinked successfully; otherwise, <c>false</c>.</returns>
            <remarks><b>UnlinkDirectory</b> does not removes directory bytes from the file/stream.
            It only makes them unused.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetField(BitMiracle.LibTiff.Classic.TiffTag,System.Object[])">
            <summary>
            Sets the value(s) of a tag in a TIFF file/stream open for writing.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The tag value(s).</param>
            <returns><c>true</c> if tag value(s) were set successfully; otherwise, <c>false</c>.</returns>
            <remarks><para>
            <b>SetField</b> sets the value of a tag or pseudo-tag in the current directory
            associated with the open TIFF file/stream. To set the value of a field the file/stream
            must have been previously opened for writing with <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/> or
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ClientOpen(System.String,System.String,System.Object,BitMiracle.LibTiff.Classic.TiffStream)"/>;
            pseudo-tags can be set whether the file was opened for
            reading or writing. The tag is identified by <paramref name="tag"/>.
            The type and number of values in <paramref name="value"/> is dependent on the tag
            being set. You may want to consult
            <a href="54cbd23d-dc55-44b9-921f-3a06efc2f6ce.htm">"Well-known tags and their
            value(s) data types"</a> to become familiar with exact data types and calling
            conventions required for each tag supported by the library.
            </para><para>
            A pseudo-tag is a parameter that is used to control the operation of the library but
            whose value is not read or written to the underlying file.
            </para><para>
            The field will be written to the file when/if the directory structure is updated.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteDirectory">
            <summary>
            Writes the contents of the current directory to the file and setup to create a new
            subfile (page) in the same file.
            </summary>
            <returns><c>true</c> if the current directory was written successfully;
            otherwise, <c>false</c></returns>
            <remarks>Applications only need to call <b>WriteDirectory</b> when writing multiple
            subfiles (pages) to a single TIFF file. <b>WriteDirectory</b> is automatically called
            by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Close"/> and <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Flush"/> to write a modified directory if the
            file is open for writing.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.CheckpointDirectory">
            <summary>
            Writes the current state of the TIFF directory into the file to make what is currently
            in the file/stream readable.
            </summary>
            <returns><c>true</c> if the current directory was rewritten successfully;
            otherwise, <c>false</c></returns>
            <remarks>Unlike <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteDirectory"/>, <b>CheckpointDirectory</b> does not free
            up the directory data structures in memory, so they can be updated (as strips/tiles
            are written) and written again. Reading such a partial file you will at worst get a
            TIFF read error for the first strip/tile encountered that is incomplete, but you will
            at least get all the valid data in the file before that. When the file is complete,
            just use <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteDirectory"/> as usual to finish it off cleanly.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.RewriteDirectory">
            <summary>
            Rewrites the contents of the current directory to the file and setup to create a new
            subfile (page) in the same file.
            </summary>        
            <returns><c>true</c> if the current directory was rewritten successfully;
            otherwise, <c>false</c></returns>
            <remarks>The <b>RewriteDirectory</b> operates similarly to <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteDirectory"/>,
            but can be called with directories previously read or written that already have an
            established location in the file. It will rewrite the directory, but instead of place
            it at it's old location (as <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteDirectory"/> would) it will place them at
            the end of the file, correcting the pointer from the preceeding directory or file
            header to point to it's new location. This is particularly important in cases where
            the size of the directory and pointed to data has grown, so it won’t fit in the space
            available at the old location. Note that this will result in the loss of the 
            previously used directory space.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.PrintDirectory(System.IO.Stream)">
            <summary>
            Prints formatted description of the contents of the current directory to the
            specified stream.
            </summary>
            <overloads>
            Prints formatted description of the contents of the current directory to the
            specified stream possibly using specified print options.
            </overloads>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.PrintDirectory(System.IO.Stream,BitMiracle.LibTiff.Classic.TiffPrintFlags)">
            <summary>
            Prints formatted description of the contents of the current directory to the
            specified stream using specified print (formatting) options.
            </summary>
            <param name="stream">The stream.</param>
            <param name="flags">The print (formatting) options.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32)">
            <summary>
            Reads and decodes a scanline of data from an open TIFF file/stream.
            </summary>
            <overloads>
            Reads and decodes a scanline of data from an open TIFF file/stream.
            </overloads>
            <param name="buffer">The buffer to place read and decoded image data to.</param>
            <param name="row">The zero-based index of scanline (row) to read.</param>
            <returns>
            <c>true</c> if image data were read and decoded successfully; otherwise, <c>false</c>
            </returns>
            <remarks>
            <para>
            <b>ReadScanline</b> reads the data for the specified <paramref name="row"/> into the
            user supplied data buffer <paramref name="buffer"/>. The data are returned
            decompressed and, in the native byte- and bit-ordering, but are otherwise packed
            (see further below). The <paramref name="buffer"/> must be large enough to hold an
            entire scanline of data. Applications should call the <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ScanlineSize"/>
            to find out the size (in bytes) of a scanline buffer. Applications should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32,System.Int16)"/> or
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32,System.Int32,System.Int16)"/> and specify correct sample plane if
            image data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            </para>
            <para>
            The library attempts to hide bit- and byte-ordering differences between the image and
            the native machine by converting data to the native machine order. Bit reversal is
            done if the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER"/> tag is opposite to the native
            machine bit order. 16- and 32-bit samples are automatically byte-swapped if the file
            was written with a byte order opposite to the native machine byte order.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32,System.Int16)">
            <summary>
            Reads and decodes a scanline of data from an open TIFF file/stream.
            </summary>
            <param name="buffer">The buffer to place read and decoded image data to.</param>
            <param name="row">The zero-based index of scanline (row) to read.</param>
            <param name="plane">The zero-based index of the sample plane.</param>
            <returns>
            	<c>true</c> if image data were read and decoded successfully; otherwise, <c>false</c>
            </returns>
            <remarks>
            <para>
            <b>ReadScanline</b> reads the data for the specified <paramref name="row"/> and
            specified sample plane <paramref name="plane"/> into the user supplied data buffer
            <paramref name="buffer"/>. The data are returned decompressed and, in the native
            byte- and bit-ordering, but are otherwise packed (see further below). The
            <paramref name="buffer"/> must be large enough to hold an entire scanline of data.
            Applications should call the <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ScanlineSize"/> to find out the size (in
            bytes) of a scanline buffer. Applications may use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32)"/> or specify 0 for <paramref name="plane"/>
            parameter if image data is contiguous (i.e not organized in separate planes, 
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.CONTIG).
            </para>
            <para>
            The library attempts to hide bit- and byte-ordering differences between the image and
            the native machine by converting data to the native machine order. Bit reversal is
            done if the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER"/> tag is opposite to the native
            machine bit order. 16- and 32-bit samples are automatically byte-swapped if the file
            was written with a byte order opposite to the native machine byte order.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Reads and decodes a scanline of data from an open TIFF file/stream.
            </summary>
            <param name="buffer">The buffer to place read and decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin storing read and decoded bytes.</param>
            <param name="row">The zero-based index of scanline (row) to read.</param>
            <param name="plane">The zero-based index of the sample plane.</param>
            <returns>
            	<c>true</c> if image data were read and decoded successfully; otherwise, <c>false</c>
            </returns>
            <remarks>
            <para>
            <b>ReadScanline</b> reads the data for the specified <paramref name="row"/> and
            specified sample plane <paramref name="plane"/> into the user supplied data buffer
            <paramref name="buffer"/>. The data are returned decompressed and, in the native
            byte- and bit-ordering, but are otherwise packed (see further below). The
            <paramref name="buffer"/> must be large enough to hold an entire scanline of data.
            Applications should call the <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ScanlineSize"/> to find out the size (in
            bytes) of a scanline buffer. Applications may use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32)"/> or specify 0 for <paramref name="plane"/>
            parameter if image data is contiguous (i.e not organized in separate planes,
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.CONTIG).
            </para>
            <para>
            The library attempts to hide bit- and byte-ordering differences between the image and
            the native machine by converting data to the native machine order. Bit reversal is
            done if the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER"/> tag is opposite to the native
            machine bit order. 16- and 32-bit samples are automatically byte-swapped if the file
            was written with a byte order opposite to the native machine byte order.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32)">
            <summary>
            Encodes and writes a scanline of data to an open TIFF file/stream.
            </summary>
            <overloads>Encodes and writes a scanline of data to an open TIFF file/stream.</overloads>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="row">The zero-based index of scanline (row) to place encoded data at.</param>
            <returns>
            	<c>true</c> if image data were encoded and written successfully; otherwise, <c>false</c>
            </returns>
            <remarks>
            <para>
            <b>WriteScanline</b> encodes and writes to a file at the specified
            <paramref name="row"/>. Applications should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32,System.Int16)"/> or
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32,System.Int32,System.Int16)"/> and specify correct sample plane
            parameter if image data in a file/stream is organized in separate planes (i.e
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            </para><para>
            The data are assumed to be uncompressed and in the native bit- and byte-order of the
            host machine. The data written to the file is compressed according to the compression
            scheme of the current TIFF directory (see further below). If the current scanline is
            past the end of the current subfile, the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>
            tag is automatically increased to include the scanline (except for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE, where the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag cannot be changed once the first data are
            written). If the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> is increased, the values of
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS"/> tags are
            similarly enlarged to reflect data written past the previous end of image.
            </para><para>
            The library writes encoded data using the native machine byte order. Correctly
            implemented TIFF readers are expected to do any necessary byte-swapping to correctly
            process image data with value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/> tag greater
            than 8. The library attempts to hide bit-ordering differences between the image and
            the native machine by converting data from the native machine order.
            </para><para>
            Once data are written to a file/stream for the current directory, the values of
            certain tags may not be altered; see
            <a href="54cbd23d-dc55-44b9-921f-3a06efc2f6ce.htm">"Well-known tags and their
            value(s) data types"</a> for more information.
            </para><para>
            It is not possible to write scanlines to a file/stream that uses a tiled organization.
            The <see cref="M:BitMiracle.LibTiff.Classic.Tiff.IsTiled"/> can be used to determine if the file/stream is organized as
            tiles or strips.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32,System.Int16)">
            <summary>
            Encodes and writes a scanline of data to an open TIFF file/stream.
            </summary>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="row">The zero-based index of scanline (row) to place encoded data at.</param>
            <param name="plane">The zero-based index of the sample plane.</param>
            <returns>
            	<c>true</c> if image data were encoded and written successfully; otherwise, <c>false</c>
            </returns>
            <remarks>
            <para>
            <b>WriteScanline</b> encodes and writes to a file at the specified
            <paramref name="row"/> and specified sample plane <paramref name="plane"/>.
            Applications may use <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32)"/> or specify 0 for
            <paramref name="plane"/> parameter if image data in a file/stream is contiguous (i.e
            not organized in separate planes,
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.CONTIG).
            </para><para>
            The data are assumed to be uncompressed and in the native bit- and byte-order of the
            host machine. The data written to the file is compressed according to the compression
            scheme of the current TIFF directory (see further below). If the current scanline is
            past the end of the current subfile, the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>
            tag is automatically increased to include the scanline (except for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE, where the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag cannot be changed once the first data are
            written). If the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> is increased, the values of
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS"/> tags are
            similarly enlarged to reflect data written past the previous end of image.
            </para><para>
            The library writes encoded data using the native machine byte order. Correctly
            implemented TIFF readers are expected to do any necessary byte-swapping to correctly
            process image data with value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/> tag greater
            than 8. The library attempts to hide bit-ordering differences between the image and
            the native machine by converting data from the native machine order.
            </para><para>
            Once data are written to a file/stream for the current directory, the values of
            certain tags may not be altered; see
            <a href="54cbd23d-dc55-44b9-921f-3a06efc2f6ce.htm">"Well-known tags and their
            value(s) data types"</a> for more information.
            </para><para>
            It is not possible to write scanlines to a file/stream that uses a tiled organization.
            The <see cref="M:BitMiracle.LibTiff.Classic.Tiff.IsTiled"/> can be used to determine if the file/stream is organized as
            tiles or strips.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes and writes a scanline of data to an open TIFF file/stream.
            </summary>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin reading bytes.</param>
            <param name="row">The zero-based index of scanline (row) to place encoded data at.</param>
            <param name="plane">The zero-based index of the sample plane.</param>
            <returns>
            	<c>true</c> if image data were encoded and written successfully; otherwise, <c>false</c>
            </returns>
            <remarks>
            <para>
            <b>WriteScanline</b> encodes and writes to a file at the specified
            <paramref name="row"/> and specified sample plane <paramref name="plane"/>.
            Applications may use <see cref="M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32)"/> or specify 0 for
            <paramref name="plane"/> parameter if image data in a file/stream is contiguous (i.e
            not organized in separate planes,
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.CONTIG).
            </para><para>
            The data are assumed to be uncompressed and in the native bit- and byte-order of the
            host machine. The data written to the file is compressed according to the compression
            scheme of the current TIFF directory (see further below). If the current scanline is
            past the end of the current subfile, the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>
            tag is automatically increased to include the scanline (except for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.CONTIG, where the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag cannot be changed once the first data are
            written). If the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> is increased, the values of
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS"/> tags are
            similarly enlarged to reflect data written past the previous end of image.
            </para><para>
            The library writes encoded data using the native machine byte order. Correctly
            implemented TIFF readers are expected to do any necessary byte-swapping to correctly
            process image data with value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/> tag greater
            than 8. The library attempts to hide bit-ordering differences between the image and
            the native machine by converting data from the native machine order.
            </para><para>
            Once data are written to a file/stream for the current directory, the values of
            certain tags may not be altered; see 
            <a href="54cbd23d-dc55-44b9-921f-3a06efc2f6ce.htm">"Well-known tags and their
            value(s) data types"</a> for more information.
            </para><para>
            It is not possible to write scanlines to a file/stream that uses a tiled organization.
            The <see cref="M:BitMiracle.LibTiff.Classic.Tiff.IsTiled"/> can be used to determine if the file/stream is organized as
            tiles or strips.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Reads the image and decodes it into RGBA format raster.
            </summary>
            <overloads>
            Reads the image and decodes it into RGBA format raster.
            </overloads>
            <param name="width">The raster width.</param>
            <param name="height">The raster height.</param>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <returns><c>true</c> if the image was successfully read and converted; otherwise,
            <c>false</c> is returned if an error was encountered.</returns>
            <remarks><para>
            <b>ReadRGBAImage</b> reads a strip- or tile-based image into memory, storing the
            result in the user supplied RGBA <paramref name="raster"/>. The raster is assumed to
            be an array of <paramref name="width"/> times <paramref name="height"/> 32-bit entries,
            where <paramref name="width"/> must be less than or equal to the width of the image
            (<paramref name="height"/> may be any non-zero size). If the raster dimensions are
            smaller than the image, the image data is cropped to the raster bounds. If the raster
            height is greater than that of the image, then the image data are placed in the lower
            part of the raster. Note that the raster is assumed to be organized such that the
            pixel at location (x, y) is <paramref name="raster"/>[y * width + x]; with the raster
            origin in the lower-left hand corner. Please use
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/> if you
            want to specify another raster origin.
            </para><para>
            Raster pixels are 8-bit packed red, green, blue, alpha samples. The
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)"/>, and
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)"/> should be used to access individual samples. Images without
            Associated Alpha matting information have a constant Alpha of 1.0 (255).
            </para><para>
            <b>ReadRGBAImage</b> converts non-8-bit images by scaling sample values. Palette,
            grayscale, bilevel, CMYK, and YCbCr images are converted to RGB transparently. Raster
            pixels are returned uncorrected by any colorimetry information present in the directory.
            </para><para>
            Samples must be either 1, 2, 4, 8, or 16 bits. Colorimetric samples/pixel must be
            either 1, 3, or 4 (i.e. SamplesPerPixel minus ExtraSamples).
            </para><para>
            Palette image colormaps that appear to be incorrectly written as 8-bit values are
            automatically scaled to 16-bits.
            </para><para>
            <b>ReadRGBAImage</b> is just a wrapper around the more general
            <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> facilities.
            </para><para>
            All error messages are directed to the current error handler.
            </para></remarks>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage(System.Int32,System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Reads the image and decodes it into RGBA format raster.
            </summary>
            <param name="width">The raster width.</param>
            <param name="height">The raster height.</param>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <param name="stopOnError">if set to <c>true</c> then an error will terminate the
            operation; otherwise method will continue processing data until all the possible data
            in the image have been requested.</param>
            <returns>
            <c>true</c> if the image was successfully read and converted; otherwise, <c>false</c>
            is returned if an error was encountered and stopOnError is <c>false</c>.
            </returns>
            <remarks><para>
            <b>ReadRGBAImage</b> reads a strip- or tile-based image into memory, storing the
            result in the user supplied RGBA <paramref name="raster"/>. The raster is assumed to
            be an array of <paramref name="width"/> times <paramref name="height"/> 32-bit entries,
            where <paramref name="width"/> must be less than or equal to the width of the image
            (<paramref name="height"/> may be any non-zero size). If the raster dimensions are
            smaller than the image, the image data is cropped to the raster bounds. If the raster
            height is greater than that of the image, then the image data are placed in the lower
            part of the raster. Note that the raster is assumed to be organized such that the
            pixel at location (x, y) is <paramref name="raster"/>[y * width + x]; with the raster
            origin in the lower-left hand corner. Please use
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/> if you
            want to specify another raster origin.
            </para><para>
            Raster pixels are 8-bit packed red, green, blue, alpha samples. The
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)"/>, and
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)"/> should be used to access individual samples. Images without
            Associated Alpha matting information have a constant Alpha of 1.0 (255).
            </para><para>
            <b>ReadRGBAImage</b> converts non-8-bit images by scaling sample values. Palette,
            grayscale, bilevel, CMYK, and YCbCr images are converted to RGB transparently. Raster
            pixels are returned uncorrected by any colorimetry information present in the directory.
            </para><para>
            Samples must be either 1, 2, 4, 8, or 16 bits. Colorimetric samples/pixel must be
            either 1, 3, or 4 (i.e. SamplesPerPixel minus ExtraSamples).
            </para><para>
            Palette image colormaps that appear to be incorrectly written as 8-bit values are
            automatically scaled to 16-bits.
            </para><para>
            <b>ReadRGBAImage</b> is just a wrapper around the more general
            <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> facilities.
            </para><para>
            All error messages are directed to the current error handler.
            </para></remarks>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented(System.Int32,System.Int32,System.Int32[],BitMiracle.LibTiff.Classic.Orientation)">
            <summary>
            Reads the image and decodes it into RGBA format raster using specified raster origin.
            </summary>
            <overloads>
            Reads the image and decodes it into RGBA format raster using specified raster origin.
            </overloads>
            <param name="width">The raster width.</param>
            <param name="height">The raster height.</param>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <param name="orientation">The raster origin position.</param>
            <returns>
            <c>true</c> if the image was successfully read and converted; otherwise, <c>false</c>
            is returned if an error was encountered.
            </returns>
            <remarks><para>
            <b>ReadRGBAImageOriented</b> reads a strip- or tile-based image into memory, storing the
            result in the user supplied RGBA <paramref name="raster"/>. The raster is assumed to
            be an array of <paramref name="width"/> times <paramref name="height"/> 32-bit entries,
            where <paramref name="width"/> must be less than or equal to the width of the image
            (<paramref name="height"/> may be any non-zero size). If the raster dimensions are
            smaller than the image, the image data is cropped to the raster bounds. If the raster
            height is greater than that of the image, then the image data placement depends on
            <paramref name="orientation"/>. Note that the raster is assumed to be organized such
            that the pixel at location (x, y) is <paramref name="raster"/>[y * width + x]; with
            the raster origin specified by <paramref name="orientation"/> parameter.
            </para><para>
            When <b>ReadRGBAImageOriented</b> is used with <see cref="T:BitMiracle.LibTiff.Classic.Orientation"/>.BOTLEFT for
            the <paramref name="orientation"/> the produced result is the same as retuned by
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/>.
            </para><para>
            Raster pixels are 8-bit packed red, green, blue, alpha samples. The
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)"/>, and
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)"/> should be used to access individual samples. Images without
            Associated Alpha matting information have a constant Alpha of 1.0 (255).
            </para><para>
            <b>ReadRGBAImageOriented</b> converts non-8-bit images by scaling sample values.
            Palette, grayscale, bilevel, CMYK, and YCbCr images are converted to RGB transparently.
            Raster pixels are returned uncorrected by any colorimetry information present in
            the directory.
            </para><para>
            Samples must be either 1, 2, 4, 8, or 16 bits. Colorimetric samples/pixel must be
            either 1, 3, or 4 (i.e. SamplesPerPixel minus ExtraSamples).
            </para><para>
            Palette image colormaps that appear to be incorrectly written as 8-bit values are
            automatically scaled to 16-bits.
            </para><para>
            <b>ReadRGBAImageOriented</b> is just a wrapper around the more general
            <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> facilities.
            </para><para>
            All error messages are directed to the current error handler.
            </para></remarks>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented(System.Int32,System.Int32,System.Int32[],BitMiracle.LibTiff.Classic.Orientation,System.Boolean)">
            <summary>
            Reads the image and decodes it into RGBA format raster using specified raster origin.
            </summary>
            <param name="width">The raster width.</param>
            <param name="height">The raster height.</param>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <param name="orientation">The raster origin position.</param>
            <param name="stopOnError">if set to <c>true</c> then an error will terminate the
            operation; otherwise method will continue processing data until all the possible data
            in the image have been requested.</param>
            <returns>
            <c>true</c> if the image was successfully read and converted; otherwise, <c>false</c>
            is returned if an error was encountered and stopOnError is <c>false</c>.
            </returns>
            <remarks><para>
            <b>ReadRGBAImageOriented</b> reads a strip- or tile-based image into memory, storing the
            result in the user supplied RGBA <paramref name="raster"/>. The raster is assumed to
            be an array of <paramref name="width"/> times <paramref name="height"/> 32-bit entries,
            where <paramref name="width"/> must be less than or equal to the width of the image
            (<paramref name="height"/> may be any non-zero size). If the raster dimensions are
            smaller than the image, the image data is cropped to the raster bounds. If the raster
            height is greater than that of the image, then the image data placement depends on
            <paramref name="orientation"/>. Note that the raster is assumed to be organized such
            that the pixel at location (x, y) is <paramref name="raster"/>[y * width + x]; with
            the raster origin specified by <paramref name="orientation"/> parameter.
            </para><para>
            When <b>ReadRGBAImageOriented</b> is used with <see cref="T:BitMiracle.LibTiff.Classic.Orientation"/>.BOTLEFT for
            the <paramref name="orientation"/> the produced result is the same as retuned by
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/>.
            </para><para>
            Raster pixels are 8-bit packed red, green, blue, alpha samples. The
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)"/>, and
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)"/> should be used to access individual samples. Images without
            Associated Alpha matting information have a constant Alpha of 1.0 (255).
            </para><para>
            <b>ReadRGBAImageOriented</b> converts non-8-bit images by scaling sample values.
            Palette, grayscale, bilevel, CMYK, and YCbCr images are converted to RGB transparently.
            Raster pixels are returned uncorrected by any colorimetry information present in
            the directory.
            </para><para>
            Samples must be either 1, 2, 4, 8, or 16 bits. Colorimetric samples/pixel must be
            either 1, 3, or 4 (i.e. SamplesPerPixel minus ExtraSamples).
            </para><para>
            Palette image colormaps that appear to be incorrectly written as 8-bit values are
            automatically scaled to 16-bits.
            </para><para>
            <b>ReadRGBAImageOriented</b> is just a wrapper around the more general
            <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> facilities.
            </para><para>
            All error messages are directed to the current error handler.
            </para></remarks>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])">
            <summary>
            Reads a whole strip of a strip-based image, decodes it and converts it to RGBA format.
            </summary>
            <param name="row">The row.</param>
            <param name="raster">The RGBA raster.</param>
            <returns><c>true</c> if the strip was successfully read and converted; otherwise,
            <c>false</c></returns>
            <remarks>
            <para>
            <b>ReadRGBAStrip</b> reads a single strip of a strip-based image into memory, storing
            the result in the user supplied RGBA <paramref name="raster"/>. If specified strip is
            the last strip, then it will only contain the portion of the strip that is actually
            within the image space. The raster is assumed to be an array of width times
            rowsperstrip 32-bit entries, where width is the width of the image
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEWIDTH"/>) and rowsperstrip is the maximum lines in a strip
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.ROWSPERSTRIP"/>).
            </para><para>
            The <paramref name="row"/> value should be the row of the first row in the strip
            (strip * rowsperstrip, zero based).
            </para><para>
            Note that the raster is assumed to be organized such that the pixel at location (x, y)
            is <paramref name="raster"/>[y * width + x]; with the raster origin in the lower-left
            hand corner of the strip. That is bottom to top organization. When reading a partial
            last strip in the file the last line of the image will begin at the beginning of
            the buffer.
            </para><para>
            Raster pixels are 8-bit packed red, green, blue, alpha samples. The
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)"/>, and
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)"/> should be used to access individual samples. Images without
            Associated Alpha matting information have a constant Alpha of 1.0 (255).
            </para><para>
            See <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> for more details on how various image types are
            converted to RGBA values.
            </para><para>
            Samples must be either 1, 2, 4, 8, or 16 bits. Colorimetric samples/pixel must be
            either 1, 3, or 4 (i.e. SamplesPerPixel minus ExtraSamples).
            </para><para>
            Palette image colormaps that appear to be incorrectly written as 8-bit values are
            automatically scaled to 16-bits.
            </para><para>
            <b>ReadRGBAStrip</b>'s main advantage over the similar
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/> function is that for
            large images a single buffer capable of holding the whole image doesn't need to be
            allocated, only enough for one strip. The <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])"/> function does a
            similar operation for tiled images.
            </para><para>
            <b>ReadRGBAStrip</b> is just a wrapper around the more general
            <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> facilities.
            </para><para>
            All error messages are directed to the current error handler.
            </para></remarks>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Reads a whole tile of a tile-based image, decodes it and converts it to RGBA format.
            </summary>
            <param name="col">The column.</param>
            <param name="row">The row.</param>
            <param name="raster">The RGBA raster.</param>
            <returns><c>true</c> if the strip was successfully read and converted; otherwise,
            <c>false</c></returns>
            <remarks>
            <para><b>ReadRGBATile</b> reads a single tile of a tile-based image into memory,
            storing the result in the user supplied RGBA <paramref name="raster"/>. The raster is
            assumed to be an array of width times length 32-bit entries, where width is the width
            of the tile (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.TILEWIDTH"/>) and length is the height of a tile
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.TILELENGTH"/>).
            </para><para>
            The <paramref name="col"/> and <paramref name="row"/> values are the offsets from the
            top left corner of the image to the top left corner of the tile to be read. They must
            be an exact multiple of the tile width and length.
            </para><para>
            Note that the raster is assumed to be organized such that the pixel at location (x, y)
            is <paramref name="raster"/>[y * width + x]; with the raster origin in the lower-left
            hand corner of the tile. That is bottom to top organization. Edge tiles which partly
            fall off the image will be filled out with appropriate zeroed areas.
            </para><para>
            Raster pixels are 8-bit packed red, green, blue, alpha samples. The
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)"/>, and
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)"/> should be used to access individual samples. Images without
            Associated Alpha matting information have a constant Alpha of 1.0 (255).
            </para><para>
            See <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> for more details on how various image types are
            converted to RGBA values.
            </para><para>
            Samples must be either 1, 2, 4, 8, or 16 bits. Colorimetric samples/pixel must be
            either 1, 3, or 4 (i.e. SamplesPerPixel minus ExtraSamples).
            </para><para>
            Palette image colormaps that appear to be incorrectly written as 8-bit values are
            automatically scaled to 16-bits.
            </para><para>
            <b>ReadRGBATile</b>'s main advantage over the similar
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/> function is that for
            large images a single buffer capable of holding the whole image doesn't need to be
            allocated, only enough for one tile. The <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])"/> function does a
            similar operation for stripped images.
            </para><para>
            <b>ReadRGBATile</b> is just a wrapper around the more general
            <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> facilities.
            </para><para>
            All error messages are directed to the current error handler.
            </para></remarks>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/>
            <seealso cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])"/>
            <seealso cref="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)"/>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)">
            <summary>
            Check the image to see if it can be converted to RGBA format.
            </summary>
            <param name="errorMsg">The error message (if any) gets placed here.</param>
            <returns><c>true</c> if the image can be converted to RGBA format; otherwise,
            <c>false</c> is returned and <paramref name="errorMsg"/> contains the reason why it
            is being rejected.</returns>
            <remarks><para>
            To convert the image to RGBA format please use
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage"/>,
            <see cref="O:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented"/>,
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])"/> or <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])"/>
            </para><para>
            Convertible images should follow this rules: samples must be either 1, 2, 4, 8, or
            16 bits; colorimetric samples/pixel must be either 1, 3, or 4 (i.e. SamplesPerPixel
            minus ExtraSamples).</para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.FileName">
            <summary>
            Gets the name of the file or ID string for this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
            <returns>The name of the file or ID string for this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.</returns>
            <remarks>If this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> was created using <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/> method then
            value of fileName parameter of <see cref="M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)"/> method is returned. If this
            <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> was created using
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ClientOpen(System.String,System.String,System.Object,BitMiracle.LibTiff.Classic.TiffStream)"/>
            then value of name parameter of
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ClientOpen(System.String,System.String,System.Object,BitMiracle.LibTiff.Classic.TiffStream)"/>
            method is returned.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetFileName(System.String)">
            <summary>
            Sets the new ID string for this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.
            </summary>
            <param name="name">The ID string for this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.</param>
            <returns>The previous file name or ID string for this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>.</returns>
            <remarks>Please note, that <paramref name="name"/> is an arbitrary string used as
            ID for this <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/>. It's not required to be a file name or anything
            meaningful at all.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Error(BitMiracle.LibTiff.Classic.Tiff,System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide error handling methods to (normally) write an error message
            to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="method">The method where an error is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            <para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which an error is detected.
            </para>
            <para>Applications that desire to capture control in the event of an error should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
            <overloads>
            Invokes the library-wide error handling methods to (normally) write an error message
            to the <see cref="P:System.Console.Error"/>.
            </overloads>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Error(System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide error handling methods to (normally) write an error message
            to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="method">The method where an error is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            <para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which an error is detected.
            </para>
            <para>Applications that desire to capture control in the event of an error should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ErrorExt(BitMiracle.LibTiff.Classic.Tiff,System.Object,System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide error handling methods to (normally) write an error message
            to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="clientData">The client data to be passed to error handler.</param>
            <param name="method">The method where an error is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            <para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which an error is detected.
            </para>
            <para>
            The <paramref name="clientData"/> parameter can be anything you want. It will be passed
            unchanged to the error handler. Default error handler does not use it. Only custom
            error handlers may make use of it.
            </para>
            <para>Applications that desire to capture control in the event of an error should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
            <overloads>
            Invokes the library-wide error handling methods to (normally) write an error message
            to the <see cref="P:System.Console.Error"/> and passes client data to the error handler.
            </overloads>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ErrorExt(System.Object,System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide error handling methods to (normally) write an error message
            to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="clientData">The client data to be passed to error handler.</param>
            <param name="method">The method where an error is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            <para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which an error is detected.
            </para>
            <para>
            The <paramref name="clientData"/> parameter can be anything you want. It will be passed
            unchanged to the error handler. Default error handler does not use it. Only custom
            error handlers may make use of it.
            </para>
            <para>Applications that desire to capture control in the event of an error should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Warning(BitMiracle.LibTiff.Classic.Tiff,System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide warning handling methods to (normally) write a warning message
            to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="method">The method in which a warning is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            <para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter,
            if not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which a warning is detected.
            </para>
            <para>Applications that desire to capture control in the event of a warning should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
            <overloads>
            Invokes the library-wide warning handling methods to (normally) write a warning message
            to the <see cref="P:System.Console.Error"/>.
            </overloads>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.Warning(System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide warning handling methods to (normally) write a warning message
            to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="method">The method in which a warning is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks><para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter,
            if not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which a warning is detected.
            </para>
            <para>Applications that desire to capture control in the event of a warning should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WarningExt(BitMiracle.LibTiff.Classic.Tiff,System.Object,System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide warning handling methods to (normally) write a warning message
            to the <see cref="P:System.Console.Error"/> and passes client data to the warning handler.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="clientData">The client data to be passed to warning handler.</param>
            <param name="method">The method in which a warning is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            <para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which a warning is detected.
            </para>
            <para>
            The <paramref name="clientData"/> parameter can be anything you want. It will be passed
            unchanged to the warning handler. Default warning handler does not use it. Only custom
            warning handlers may make use of it.
            </para>
            <para>Applications that desire to capture control in the event of a warning should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
            <overloads>
            Invokes the library-wide warning handling methods to (normally) write a warning message
            to the <see cref="P:System.Console.Error"/> and passes client data to the warning handler.
            </overloads>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WarningExt(System.Object,System.String,System.String,System.Object[])">
            <summary>
            Invokes the library-wide warning handling methods to (normally) write a warning message
            to the <see cref="P:System.Console.Error"/> and passes client data to the warning handler.
            </summary>
            <param name="clientData">The client data to be passed to warning handler.</param>
            <param name="method">The method in which a warning is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks><para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which a warning is detected.
            </para><para>
            The <paramref name="clientData"/> parameter can be anything you want. It will be passed
            unchanged to the warning handler. Default warning handler does not use it. Only custom
            warning handlers may make use of it.
            </para>
            <para>Applications that desire to capture control in the event of a warning should use
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> to override the default error and warning handler.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)">
            <summary>
            Sets an instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffErrorHandler"/> class as custom library-wide
            error and warning handler.
            </summary>
            <param name="errorHandler">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffErrorHandler"/> class
            to set as custom library-wide error and warning handler.</param>
            <returns>
            Previous error handler or <c>null</c> if there was no error handler set.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetTagExtender(BitMiracle.LibTiff.Classic.Tiff.TiffExtendProc)">
            <summary>
            Sets the tag extender method.
            </summary>
            <param name="extender">The tag extender method.</param>
            <returns>Previous tag extender method.</returns>
            <remarks>
            Extender method is called upon creation of each instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> object.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadTile(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)">
            <summary>
            Reads and decodes a tile of data from an open TIFF file/stream.
            </summary>
            <param name="buffer">The buffer to place read and decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin storing read and decoded bytes.</param>
            <param name="x">The x-coordinate of the pixel within a tile to be read and decoded.</param>
            <param name="y">The y-coordinate of the pixel within a tile to be read and decoded.</param>
            <param name="z">The z-coordinate of the pixel within a tile to be read and decoded.</param>
            <param name="plane">The zero-based index of the sample plane.</param>
            <returns>The number of bytes in the decoded tile or <c>-1</c> if an error occurred.</returns>
            <remarks>
            <para>
            The tile to read and decode is selected by the (x, y, z, plane) coordinates (i.e.
            <b>ReadTile</b> returns the data for the tile containing the specified coordinates.
            The data placed in <paramref name="buffer"/> are returned decompressed and, typically,
            in the native byte- and bit-ordering, but are otherwise packed (see further below).
            The buffer must be large enough to hold an entire tile of data. Applications should
            call the <see cref="M:BitMiracle.LibTiff.Classic.Tiff.TileSize"/> to find out the size (in bytes) of a tile buffer.
            The <paramref name="x"/> and <paramref name="y"/> parameters are always used by
            <b>ReadTile</b>. The <paramref name="z"/> parameter is used if the image is deeper
            than 1 slice (a value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDEPTH"/> &gt; 1). In other cases the
            value of <paramref name="z"/> is ignored. The <paramref name="plane"/> parameter is
            used only if data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE). In other
            cases the value of <paramref name="plane"/> is ignored.
            </para><para>
            The library attempts to hide bit- and byte-ordering differences between the image and
            the native machine by converting data to the native machine order. Bit reversal is
            done if the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER"/> tag is opposite to the native
            machine bit order. 16- and 32-bit samples are automatically byte-swapped if the file
            was written with a byte order opposite to the native machine byte order.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadEncodedTile(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a tile of data from an open TIFF file/stream, decompresses it and places
            specified amount of decompressed bytes into the user supplied buffer.
            </summary>
            <param name="tile">The zero-based index of the tile to read.</param>
            <param name="buffer">The buffer to place decompressed tile bytes to.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
            decompressed tile bytes.</param>
            <param name="count">The maximum number of decompressed tile bytes to be stored
            to buffer.</param>
            <returns>The actual number of bytes of data that were placed in buffer or -1 if an
            error was encountered.</returns>
            <remarks>
            <para>
            The value of <paramref name="tile"/> is a "raw tile number". That is, the caller
            must take into account whether or not the data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)"/> automatically does this when converting an (x, y, z, plane)
            coordinate quadruple to a tile number.</para>
            <para>To read a full tile of data the data buffer should typically be at least as
            large as the number returned by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.TileSize"/>. If the -1 passed in
            <paramref name="count"/> parameter, the whole tile will be read. You should be sure
            you have enough space allocated for the buffer.</para>
            <para>The library attempts to hide bit- and byte-ordering differences between the
            image and the native machine by converting data to the native machine order. Bit
            reversal is done if the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER"/> tag is opposite to the native
            machine bit order. 16- and 32-bit samples are automatically byte-swapped if the file
            was written with a byte order opposite to the native machine byte order.</para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRawTile(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the undecoded contents of a tile of data from an open TIFF file/stream and places
            specified amount of read bytes into the user supplied buffer.
            </summary>
            <param name="tile">The zero-based index of the tile to read.</param>
            <param name="buffer">The buffer to place read tile bytes to.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
            read tile bytes.</param>
            <param name="count">The maximum number of read tile bytes to be stored to buffer.</param>
            <returns>The actual number of bytes of data that were placed in buffer or -1 if an
            error was encountered.</returns>
            <remarks>
            <para>
            The value of <paramref name="tile"/> is a "raw tile number". That is, the caller
            must take into account whether or not the data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)"/> automatically does this when converting an (x, y, z, plane)
            coordinate quadruple to a tile number.</para>
            <para>To read a full tile of data the data buffer should typically be at least as
            large as the number returned by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.RawTileSize(System.Int32)"/>. If the -1 passed in
            <paramref name="count"/> parameter, the whole tile will be read. You should be sure
            you have enough space allocated for the buffer.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteTile(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes and writes a tile of data to an open TIFF file/stream.
            </summary>
            <overloads>Encodes and writes a tile of data to an open TIFF file/stream.</overloads>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="x">The x-coordinate of the pixel within a tile to be encoded and written.</param>
            <param name="y">The y-coordinate of the pixel within a tile to be encoded and written.</param>
            <param name="z">The z-coordinate of the pixel within a tile to be encoded and written.</param>
            <param name="plane">The zero-based index of the sample plane.</param>
            <returns>
            The number of encoded and written bytes or <c>-1</c> if an error occurred.
            </returns>
            <remarks>
            <para>
            The tile to place encoded data is selected by the (x, y, z, plane) coordinates (i.e.
            <b>WriteTile</b> writes data to the tile containing the specified coordinates.
            <b>WriteTile</b> (potentially) encodes the data <paramref name="buffer"/> and writes
            it to open file/stream. The buffer must contain an entire tile of data. Applications
            should call the <see cref="M:BitMiracle.LibTiff.Classic.Tiff.TileSize"/> to find out the size (in bytes) of a tile buffer.
            The <paramref name="x"/> and <paramref name="y"/> parameters are always used by
            <b>WriteTile</b>. The <paramref name="z"/> parameter is used if the image is deeper
            than 1 slice (a value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDEPTH"/> &gt; 1). In other cases the
            value of <paramref name="z"/> is ignored. The <paramref name="plane"/> parameter is
            used only if data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE). In other
            cases the value of <paramref name="plane"/> is ignored.
            </para><para>
            A correct value for the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag must be setup before
            writing; <b>WriteTile</b> does not support automatically growing the image on
            each write (as <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteScanline"/> does).
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteTile(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes and writes a tile of data to an open TIFF file/stream.
            </summary>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin reading bytes to be encoded and written.</param>
            <param name="x">The x-coordinate of the pixel within a tile to be encoded and written.</param>
            <param name="y">The y-coordinate of the pixel within a tile to be encoded and written.</param>
            <param name="z">The z-coordinate of the pixel within a tile to be encoded and written.</param>
            <param name="plane">The zero-based index of the sample plane.</param>
            <returns>The number of encoded and written bytes or <c>-1</c> if an error occurred.</returns>
            <remarks>
            <para>
            The tile to place encoded data is selected by the (x, y, z, plane) coordinates (i.e.
            <b>WriteTile</b> writes data to the tile containing the specified coordinates.
            <b>WriteTile</b> (potentially) encodes the data <paramref name="buffer"/> and writes
            it to open file/stream. The buffer must contain an entire tile of data. Applications
            should call the <see cref="M:BitMiracle.LibTiff.Classic.Tiff.TileSize"/> to find out the size (in bytes) of a tile buffer.
            The <paramref name="x"/> and <paramref name="y"/> parameters are always used by
            <b>WriteTile</b>. The <paramref name="z"/> parameter is used if the image is deeper
            than 1 slice (a value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDEPTH"/> &gt; 1). In other cases the
            value of <paramref name="z"/> is ignored. The <paramref name="plane"/> parameter is
            used only if data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE). In other
            cases the value of <paramref name="plane"/> is ignored.
            </para><para>
            A correct value for the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag must be setup before
            writing; <b>WriteTile</b> does not support automatically growing the image on
            each write (as <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteScanline"/> does).
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadEncodedStrip(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a strip of data from an open TIFF file/stream, decompresses it and places
            specified amount of decompressed bytes into the user supplied buffer.
            </summary>
            <param name="strip">The zero-based index of the strip to read.</param>
            <param name="buffer">The buffer to place decompressed strip bytes to.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
            decompressed strip bytes.</param>
            <param name="count">The maximum number of decompressed strip bytes to be stored
            to buffer.</param>
            <returns>The actual number of bytes of data that were placed in buffer or -1 if an
            error was encountered.</returns>
            <remarks>
            <para>
            The value of <paramref name="strip"/> is a "raw strip number". That is, the caller
            must take into account whether or not the data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)"/> automatically does this when converting an (row, plane) to a
            strip index.</para>
            <para>To read a full strip of data the data buffer should typically be at least
            as large as the number returned by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.StripSize"/>. If the -1 passed in
            <paramref name="count"/> parameter, the whole strip will be read. You should be sure
            you have enough space allocated for the buffer.</para>
            <para>The library attempts to hide bit- and byte-ordering differences between the
            image and the native machine by converting data to the native machine order. Bit
            reversal is done if the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER"/> tag is opposite to the native
            machine bit order. 16- and 32-bit samples are automatically byte-swapped if the file
            was written with a byte order opposite to the native machine byte order.</para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReadRawStrip(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the undecoded contents of a strip of data from an open TIFF file/stream and
            places specified amount of read bytes into the user supplied buffer.
            </summary>
            <param name="strip">The zero-based index of the strip to read.</param>
            <param name="buffer">The buffer to place read bytes to.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing
            read bytes.</param>
            <param name="count">The maximum number of read bytes to be stored to buffer.</param>
            <returns>The actual number of bytes of data that were placed in buffer or -1 if an
            error was encountered.</returns>
            <remarks>
            <para>
            The value of <paramref name="strip"/> is a "raw strip number". That is, the caller
            must take into account whether or not the data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)"/> automatically does this when converting an (row, plane) to a
            strip index.</para>
            <para>To read a full strip of data the data buffer should typically be at least
            as large as the number returned by <see cref="M:BitMiracle.LibTiff.Classic.Tiff.RawStripSize(System.Int32)"/>. If the -1 passed in
            <paramref name="count"/> parameter, the whole strip will be read. You should be sure
            you have enough space allocated for the buffer.</para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteEncodedStrip(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes and writes a strip of data to an open TIFF file/stream.
            </summary>
            <param name="strip">The zero-based index of the strip to write.</param>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="count">The maximum number of strip bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>
            The number of encoded and written bytes or <c>-1</c> if an error occurred.
            </returns>
            <overloads>Encodes and writes a strip of data to an open TIFF file/stream.</overloads>
            <remarks>
            <para>
            <b>WriteEncodedStrip</b> encodes <paramref name="count"/> bytes of raw data from
            <paramref name="buffer"/> and append the result to the specified strip; replacing any
            previously written data. Note that the value of <paramref name="strip"/> is a "raw
            strip number". That is, the caller must take into account whether or not the data are
            organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)"/> automatically does this when converting an (row, plane) to
            a strip index.
            </para><para>
            If there is no space for the strip, the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>
            tag is automatically increased to include the strip (except for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE, where the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag cannot be changed once the first data are
            written). If the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> is increased, the values of
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS"/> tags are
            similarly enlarged to reflect data written past the previous end of image.
            </para><para>
            The library writes encoded data using the native machine byte order. Correctly
            implemented TIFF readers are expected to do any necessary byte-swapping to correctly
            process image data with value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/> tag greater
            than 8.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteEncodedStrip(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encodes and writes a strip of data to an open TIFF file/stream.
            </summary>
            <param name="strip">The zero-based index of the strip to write.</param>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin reading bytes to be encoded and written.</param>
            <param name="count">The maximum number of strip bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>The number of encoded and written bytes or <c>-1</c> if an error occurred.</returns>
            <remarks>
            <para>
            <b>WriteEncodedStrip</b> encodes <paramref name="count"/> bytes of raw data from
            <paramref name="buffer"/> and append the result to the specified strip; replacing any
            previously written data. Note that the value of <paramref name="strip"/> is a "raw
            strip number". That is, the caller must take into account whether or not the data are
            organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)"/> automatically does this when converting an (row, plane) to
            a strip index.
            </para><para>
            If there is no space for the strip, the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>
            tag is automatically increased to include the strip (except for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE, where the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag cannot be changed once the first data are
            written). If the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> is increased, the values of
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS"/> tags are
            similarly enlarged to reflect data written past the previous end of image.
            </para><para>
            The library writes encoded data using the native machine byte order. Correctly
            implemented TIFF readers are expected to do any necessary byte-swapping to correctly
            process image data with value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/> tag greater
            than 8.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteRawStrip(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Writes a strip of raw data to an open TIFF file/stream.
            </summary>
            <overloads>Writes a strip of raw data to an open TIFF file/stream.</overloads>
            <param name="strip">The zero-based index of the strip to write.</param>
            <param name="buffer">The buffer with raw image data to be written.</param>
            <param name="count">The maximum number of strip bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>
            The number of written bytes or <c>-1</c> if an error occurred.
            </returns>
            <remarks>
            <para>
            <b>WriteRawStrip</b> appends <paramref name="count"/> bytes of raw data from
            <paramref name="buffer"/> to the specified strip; replacing any
            previously written data. Note that the value of <paramref name="strip"/> is a "raw
            strip number". That is, the caller must take into account whether or not the data are
            organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)"/> automatically does this when converting an (row, plane) to
            a strip index.
            </para><para>
            If there is no space for the strip, the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>
            tag is automatically increased to include the strip (except for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE, where the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag cannot be changed once the first data are
            written). If the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> is increased, the values of
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS"/> tags are
            similarly enlarged to reflect data written past the previous end of image.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteRawStrip(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a strip of raw data to an open TIFF file/stream.
            </summary>
            <param name="strip">The zero-based index of the strip to write.</param>
            <param name="buffer">The buffer with raw image data to be written.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin reading bytes to be written.</param>
            <param name="count">The maximum number of strip bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>The number of written bytes or <c>-1</c> if an error occurred.</returns>
            <remarks>
            <para>
            <b>WriteRawStrip</b> appends <paramref name="count"/> bytes of raw data from
            <paramref name="buffer"/> to the specified strip; replacing any
            previously written data. Note that the value of <paramref name="strip"/> is a "raw
            strip number". That is, the caller must take into account whether or not the data are
            organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)"/> automatically does this when converting an (row, plane) to
            a strip index.
            </para><para>
            If there is no space for the strip, the value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/>
            tag is automatically increased to include the strip (except for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE, where the
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag cannot be changed once the first data are
            written). If the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> is increased, the values of
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS"/> tags are
            similarly enlarged to reflect data written past the previous end of image.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteEncodedTile(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes and writes a tile of data to an open TIFF file/stream.
            </summary>
            <overloads>Encodes and writes a tile of data to an open TIFF file/stream.</overloads>
            <param name="tile">The zero-based index of the tile to write.</param>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="count">The maximum number of tile bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>
            The number of encoded and written bytes or <c>-1</c> if an error occurred.
            </returns>
            <remarks><para>
            <b>WriteEncodedTile</b> encodes <paramref name="count"/> bytes of raw data from
            <paramref name="buffer"/> and append the result to the end of the specified tile. Note
            that the value of <paramref name="tile"/> is a "raw tile number". That is, the caller
            must take into account whether or not the data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)"/> automatically does this when converting an (x, y, z, plane)
            coordinate quadruple to a tile number.
            </para><para>
            There must be space for the data. The function clamps individual writes to a tile to
            the tile size, but does not (and can not) check that multiple writes to the same tile
            were performed.
            </para><para>
            A correct value for the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag must be setup before
            writing; <b>WriteEncodedTile</b> does not support automatically growing the image on
            each write (as <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteScanline"/> does).
            </para><para>
            The library writes encoded data using the native machine byte order. Correctly
            implemented TIFF readers are expected to do any necessary byte-swapping to correctly
            process image data with value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/> tag greater
            than 8.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteEncodedTile(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encodes and writes a tile of data to an open TIFF file/stream.
            </summary>
            <param name="tile">The zero-based index of the tile to write.</param>
            <param name="buffer">The buffer with image data to be encoded and written.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin reading bytes to be encoded and written.</param>
            <param name="count">The maximum number of tile bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>The number of encoded and written bytes or <c>-1</c> if an error occurred.</returns>
            <remarks>
            <para>
            <b>WriteEncodedTile</b> encodes <paramref name="count"/> bytes of raw data from
            <paramref name="buffer"/> and append the result to the end of the specified tile. Note
            that the value of <paramref name="tile"/> is a "raw tile number". That is, the caller
            must take into account whether or not the data are organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)"/> automatically does this when converting an (x, y, z, plane)
            coordinate quadruple to a tile number.
            </para><para>
            There must be space for the data. The function clamps individual writes to a tile to
            the tile size, but does not (and can not) check that multiple writes to the same tile
            were performed.
            </para><para>
            A correct value for the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag must be setup before
            writing; <b>WriteEncodedTile</b> does not support automatically growing the image on
            each write (as <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteScanline"/> does).
            </para><para>
            The library writes encoded data using the native machine byte order. Correctly
            implemented TIFF readers are expected to do any necessary byte-swapping to correctly
            process image data with value of <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE"/> tag greater
            than 8.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteRawTile(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Writes a tile of raw data to an open TIFF file/stream.
            </summary>
            <overloads>Writes a tile of raw data to an open TIFF file/stream.</overloads>
            <param name="tile">The zero-based index of the tile to write.</param>
            <param name="buffer">The buffer with raw image data to be written.</param>
            <param name="count">The maximum number of tile bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>
            The number of written bytes or <c>-1</c> if an error occurred.
            </returns>
            <remarks>
            <para>
            <b>WriteRawTile</b> appends <paramref name="count"/> bytes of raw data to the end of
            the specified tile. Note that the value of <paramref name="tile"/> is a "raw tile
            number". That is, the caller must take into account whether or not the data are
            organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)"/> automatically does this when converting an (x, y, z, plane)
            coordinate quadruple to a tile number.
            </para><para>
            There must be space for the data. The function clamps individual writes to a tile to
            the tile size, but does not (and can not) check that multiple writes to the same tile
            were performed.
            </para><para>
            A correct value for the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag must be setup before
            writing; <b>WriteRawTile</b> does not support automatically growing the image on
            each write (as <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteScanline"/> does).
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.WriteRawTile(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a tile of raw data to an open TIFF file/stream.
            </summary>
            <param name="tile">The zero-based index of the tile to write.</param>
            <param name="buffer">The buffer with raw image data to be written.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin reading bytes to be written.</param>
            <param name="count">The maximum number of tile bytes to be read from
            <paramref name="buffer"/>.</param>
            <returns>The number of written bytes or <c>-1</c> if an error occurred.</returns>
            <remarks>
            <para>
            <b>WriteRawTile</b> appends <paramref name="count"/> bytes of raw data to the end of
            the specified tile. Note that the value of <paramref name="tile"/> is a "raw tile
            number". That is, the caller must take into account whether or not the data are
            organized in separate planes
            (<see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE).
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)"/> automatically does this when converting an (x, y, z, plane)
            coordinate quadruple to a tile number.
            </para><para>
            There must be space for the data. The function clamps individual writes to a tile to
            the tile size, but does not (and can not) check that multiple writes to the same tile
            were performed.
            </para><para>
            A correct value for the <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH"/> tag must be setup before
            writing; <b>WriteRawTile</b> does not support automatically growing the image on
            each write (as <see cref="O:BitMiracle.LibTiff.Classic.Tiff.WriteScanline"/> does).
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SetWriteOffset(System.Int64)">
            <summary>
            Sets the current write offset.
            </summary>
            <param name="offset">The write offset.</param>
            <remarks>This should only be used to set the offset to a known previous location
            (very carefully), or to 0 so that the next write gets appended to the end of the file.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.DataWidth(BitMiracle.LibTiff.Classic.TiffType)">
            <summary>
            Gets the number of bytes occupied by the item of given type.
            </summary>
            <param name="type">The type.</param>
            <returns>The number of bytes occupied by the <paramref name="type"/> or 0 if unknown
            data type is supplied.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabShort(System.Int16@)">
            <summary>
            Swaps the bytes in a single 16-bit item.
            </summary>
            <param name="value">The value to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabLong(System.Int32@)">
            <summary>
            Swaps the bytes in a single 32-bit item.
            </summary>
            <param name="value">The value to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabDouble(System.Double@)">
            <summary>
            Swaps the bytes in a single double-precision floating-point number.
            </summary>
            <param name="value">The value to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfShort(System.Int16[],System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of 16-bit items.
            </summary>
            <overloads>
            Swaps the bytes in specified number of values in the array of 16-bit items.
            </overloads>
            <param name="array">The array to swap bytes in.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfShort(System.Int16[],System.Int32,System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of 16-bit items starting at
            specified offset.
            </summary>
            <param name="array">The array to swap bytes in.</param>
            <param name="offset">The zero-based offset in <paramref name="array"/> at
            which to begin swapping bytes.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfTriples(System.Byte[],System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of triples (24-bit items).
            </summary>
            <overloads>
            Swaps the bytes in specified number of values in the array of triples (24-bit items).
            </overloads>
            <param name="array">The array to swap bytes in.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfTriples(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of triples (24-bit items)
            starting at specified offset.
            </summary>
            <param name="array">The array to swap bytes in.</param>
            <param name="offset">The zero-based offset in <paramref name="array"/> at
            which to begin swapping bytes.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfLong(System.Int32[],System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of 32-bit items.
            </summary>
            <overloads>
            Swaps the bytes in specified number of values in the array of 32-bit items.
            </overloads>
            <param name="array">The array to swap bytes in.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfLong(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of 32-bit items
            starting at specified offset.
            </summary>
            <param name="array">The array to swap bytes in.</param>
            <param name="offset">The zero-based offset in <paramref name="array"/> at
            which to begin swapping bytes.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfDouble(System.Double[],System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of double-precision
            floating-point numbers.
            </summary>
            <overloads>
            Swaps the bytes in specified number of values in the array of double-precision
            floating-point numbers.
            </overloads>
            <param name="array">The array to swap bytes in.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfDouble(System.Double[],System.Int32,System.Int32)">
            <summary>
            Swaps the bytes in specified number of values in the array of double-precision
            floating-point numbers starting at specified offset.
            </summary>
            <param name="array">The array to swap bytes in.</param>
            <param name="offset">The zero-based offset in <paramref name="array"/> at
            which to begin swapping bytes.</param>
            <param name="count">The number of items to swap bytes in.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReverseBits(System.Byte[],System.Int32)">
            <summary>
            Replaces specified number of bytes in <paramref name="buffer"/> with the
            equivalent bit-reversed bytes.
            </summary>
            <overloads>
            Replaces specified number of bytes in <paramref name="buffer"/> with the
            equivalent bit-reversed bytes.
            </overloads>
            <param name="buffer">The buffer to replace bytes in.</param>
            <param name="count">The number of bytes to process.</param>
            <remarks>
            This operation is performed with a lookup table, which can be retrieved using the
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetBitRevTable(System.Boolean)"/> method.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ReverseBits(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Replaces specified number of bytes in <paramref name="buffer"/> with the
            equivalent bit-reversed bytes starting at specified offset.
            </summary>
            <param name="buffer">The buffer to replace bytes in.</param>
            <param name="offset">The zero-based offset in <paramref name="buffer"/> at
            which to begin processing bytes.</param>
            <param name="count">The number of bytes to process.</param>
            <remarks>
            This operation is performed with a lookup table, which can be retrieved using the
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetBitRevTable(System.Boolean)"/> method.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.GetBitRevTable(System.Boolean)">
            <summary>
            Retrieves a bit reversal table.
            </summary>
            <param name="reversed">if set to <c>true</c> then bit reversal table will be
            retrieved; otherwise, the table that do not reverse bit values will be retrieved.</param>
            <returns>The bit reversal table.</returns>
            <remarks>If <paramref name="reversed"/> is <c>false</c> then the table that do not
            reverse bit values will be retrieved. It is a lookup table that can be used as an
            identity function; i.e. NoBitRevTable[n] == n.</remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ByteArrayToInts(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte buffer into array of 32-bit values.
            </summary>
            <param name="buffer">The byte buffer.</param>
            <param name="offset">The zero-based offset in <paramref name="buffer"/> at
            which to begin converting bytes.</param>
            <param name="count">The number of bytes to convert.</param>
            <returns>The array of 32-bit values.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.IntsToByteArray(System.Int32[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Converts array of 32-bit values into array of bytes.
            </summary>
            <param name="source">The array of 32-bit values.</param>
            <param name="srcOffset">The zero-based offset in <paramref name="source"/> at
            which to begin converting bytes.</param>
            <param name="srcCount">The number of 32-bit values to convert.</param>
            <param name="bytes">The byte array to store converted values at.</param>
            <param name="offset">The zero-based offset in <paramref name="bytes"/> at
            which to begin storing converted values.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ByteArrayToShorts(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte buffer into array of 16-bit values.
            </summary>
            <param name="buffer">The byte buffer.</param>
            <param name="offset">The zero-based offset in <paramref name="buffer"/> at
            which to begin converting bytes.</param>
            <param name="count">The number of bytes to convert.</param>
            <returns>The array of 16-bit values.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Tiff.ShortsToByteArray(System.Int16[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Converts array of 16-bit values into array of bytes.
            </summary>
            <param name="source">The array of 16-bit values.</param>
            <param name="srcOffset">The zero-based offset in <paramref name="source"/> at
            which to begin converting bytes.</param>
            <param name="srcCount">The number of 16-bit values to convert.</param>
            <param name="bytes">The byte array to store converted values at.</param>
            <param name="offset">The zero-based offset in <paramref name="bytes"/> at
            which to begin storing converted values.</param>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.Tiff.AssemblyVersion">
            <summary>
            Gets the version of the library's assembly.
            </summary>
            <value>The version of the library's assembly.</value>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Tiff.TiffExtendProc">
            <summary>
            Delegate for LibTiff.Net extender method
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class.</param>
            <remarks>
            <para>Extender method is usually used for registering custom tags.</para>
            <para>To setup extender method that will be called upon creation of
            each instance of <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> object please use <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetTagExtender(BitMiracle.LibTiff.Classic.Tiff.TiffExtendProc)"/>
            method.</para>
            </remarks>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Tiff.FaxFillFunc">
            <summary>
            Delegate for a method used to image decoded spans.        
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="runs">The array of black and white run lengths (white then black).</param>
            <param name="thisRunOffset">The zero-based offset in <paramref name="runs"/> array at
            which current row's run begins.</param>
            <param name="nextRunOffset">The zero-based offset in <paramref name="runs"/> array at
            which next row's run begins.</param>
            <param name="width">The width in pixels of the row.</param>
            <remarks><para>
            To override the default method used to image decoded spans please set
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.FAXFILLFUNC"/> tag with an instance of this delegate.</para>
            <para>
            Fill methods can assume the <paramref name="runs"/> array has room for at least
            <paramref name="width"/> runs and can overwrite data in the <paramref name="runs"/>
            array as needed (e.g. to append zero runs to bring the count up to a nice multiple).
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.DecodeRow(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one row of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.DecodeStrip(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one strip of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.DecodeTile(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Decodes one tile of image data.
            </summary>
            <param name="buffer">The buffer to place decoded image data to.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin storing decoded bytes.</param>
            <param name="count">The number of decoded bytes that should be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was decoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.PreEncode(System.Int16)">
            <summary>
            Prepares the encoder part of the codec for a encoding.
            </summary>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if this codec successfully prepared its encoder part and ready
            to encode data; otherwise, <c>false</c>.
            </returns>
            <remarks>
            	<b>PreEncode</b> is called after <see cref="M:BitMiracle.LibTiff.Classic.TiffCodec.SetupEncode"/> and before encoding.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.EncodeRow(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one row of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.EncodeStrip(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one strip of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.EncodeTile(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encodes one tile of image data.
            </summary>
            <param name="buffer">The buffer with image data to be encoded.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin read image data.</param>
            <param name="count">The maximum number of encoded bytes that can be placed
            to <paramref name="buffer"/></param>
            <param name="plane">The zero-based sample plane index.</param>
            <returns>
            	<c>true</c> if image data was encoded successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.PackBitsEncodeChunk(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Encode a rectangular chunk of pixels. We break it up into row-sized pieces to insure
            that encoded runs do not span rows. Otherwise, there can be problems with the decoder
            if data is read, for example, by scanlines when it was encoded by strips.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.CanEncode">
            <summary>
            Gets a value indicating whether this codec can encode data.
            </summary>
            <value>
            	<c>true</c> if this codec can encode data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.Internal.PackBitsCodec.CanDecode">
            <summary>
            Gets a value indicating whether this codec can decode data.
            </summary>
            <value>
            	<c>true</c> if this codec can decode data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Internal.TiffCIELabToRGB">
            <summary>
            CIE Lab 1976->RGB support
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffCIELabToRGB.range">
            <summary>
            Size of conversion table
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffCIELabToRGB.Yr2r">
            <summary>
            Conversion of Yr to r
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffCIELabToRGB.Yg2g">
            <summary>
            Conversion of Yg to g
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffCIELabToRGB.Yb2b">
            <summary>
            Conversion of Yb to b
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Internal.TiffDirectory">
            <summary>
            Internal format of a TIFF directory entry.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffDirectory.td_fieldsset">
            <summary>
            bit vector of fields that are set
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffDirectory.td_nstrips">
            <summary>
            size of offset and bytecount arrays
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffDirectory.td_stripbytecountsorted">
            <summary>
            is the bytecount array sorted ascending?
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Internal.TiffDirEntry">
            <summary>
            TIFF Image File Directories are comprised of a table of field
            descriptors of the form shown below.  The table is sorted in
            ascending order by tag.  The values associated with each entry are
            disjoint and may appear anywhere in the file (so long as they are
            placed on a word boundary).
            
            If the value is 4 bytes or less, then it is placed in the offset
            field to save space.  If the value is less than 4 bytes, it is
            left-justified in the offset field.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffDirEntry.tdir_count">
            <summary>
            number of items; length in spec
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffDirEntry.tdir_offset">
            <summary>
            byte offset to field data
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Internal.TiffDisplay">
            <summary>
            Structure for holding information about a display device.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffDisplay.d_mat">
            <summary>
            XYZ -> luminance matrix
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.MSB2LSB">
            <summary>
            Use MSB2LSB (most significant -> least) fill order
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.LSB2MSB">
            <summary>
            Use LSB2MSB (least significant -> most) fill order
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.FILLORDER">
            <summary>
            natural bit fill order for machine
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.DIRTYDIRECT">
            <summary>
            current directory must be written
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.BUFFERSETUP">
            <summary>
            data buffers setup
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.CODERSETUP">
            <summary>
            encoder/decoder setup done
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.BEENWRITING">
            <summary>
            written 1+ scanlines to file
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.SWAB">
            <summary>
            byte swap file information
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.NOBITREV">
            <summary>
            inhibit bit reversal logic
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.MYBUFFER">
            <summary>
            my raw data buffer; free on close
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.ISTILED">
            <summary>
            file is tile, not strip- based
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.POSTENCODE">
            <summary>
            need call to postencode routine
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.INSUBIFD">
            <summary>
            currently writing a subifd
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.UPSAMPLED">
            <summary>
            library is doing data up-sampling
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.STRIPCHOP">
            <summary>
            enable strip chopping support
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.HEADERONLY">
            <summary>
            read header only, do not process the first directory
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffFlags.NOREADRAW">
            <summary>
            skip reading of raw uncompressed image data
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffHeader.tiff_magic">
            <summary>
            magic number (defines byte order)
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffHeader.tiff_version">
            <summary>
            TIFF version number
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffHeader.tiff_diroff">
            <summary>
            byte offset to first directory
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.Internal.TiffYCbCrToRGB">
            <summary>
            Convert color value from the YCbCr space to CIE XYZ.
            The colorspace conversion algorithm comes from the IJG v5a code;
            see below for more information on how it works.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.Internal.TiffYCbCrToRGB.clamptab">
            <summary>
            range clamping table
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffErrorHandler">
            <summary>
            Default error handler implementation.
            </summary>
            <remarks>
            <para><b>TiffErrorHandler</b> provides error and warning handling methods that write an
            error or a warning messages to the <see cref="P:System.Console.Error"/>.
            </para><para>
            Applications that desire to capture control in the event of an error or a warning should
            set their custom error and warning handler using <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)"/> method.
            </para>
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffErrorHandler.ErrorHandler(BitMiracle.LibTiff.Classic.Tiff,System.String,System.String,System.Object[])">
            <summary>
            Handles an error by writing it text to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="method">The method where an error is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which an error is detected.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffErrorHandler.ErrorHandlerExt(BitMiracle.LibTiff.Classic.Tiff,System.Object,System.String,System.String,System.Object[])">
            <summary>
            Handles an error by writing it text to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="clientData">A client data.</param>
            <param name="method">The method where an error is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks><para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which an error is detected.
            </para><para>
            The <paramref name="clientData"/> parameter can be anything. Its value and meaning is
            defined by an application and not the library.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffErrorHandler.WarningHandler(BitMiracle.LibTiff.Classic.Tiff,System.String,System.String,System.Object[])">
            <summary>
            Handles a warning by writing it text to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="method">The method where a warning is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which a warning is detected.
            </remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffErrorHandler.WarningHandlerExt(BitMiracle.LibTiff.Classic.Tiff,System.Object,System.String,System.String,System.Object[])">
            <summary>
            Handles a warning by writing it text to the <see cref="P:System.Console.Error"/>.
            </summary>
            <param name="tif">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.Tiff"/> class. Can be <c>null</c>.</param>
            <param name="clientData">A client data.</param>
            <param name="method">The method where a warning is detected.</param>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks><para>
            The <paramref name="format"/> is a composite format string that uses the same format as
            <see cref="O:System.String.Format"/> method. The <paramref name="method"/> parameter, if
            not <c>null</c>, is printed before the message; it typically is used to identify the
            method in which a warning is detected.
            </para><para>
            The <paramref name="clientData"/> parameter can be anything. Its value and meaning is
            defined by an application and not the library.
            </para></remarks>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffFieldInfo">
            <summary>
            Represents a TIFF field information.
            </summary>
            <remarks>
            <b>TiffFieldInfo</b> describes a field. It provides information about field name, type,
            number of values etc.
            </remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable">
            <summary>
            marker for variable length tags
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Spp">
            <summary>
            marker for SamplesPerPixel-bound tags
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable2">
            <summary>
            marker for integer variable length tags
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffFieldInfo.#ctor(BitMiracle.LibTiff.Classic.TiffTag,System.Int16,System.Int16,BitMiracle.LibTiff.Classic.TiffType,System.Int16,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffFieldInfo"/> class.
            </summary>
            <param name="tag">The tag to describe.</param>
            <param name="readCount">The number of values to read when reading field information or
            one of <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable"/>, <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Spp"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable2"/>.</param>
            <param name="writeCount">The number of values to write when writing field information
            or one of <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable"/>, <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Spp"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable2"/>.</param>
            <param name="type">The type of the field value.</param>
            <param name="bit">Index of the bit to use in "Set Fields Vector" when this instance
            is merged into field info collection. Take a look at <see cref="T:BitMiracle.LibTiff.Classic.FieldBit"/> class.</param>
            <param name="okToChange">If true, then it is permissible to set the tag's value even
            after writing has commenced.</param>
            <param name="passCount">If true, then number of value elements should be passed to
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetField(BitMiracle.LibTiff.Classic.TiffTag,System.Object[])"/> method as second parameter (right after tag type AND
            before value itself).</param>
            <param name="name">The name (description) of the tag this instance describes.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffFieldInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.Tag">
            <summary>
            The tag described by this instance.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.ReadCount">
            <summary>
            Number of values to read when reading field information or
            one of <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable"/>, <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Spp"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable2"/>.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.WriteCount">
            <summary>
            Number of values to write when writing field information or
            one of <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable"/>, <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Spp"/> and <see cref="F:BitMiracle.LibTiff.Classic.TiffFieldInfo.Variable2"/>.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.Type">
            <summary>
            Type of the field values.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.Bit">
            <summary>
            Index of the bit to use in "Set Fields Vector" when this instance
            is merged into field info collection. Take a look at <see cref="T:BitMiracle.LibTiff.Classic.FieldBit"/> class.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.OkToChange">
            <summary>
            If true, then it is permissible to set the tag's value even after writing has commenced.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.PassCount">
            <summary>
            If true, then number of value elements should be passed to <see cref="M:BitMiracle.LibTiff.Classic.Tiff.SetField(BitMiracle.LibTiff.Classic.TiffTag,System.Object[])"/>
            method as second parameter (right after tag type AND before values itself).
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffFieldInfo.Name">
            <summary>
            The name (or description) of the tag this instance describes.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffRgbaImage">
            <summary>
            RGBA-style image support. Provides methods for decoding images into RGBA (or other) format.
            </summary>
            <remarks>
            <para>
            <b>TiffRgbaImage</b> provide a high-level interface through which TIFF images may be read
            into memory. Images may be strip- or tile-based and have a variety of different
            characteristics: bits/sample, samples/pixel, photometric, etc. The target raster format
            can be customized to a particular application's needs by installing custom methods that
            manipulate image data according to application requirements.
            </para><para>
            The default usage for this class: check if an image can be processed using
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)"/>, construct an instance of
            <b>TiffRgbaImage</b> using <see cref="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.Create(BitMiracle.LibTiff.Classic.Tiff,System.Boolean,System.String@)"/> and then read and decode an image into a
            target raster using <see cref="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.GetRaster(System.Int32[],System.Int32,System.Int32,System.Int32)"/>. <see cref="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.GetRaster(System.Int32[],System.Int32,System.Int32,System.Int32)"/> can be called
            multiple times to decode an image using different state parameters. If multiple images
            are to be displayed and there is not enough space for each of the decoded rasters,
            multiple instances of <b>TiffRgbaImage</b> can be managed and then calls can be made to
            <see cref="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.GetRaster(System.Int32[],System.Int32,System.Int32,System.Int32)"/> as needed to display an image.</para>
            <para>
            To use the core support for reading and processing TIFF images, but write the resulting
            raster data in a different format one need only override the "put methods" used to store
            raster data. These methods are initially setup by <see cref="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.Create(BitMiracle.LibTiff.Classic.Tiff,System.Boolean,System.String@)"/> to point to methods
            that pack raster data in the default ABGR pixel format. Two different methods are used
            according to the physical organization of the image data in the file: one for
            <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.CONTIG (packed samples),
            and another for <see cref="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG"/> = <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig"/>.SEPARATE
            (separated samples). Note that this mechanism can be used to transform the data before 
            storing it in the raster. For example one can convert data to colormap indices for display
            on a colormap display.</para><para>
            To setup custom "put" method please use <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutContig"/> property for contiguously
            packed samples and/or <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutSeparate"/> property for separated samples.</para>
            <para>
            The methods of <b>TiffRgbaImage</b> support the most commonly encountered flavors of TIFF.
            It is possible to extend this support by overriding the "get method" invoked by
            <see cref="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.GetRaster(System.Int32[],System.Int32,System.Int32,System.Int32)"/> to read TIFF image data. Details of doing this are a bit involved,
            it is best to make a copy of an existing get method and modify it to suit the needs of an
            application. To setup custom "get" method please use <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Get"/> property.</para>
            </remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.tif">
            <summary>
            image handle
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.stoponerr">
            <summary>
            stop on read error
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.isContig">
            <summary>
            data is packed/separate
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.alpha">
            <summary>
            type of alpha data present
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.width">
            <summary>
            image width
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.height">
            <summary>
            image height
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.bitspersample">
            <summary>
            image bits/sample
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.samplesperpixel">
            <summary>
            image samples/pixel
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.orientation">
            <summary>
            image orientation
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.req_orientation">
            <summary>
            requested orientation
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.photometric">
            <summary>
            image photometric interp
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.redcmap">
            <summary>
            colormap pallete
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.Map">
            <summary>
            sample mapping array
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.BWmap">
            <summary>
            black and white map
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.PALmap">
            <summary>
            palette image map
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.ycbcr">
            <summary>
            YCbCr conversion state
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffRgbaImage.cielab">
            <summary>
            CIE L*a*b conversion state
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.Create(BitMiracle.LibTiff.Classic.Tiff,System.Boolean,System.String@)">
            <summary>
            Creates new instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> class.
            </summary>
            <param name="tif">
            The instance of the <see cref="N:BitMiracle.LibTiff.Classic"/> class used to retrieve
            image data.
            </param>
            <param name="stopOnError">
            if set to <c>true</c> then an error will terminate the conversion; otherwise "get"
            methods will continue processing data until all the possible data in the image have
            been requested.
            </param>
            <param name="errorMsg">The error message (if any) gets placed here.</param>
            <returns>
            New instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> class if the image specified
            by <paramref name="tif"/> can be converted to RGBA format; otherwise, <c>null</c> is
            returned and <paramref name="errorMsg"/> contains the reason why it is being
            rejected.
            </returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.GetRaster(System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Reads the underlaying TIFF image and decodes it into RGBA format raster.
            </summary>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <param name="offset">The zero-based byte offset in <paramref name="raster"/> at which
            to begin storing decoded bytes.</param>
            <param name="width">The raster width.</param>
            <param name="height">The raster height.</param>
            <returns><c>true</c> if the image was successfully read and decoded; otherwise,
            <c>false</c>.</returns>
            <remarks><para>
            <b>GetRaster</b> reads image into memory using current "get" (<see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Get"/>) method,
            storing the result in the user supplied RGBA <paramref name="raster"/> using one of
            the "put" (<see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutContig"/> or <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutSeparate"/>) methods. The raster
            is assumed to be an array of <paramref name="width"/> times <paramref name="height"/>
            32-bit entries, where <paramref name="width"/> must be less than or equal to the width
            of the image (<paramref name="height"/> may be any non-zero size). If the raster
            dimensions are smaller than the image, the image data is cropped to the raster bounds.
            If the raster height is greater than that of the image, then the image data placement
            depends on the value of <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.ReqOrientation"/> property. Note that the raster is
            assumed to be organized such that the pixel at location (x, y) is
            <paramref name="raster"/>[y * width + x]; with the raster origin specified by the
            value of <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.ReqOrientation"/> property.
            </para><para>
            Raster pixels are 8-bit packed red, green, blue, alpha samples. The 
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)"/>, <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)"/>, and
            <see cref="M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)"/> should be used to access individual samples. Images without
            Associated Alpha matting information have a constant Alpha of 1.0 (255).
            </para><para>
            <b>GetRaster</b> converts non-8-bit images by scaling sample values. Palette,
            grayscale, bilevel, CMYK, and YCbCr images are converted to RGB transparently.
            Raster pixels are returned uncorrected by any colorimetry information present in
            the directory.
            </para><para>
            Samples must be either 1, 2, 4, 8, or 16 bits. Colorimetric samples/pixel must be
            either 1, 3, or 4 (i.e. SamplesPerPixel minus ExtraSamples).
            </para><para>
            Palette image colormaps that appear to be incorrectly written as 8-bit values are
            automatically scaled to 16-bits.
            </para><para>
            All error messages are directed to the current error handler.
            </para></remarks>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.CMAP(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Palette images with &lt;= 8 bits/sample are handled with a table to avoid lots of shifts
            and masks. The table is setup so that put*cmaptile (below) can retrieve 8 / bitspersample
            pixel values simply by indexing into the table with one number.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.GREY(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Greyscale images with less than 8 bits/sample are handled with a table to avoid lots
            of shifts and masks. The table is setup so that put*bwtile (below) can retrieve
            8 / bitspersample pixel values simply by indexing into the table with one number.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.gtTileContig(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Get an tile-organized image that has
            PlanarConfiguration contiguous if SamplesPerPixel > 1
             or
            SamplesPerPixel == 1
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.gtTileSeparate(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Get an tile-organized image that has
            SamplesPerPixel > 1
            PlanarConfiguration separated
            We assume that all such images are RGB.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.gtStripContig(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Get a strip-organized image that has 
            PlanarConfiguration contiguous if SamplesPerPixel > 1
             or
            SamplesPerPixel == 1
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.gtStripSeparate(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Get a strip-organized image with
             SamplesPerPixel > 1
             PlanarConfiguration separated
            We assume that all such images are RGB.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.pickContigCase">
            <summary>
            Select the appropriate conversion routine for packed data.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.pickSeparateCase">
            <summary>
            Select the appropriate conversion routine for unpacked data.
            NB: we assume that unpacked single channel data is directed to the "packed routines.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.buildMap">
            <summary>
            Construct any mapping table used by the associated put method.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.setupMap">
            <summary>
            Construct a mapping table to convert from the range of the data samples to [0, 255] -
            for display. This process also handles inverting B&amp;W images when needed.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.YCbCrtoRGB(System.Int32@,System.Int32,System.Int32,System.Int32)">
            <summary>
            YCbCr -> RGB conversion and packing routines.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put8bitcmaptile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit palette => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put4bitcmaptile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            4-bit palette => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put2bitcmaptile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            2-bit palette => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put1bitcmaptile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            1-bit palette => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putgreytile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit greyscale => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put16bitbwtile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            16-bit greyscale => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put1bitbwtile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            1-bit bilevel => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put2bitbwtile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            2-bit greyscale => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.put4bitbwtile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            4-bit greyscale => colormap/RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBcontig8bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed samples, no Map => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBAAcontig8bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed samples => RGBA w/ associated alpha (known to have Map == null)
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBUAcontig8bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed samples => RGBA w/ unassociated alpha (known to have Map == null)
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBcontig16bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            16-bit packed samples => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBAAcontig16bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            16-bit packed samples => RGBA w/ associated alpha (known to have Map == null)
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBUAcontig16bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            16-bit packed samples => RGBA w/ unassociated alpha (known to have Map == null)
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBcontig8bitCMYKtile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed CMYK samples w/o Map => RGB.
            NB: The conversion of CMYK->RGB is *very* crude.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitCIELab(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed CIE L*a*b 1976 samples => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitYCbCr22tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ 2,2 subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitYCbCr21tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ 2,1 subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitYCbCr44tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ 4,4 subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitYCbCr42tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ 4,2 subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitYCbCr41tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ 4,1 subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitYCbCr11tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ no subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putcontig8bitYCbCr12tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ 1,2 subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBseparate8bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            8-bit unpacked samples => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBAAseparate8bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            8-bit unpacked samples => RGBA w/ associated alpha
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBUAseparate8bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            8-bit unpacked samples => RGBA w/ unassociated alpha
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBseparate16bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            16-bit unpacked samples => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBAAseparate16bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            16-bit unpacked samples => RGBA w/ associated alpha
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBUAseparate16bittile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            16-bit unpacked samples => RGBA w/ unassociated alpha
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putseparate8bitYCbCr11tile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            8-bit packed YCbCr samples w/ no subsampling => RGB
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.putRGBcontig8bitCMYKMaptile(BitMiracle.LibTiff.Classic.TiffRgbaImage,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            8-bit packed CMYK samples w/Map => RGB
            NB: The conversion of CMYK->RGB is *very* crude.
            </summary>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.IsContig">
            <summary>
            Gets a value indicating whether image data has contiguous (packed) or separated samples.
            </summary>
            <value><c>true</c> if this image data has contiguous (packed) samples; otherwise,
            <c>false</c>.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Alpha">
            <summary>
            Gets the type of alpha data present.
            </summary>
            <value>The type of alpha data present.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Width">
            <summary>
            Gets the image width.
            </summary>
            <value>The image width.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Height">
            <summary>
            Gets the image height.
            </summary>
            <value>The image height.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.BitsPerSample">
            <summary>
            Gets the image bits per sample count.
            </summary>
            <value>The image bits per sample count.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.SamplesPerPixel">
            <summary>
            Gets the image samples per pixel count.
            </summary>
            <value>The image samples per pixel count.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Orientation">
            <summary>
            Gets the image orientation.
            </summary>
            <value>The image orientation.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.ReqOrientation">
            <summary>
            Gets or sets the requested orientation.
            </summary>
            <value>The requested orientation.</value>
            <remarks>The <see cref="M:BitMiracle.LibTiff.Classic.TiffRgbaImage.GetRaster(System.Int32[],System.Int32,System.Int32,System.Int32)"/> method uses this value when placing converted
            image data into raster buffer.</remarks>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Photometric">
            <summary>
            Gets the photometric interpretation of the image data.
            </summary>
            <value>The photometric interpretation of the image data.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Get">
            <summary>
            Gets or sets the "get" method (the method that is called to produce RGBA raster).
            </summary>
            <value>The "get" method.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutContig">
            <summary>
            Gets or sets the "put" method (the method that is called to pack pixel data in the
            raster) used when converting contiguously packed samples.
            </summary>
            <value>The "put" method used when converting contiguously packed samples.</value>
        </member>
        <member name="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutSeparate">
            <summary>
            Gets or sets the "put" method (the method that is called to pack pixel data in the
            raster) used when converting separated samples.
            </summary>
            <value>The "put" method used when converting separated samples.</value>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutContigDelegate">
            <summary>
            Delegate for "put" method (the method that is called to pack pixel data in the raster)
            used when converting contiguously packed samples.
            </summary>
            <param name="img">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> class.</param>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <param name="rasterOffset">The zero-based byte offset in <paramref name="raster"/> at
            which to begin storing decoded bytes.</param>
            <param name="rasterShift">The value that should be added to
            <paramref name="rasterOffset"/> after each row processed.</param>
            <param name="x">The x-coordinate of the first pixel in block of pixels to be decoded.</param>
            <param name="y">The y-coordinate of the first pixel in block of pixels to be decoded.</param>
            <param name="width">The block width.</param>
            <param name="height">The block height.</param>
            <param name="buffer">The buffer with image data.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin reading image bytes.</param>
            <param name="bufferShift">The value that should be added to <paramref name="offset"/>
            after each row processed.</param>
            <remarks><para>
            The image reading and conversion methods invoke "put" methods to copy/image/whatever
            tiles of raw image data. A default set of methods is provided to convert/copy raw
            image data to 8-bit packed ABGR format rasters. Applications can supply alternate
            methods that unpack the data into a different format or, for example, unpack the data
            and draw the unpacked raster on the display.
            </para><para>
            To setup custom "put" method for contiguously packed samples please use
            <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutContig"/> property.</para>
            <para>
            The <paramref name="bufferShift"/> is usually 0. It is greater than 0 if width of strip
            being converted is greater than image width or part of the tile being converted is
            outside the image (may be true for tiles on the right and bottom edge of the image).
            In other words, <paramref name="bufferShift"/> is used to make up for any padding on
            the end of each line of the buffer with image data.
            </para><para>
            The <paramref name="rasterShift"/> is 0 if width of tile being converted is equal to
            image width and image data should not be flipped vertically. In other circumstances
            <paramref name="rasterShift"/> is used to make up for any padding on the end of each
            line of the raster and/or for flipping purposes.
            </para></remarks>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutSeparateDelegate">
            <summary>
            Delegate for "put" method (the method that is called to pack pixel data in the raster)
            used when converting separated samples.
            </summary>
            <param name="img">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> class.</param>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <param name="rasterOffset">The zero-based byte offset in <paramref name="raster"/> at
            which to begin storing decoded bytes.</param>
            <param name="rasterShift">The value that should be added to
            <paramref name="rasterOffset"/> after each row processed.</param>
            <param name="x">The x-coordinate of the first pixel in block of pixels to be decoded.</param>
            <param name="y">The y-coordinate of the first pixel in block of pixels to be decoded.</param>
            <param name="width">The block width.</param>
            <param name="height">The block height.</param>
            <param name="buffer">The buffer with image data.</param>
            <param name="offset1">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin reading image bytes that constitute first sample plane.</param>
            <param name="offset2">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin reading image bytes that constitute second sample plane.</param>
            <param name="offset3">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin reading image bytes that constitute third sample plane.</param>
            <param name="offset4">The zero-based byte offset in <paramref name="buffer"/> at
            which to begin reading image bytes that constitute fourth sample plane.</param>
            <param name="bufferShift">The value that should be added to <paramref name="offset1"/>,
            <paramref name="offset2"/>, <paramref name="offset3"/> and <paramref name="offset4"/>
            after each row processed.</param>
            <remarks><para>
            The image reading and conversion methods invoke "put" methods to copy/image/whatever
            tiles of raw image data. A default set of methods is provided to convert/copy raw
            image data to 8-bit packed ABGR format rasters. Applications can supply alternate
            methods that unpack the data into a different format or, for example, unpack the data
            and draw the unpacked raster on the display.
            </para><para>
            To setup custom "put" method for separated samples please use
            <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.PutSeparate"/> property.</para>
            <para>
            The <paramref name="bufferShift"/> is usually 0. It is greater than 0 if width of strip
            being converted is greater than image width or part of the tile being converted is
            outside the image (may be true for tiles on the right and bottom edge of the image).
            In other words, <paramref name="bufferShift"/> is used to make up for any padding on
            the end of each line of the buffer with image data.
            </para><para>
            The <paramref name="rasterShift"/> is 0 if width of tile being converted is equal to
            image width and image data should not be flipped vertically. In other circumstances
            <paramref name="rasterShift"/> is used to make up for any padding on the end of each
            line of the raster and/or for flipping purposes.
            </para></remarks>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffRgbaImage.GetDelegate">
            <summary>
            Delegate for "get" method (the method that is called to produce RGBA raster).
            </summary>
            <param name="img">An instance of the <see cref="T:BitMiracle.LibTiff.Classic.TiffRgbaImage"/> class.</param>
            <param name="raster">The raster (the buffer to place decoded image data to).</param>
            <param name="offset">The zero-based byte offset in <paramref name="raster"/> at which
            to begin storing decoded bytes.</param>
            <param name="width">The raster width.</param>
            <param name="height">The raster height.</param>
            <returns><c>true</c> if the image was successfully read and decoded; otherwise,
            <c>false</c>.</returns>
            <remarks><para>
            A default set of methods is provided to read and convert/copy raw image data to 8-bit
            packed ABGR format rasters. Applications can supply alternate method for this.
            </para><para>
            To setup custom "get" method please use <see cref="P:BitMiracle.LibTiff.Classic.TiffRgbaImage.Get"/> property.
            </para></remarks>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffStream">
            <summary>
            A stream used by the library for TIFF reading and writing.
            </summary>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffStream.Read(System.Object,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the stream and advances the position within the stream
            by the number of bytes read.
            </summary>
            <param name="clientData">A client data (by default, an underlying stream).</param>
            <param name="buffer">An array of bytes. When this method returns, the
            <paramref name="buffer"/> contains the specified byte array with the values between
            <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1)
            replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the <paramref name="buffer"/>. This can
            be less than the number of bytes requested if that many bytes are not currently
            available, or zero (0) if the end of the stream has been reached.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffStream.Write(System.Object,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position
            within this stream by the number of bytes written.
            </summary>
            <param name="clientData">A client data (by default, an underlying stream).</param>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/>
            bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which
            to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffStream.Seek(System.Object,System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="clientData">A client data (by default, an underlying stream).</param>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the
            reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffStream.Close(System.Object)">
            <summary>
            Closes the current stream.
            </summary>
            <param name="clientData">A client data (by default, an underlying stream).</param>
        </member>
        <member name="M:BitMiracle.LibTiff.Classic.TiffStream.Size(System.Object)">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <param name="clientData">A client data (by default, an underlying stream).</param>
            <returns>The length of the stream in bytes.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedDocumentInternal">
            <summary>
            Hosts a fixed-format document.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedDocumentInternal.#ctor(Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider,Telerik.Windows.Documents.Fixed.Model.RadFixedDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument"/> class.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedDocumentInternal.OnException">
            <summary>
            Occurs when exception is thrown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedDocumentInternal.Pages">
            <summary>
            Gets the collection of the document pages.
            </summary>
            <value>
            The pages collection.
            </value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedDocumentInternal.Destinations">
            <summary>
            Gets all destinations in the document.
            </summary>
            <value>The destinations.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedDocumentInternal.Annotations">
            <summary>
            Gets all annotations in the document.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedPageInternal">
            <summary>
            Represents a fixed page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedPageInternal.HasContent">
            <summary>
            Gets a value indicating if the page has content.
            </summary>
            <value>A value indicating if the page has content.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Internal.RadFixedPageInternal.Document">
            <summary>
            Gets the document that contains the page.
            </summary>
            <value>The document.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings">
            <summary>
            Represents PDF export settings.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings.IsEncrypted">
            <summary>
            Specifies if the PDF document should be encrypted.
            </summary>
            <value>True if the document should be encrypted.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings.UserPassword">
            <summary>
            Gets or sets the user password.
            </summary>
            <value>The user password.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings.ImageQuality">
            <summary>
            Gets or sets the default image quality when exporting images to PDF. The default value is High.
            <para>
            The value of this property will be overriden when specifying the ImageQuality in ImageSource constructor or when creating ImageSource from EncodedImageData.
            The higher the quality, the bigger the document size.
            </para>
            </summary>
            <value>The image quality.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings.ComplianceLevel">
            <summary>
            Gets or sets the PDF compliance level.
            </summary>
            <value>The compliance level.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.PdfExportSettings.OwnerPassword">
            <summary>
            Gets or sets the owner password.
            </summary>
            <value>The owner password.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings">
            <summary>
            Represents PDF import settings.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings"/> class.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.UserPasswordNeeded">
            <summary>
            Occurs when the user password is needed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.DocumentUnhandledException">
            <summary>
            Occurs when unhandled exception is thrown during document import.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.ReadAllAtOnce">
            <summary>
            Gets the default format provider settings for all at once reading mode: <code>{ ReadingMode = AllAtOnce, CopyStream = false }</code>
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.ReadOnDemand">
            <summary>
            Gets the default format provider settings for on demand reading mode: <code>{ ReadingMode = OnDemand, CopyStream = true }</code>
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.ReadingMode">
            <summary>
            Gets or sets the mode for loading the document pages content on import. 
            If AllAtOnce applied, the document pages content will be loaded on import. 
            If OnDemand applied, the document pages content will be loaded on demand. 
            <para>Currently, the OnDemand setting should be applied for use with viewers only.</para>
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.CopyStream">
            <summary>
            Gets or sets whether to copy the document stream on import. 
            When false and <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.ReadingMode"/> is OnDemand, 
            the original stream must be kept open while the document is in use. 
            When true, the original stream can be disposed after import, regardless of the reading mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Import.PdfImportSettings.UseOldRendering">
            <summary>
            This property is only applicable for RadPdfViewer. When true, it fallbacks internally to use the RadPdfViewer old model on document import.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Utilities.BytesHelper.GetUInt16BE(System.Byte[],System.Int32)">
            <summary>
            Returns a 16-bit unsigned integer converted from two bytes at a specified position
            in a byte array. The integer is converted using the Big Endian ordering.
            </summary>
            <param name="bytes"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction">
            <summary>
            Represents go to action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction.#ctor(Telerik.Windows.Documents.Fixed.Model.Navigation.Destination)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction"/> class.
            </summary>
            <param name="destination">The destination for the action.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction.#ctor(Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction"/> class.
            </summary>
            <param name="namedDestination">The named destination for the action.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction.Destination">
            <summary>
            Gets or sets the destination for the action.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction.NamedDestination">
            <summary>
            Gets or sets the named destination for the action.
            </summary>
            <value>The named destination.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Actions.ResetFormAction">
            <summary>
            Represents reset form action.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Actions.SubmitFormAction">
            <summary>
            Represents submit form action.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Actions.UriAction">
            <summary>
            Represents Uri action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Actions.UriAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Actions.UriAction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Actions.UriAction.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Actions.UriAction"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Actions.UriAction.Uri">
            <summary>
            Gets or sets the URI for the action.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Actions.UriAction.IncludeMouseCoordinates">
            <summary>
            Gets or sets the value that indicates if the mouse coordinates should be included in the Uri.
            </summary>
            <value>If the mouse coordinates should be tracked.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Link">
            <summary>
            Represents link annotation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.Link.#ctor(Telerik.Windows.Documents.Fixed.Model.Navigation.Destination)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Link"/> class.
            </summary>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.Link.#ctor(Telerik.Windows.Documents.Fixed.Model.Actions.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Link"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Annotations.Link.#ctor(Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Annotations.Link"/> class.
            </summary>
            <param name="namedDestination">The named destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Link.Destination">
            <summary>
            Gets or sets the destination for the link action.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Link.Action">
            <summary>
            Gets or sets the action for the link annotation.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Link.NamedDestination">
            <summary>
            Gets or sets the named destination for the link annotation.
            </summary>
            <value>The named destination.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Annotations.Link.Type">
            <summary>
            Gets the type of the annotation.
            </summary>
            <value>The type of the annotation.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Collections.AnnotationCollection">
            <summary>
            Represents annotations collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.AnnotationCollection.#ctor(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.AnnotationCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.AnnotationCollection.AddLink(Telerik.Windows.Documents.Fixed.Model.Navigation.Destination)">
            <summary>
            Adds the link.
            </summary>
            <param name="destination">The destination.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.AnnotationCollection.AddLink(Telerik.Windows.Documents.Fixed.Model.Actions.Action)">
            <summary>
            Adds the link.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.AnnotationCollection.AddLink(Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination)">
            <summary>
            Adds the link.
            </summary>
            <param name="namedDestination">The named destination.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection">
            <summary>
            Represents content elements collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.#ctor(Telerik.Windows.Documents.Fixed.Model.Common.IContainerElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.AddPath">
            <summary>
            Creates new Path and add it to the collection.
            </summary>
            <returns>The Path.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.AddTextFragment">
            <summary>
            Creates new TextFragment and add it to the collection.
            </summary>
            <returns>The TextFragment.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.AddTextFragment(System.String)">
            <summary>
            Creates new TextFragment and add it to the collection.
            </summary>
            <param name="text">The text in the TextFragment.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.AddImage">
            <summary>
            Adds the image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.AddImage(Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource)">
            <summary>
            Adds the image.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.AddForm">
            <summary>
            Adds the form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection.AddForm(Telerik.Windows.Documents.Fixed.Model.Resources.FormSource)">
            <summary>
            Adds the form.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection">
            <summary>
            Represents collection of named destinations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.#ctor(Telerik.Windows.Documents.Fixed.Model.Navigation.IDestinationContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Add(System.String,Telerik.Windows.Documents.Fixed.Model.Navigation.Destination)">
            <summary>
            Adds a named destination with the specified name and value to the collection and returns it.
            </summary>
            <param name="name">The name of the named destination.</param>
            <param name="destination">The Destination for the named destination.</param>
            <returns>The created named destination.</returns>
            <exception cref="T:System.ArgumentNullException">name is null.</exception>
            <exception cref="T:System.ArgumentNullException">An element with the same name already exists in the collection.</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Add(System.String,Telerik.Windows.Documents.Fixed.Model.Actions.GoToAction)">
            <summary>
            Adds a named destination with the specified name and value to the collection and returns it.
            </summary>
            <param name="name">The name of the named destination.</param>
            <param name="goToAction">The GoToAction for the named destination.</param>
            <returns>The created named destination.</returns>
            <exception cref="T:System.ArgumentNullException">name is null.</exception>
            <exception cref="T:System.ArgumentNullException">An element with the same name already exists in the collection.</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Clear">
            <summary>
            Removes all named destination from the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.ContainsName(System.String)">
            <summary>
            Determines whether the collection contains the specified name.
            </summary>
            <param name="name">The name to locate in the collection.</param>
            <returns>true if the collection contains an element with the specified name; otherwise, false</returns>
            <exception cref="T:System.ArgumentNullException">name is null</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A numerator for the collection</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Remove(System.String)">
            <summary>
            Removes the named destination with the specified name from the collection.
            </summary>
            <param name="name">The name of the named destination to remove</param>
            <returns>true if the named destination is successfully found and removed; otherwise, false. This
            method returns false if name is not found in the collection.</returns>
            <exception cref="T:System.ArgumentException">name is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.TryGetValue(System.String,Telerik.Windows.Documents.Fixed.Model.Navigation.NamedDestination@)">
            <summary>
             Gets the named destiation associated with the specified name.
            </summary>
            <param name="name">The name of the destination to get.</param>
            <param name="value">When this method returns, contains the destination associated with the specified name
            if the name is found; otherwise, null. This parameter is passed uninitialized.</param>
            <returns>true if the collection contains a named destination with
            the specified name; otherwise, false.</returns>
            <exception cref="T:System.ArgumentException">name is null</exception>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Rename(System.String,System.String)">
            <summary>
            Renames a named destination in the collection.
            </summary>
            <param name="oldName">The old name of the destination.</param>
            <param name="newName">The new name of the destination.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Item(System.String)">
            <summary>
            Gets the named destination associated with the specified name.
            </summary>
            <param name="name">The name of the named destination to get.</param>
            <returns>The named destination associated with the specified name.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">If the specified name is not found.</exception>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Names">
            <summary>
            Gets a collection containing the names in the collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Collections.NamedDestinationsCollection.Count">
            <summary>
            Gets the number of named destinations contained in the collection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Collections.PageCollection">
            <summary>
            Represents fixed pages collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Collections.PageCollection.AddPage">
            <summary>
            Creates new instance of RadFixedPage and add it to the collection.
            </summary>
            <returns>The new RadFixedPage instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.DeviceRgb.GetColorFromLookup(System.Byte[],System.Int32)">
            <summary>
            Called from <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.Indexed"/> to get color from lookup array.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor">
            <summary>
            Represents RGB color.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor"/> class.
            </summary>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor"/> class.
            </summary>
            <param name="a">The alpha component.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal
            to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.Equals(Telerik.Windows.Documents.Fixed.Model.ColorSpaces.ColorBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.ToString">
            <summary>
            Returns the text representation of the color.
            </summary>
            <returns>Returns the text representation of the color.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.A">
            <summary>
            Gets or sets the alpha component.
            </summary>
            <value>The alpha component.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.R">
            <summary>
            Gets or sets the red component.
            </summary>
            <value>The red component.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.G">
            <summary>
            Gets or sets the green component.
            </summary>
            <value>The green component.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColor.B">
            <summary>
            Gets or sets the blue component.
            </summary>
            <value>The blue component.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColors">
            <summary>
            Represents predefined Rgb colors.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColors.Black">
            <summary>
            Represents the Black color.
            </summary>
            <value>The black color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColors.White">
            <summary>
            Represents the Black color.
            </summary>
            <value>The black color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.ColorSpaces.RgbColors.Transparent">
            <summary>
            Represents the Transparent color.
            </summary>
            <value>The transparent color.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType">
            <summary>
            Represents all fixed document element types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.RadFixedDocument">
            <summary>
            RadFixedDocument element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.RadFixedPage">
            <summary>
            RadFixedPage element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.Clipping">
            <summary>
            Container element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.Path">
            <summary>
            Path element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.Image">
            <summary>
            Image element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.TextFragment">
            <summary>
            TextSegment element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.Form">
            <summary>
            Form element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.Destination">
            <summary>
            Destination element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.Annotation">
            <summary>
            Annotation element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.BookmarkItem">
            <summary>
            BookmarkItem element type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Common.FixedDocumentElementType.NamedDestination">
            <summary>
            NamedDestination element type.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Common.IFixedDocument">
            <summary>
            Represents base interface for fixed document.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Clipping">
            <summary>
            Represents fixed page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Clipping.Clip">
            <summary>
            Gets or sets the clip.
            </summary>
            <value>The clip.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition">
            <summary>
            Represents position.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.#ctor(Telerik.Windows.Documents.Fixed.Model.Data.IPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition"/> class.
            </summary>
            <param name="other">The other.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.#ctor(System.Windows.Media.Matrix)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition"/> class.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.Scale(System.Double,System.Double)">
            <summary>
            Appends the specified scale vector.
            </summary>
            <param name="scaleX">The scale X.</param>
            <param name="scaleY">The scale Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies a scale by the specified amount about the specified point.
            </summary>
            <param name="scaleX">The scale X.</param>
            <param name="scaleY">The scale Y.</param>
            <param name="centerX">The center X.</param>
            <param name="centerY">The center Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.Rotate(System.Double)">
            <summary>
            Applies a rotation of the specified angle about the origin.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.RotateAt(System.Double,System.Double,System.Double)">
            <summary>
            Rotates this matrix about the specified point.
            </summary>
            <param name="angle">The angle.</param>
            <param name="centerX">The center X.</param>
            <param name="centerY">The center Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.Translate(System.Double,System.Double)">
            <summary>
            Appends a translation of the specified offsets.
            </summary>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Data.MatrixPosition.Matrix">
            <summary>
            Gets or sets the matrix.
            </summary>
            <value>The matrix.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Data.Rotation">
            <summary>
            Represents rotation enumeration.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Data.Rotation.Rotate0">
            <summary>
            Represents rotation to 0 degrees.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Data.Rotation.Rotate90">
            <summary>
            Represents rotation to 90 degrees.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Data.Rotation.Rotate180">
            <summary>
            Represents rotation to 180 degrees.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Data.Rotation.Rotate270">
            <summary>
            Represents rotation to 270 degrees.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType">
            <summary>
            Represents enum with all destination types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.Location">
            <summary>
            Represents location destination type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.PageFit">
            <summary>
            Represents fit to page destination type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.PageHorizontalFit">
            <summary>
            Represents fit horizontal to page destination type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.PageVerticalFit">
            <summary>
            Represents fit vertical to page destination type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.RectangleFit">
            <summary>
            Represents fit to rectangle destination type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.BoundingRectangleFit">
            <summary>
            Represents fit to bounding rectangle destination type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.BoundingRectangleHorizontalFit">
            <summary>
            Represents fit horizontal to bounding rectangle destination type.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Navigation.DestinationType.BoundingRectangleVerticalFit">
            <summary>
            Represents fit vertical to bounding rectangle destination type.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Navigation.IDestinationContainer">
            <summary>
            Represents destination container interface.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Graphics.LineCap">
            <summary>
            Represents line cap types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Graphics.LineCap.Flat">
            <summary>
            Flat line cap.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Graphics.LineCap.Round">
            <summary>
            Round line cap.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Graphics.LineCap.Square">
            <summary>
            Square line cap.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Graphics.LineJoin">
            <summary>
            Represents line join types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Graphics.LineJoin.Miter">
            <summary>
            Miter line join.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Graphics.LineJoin.Round">
            <summary>
            Round line join.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Graphics.LineJoin.Bevel">
            <summary>
            Bevel line join.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Graphics.Path">
            <summary>
            Represents path.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Graphics.Path"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>The geometry.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.Fill">
            <summary>
            Gets or sets the fill color.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.Stroke">
            <summary>
            Gets or sets the stroke color.
            </summary>
            <value>The stroke color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.IsFilled">
            <summary>
            Gets or sets if the path figure is filled.
            </summary>
            <value>If the path figure is filled.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.IsStroked">
            <summary>
            Gets or sets the is stroked.
            </summary>
            <value>The is stroked.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.StrokeThickness">
            <summary>
            Gets or sets the width of the stroke line.
            </summary>
            <value>The width of the stroke line.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.StrokeLineCap">
            <summary>
            Gets or sets the stroke line cap.
            </summary>
            <value>The stroke line cap.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.StrokeLineJoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.Path.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
            <value>The miter limit.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Graphics.RectangleGeometry">
            <summary>
            Represents rectangle geometry.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Graphics.RectangleGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Graphics.RectangleGeometry"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Graphics.RectangleGeometry.#ctor(System.Windows.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Graphics.RectangleGeometry"/> class.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Graphics.RectangleGeometry.GetBounds">
            <summary>
            Gets the geometry bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Graphics.RectangleGeometry.Rect">
            <summary>
            Gets or sets the rect.
            </summary>
            <value>The rect.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Objects.Form">
            <summary>
            Represents form element which allows to reuse PDF content by using <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Objects.Form.FormSource">
            <summary>
            Gets or sets the form source.
            </summary>
            <value>The form source.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Objects.Form.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Objects.Form.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Objects.Image">
            <summary>
            Represents image element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Objects.Image.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Objects.Image"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Objects.Image.GetBitmapSource">
            <summary>
            Creates <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> from the image element.
            </summary>
            <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> instance.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Objects.Image.ImageSource">
            <summary>
            Gets or sets the image source.
            </summary>
            <value>The image source.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Objects.Image.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Objects.Image.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument">
            <summary>
            Represents RadFixedDocument.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.Merge(Telerik.Windows.Documents.Fixed.Model.RadFixedDocument)">
            <summary>
            Merges this document with the specified source document.
            </summary>
            <param name="source">The source document.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.Clone">
            <summary>
            Clones the document content.
            </summary>
            <returns>The cloned RadFixedDocument instance.</returns>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.DocumentUnhandledException">
            <summary>
            Occurs when an unhandled exception is thrown while loading the document properties, e.g. page content and annotations. 
            This event applies when the document is imported with the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider"/> class 
            using the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.ReadingMode"/>.OnDemand import setting. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.DocumentInfo">
            <summary>
            Gets the document info.
            </summary>
            <value>The document info.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.Pages">
            <summary>
            Gets the pages collection.
            </summary>
            <value>The pages collection.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.Annotations">
            <summary>
            Gets the annotations collection.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.NamedDestinations">
            <summary>
            Gets the named destinations collection.
            </summary>
            <value>The destinations.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.AcroForm">
            <summary>
            Represents the interactive form properties of the current document.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.Bookmarks">
            <summary>
            Gets the document bookmarks (outlines) collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.PageMode">
            <summary>
            Gets or sets how the document should be displayed when opened.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.MergedFieldNameResolving">
            <summary>
            Occurs when trying to resolve conflicts between the fields names while merging <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument"/> instances.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.OnException">
            <summary>
            Occurs when an exception is thrown while loading the document properties, e.g. page content and annotations. 
            This event applies when the document is imported with the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.PdfFormatProvider"/> class 
            using the <see cref="T:Telerik.Windows.Documents.Fixed.FormatProviders.ReadingMode"/>.OnDemand import setting. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.Selection">
            <summary>
            Gets the selection of the document.
            </summary>
            <value>The selection.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.CaretPosition">
            <summary>
            Gets or sets the caret position in the document. This property only works with RadPdfViewer.
            </summary>
            <value>The caret position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedDocument.CacheManager">
            <summary>
            Gets or sets the Cache Manager responsible for page content caching operations.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.RadFixedPage">
            <summary>
            Represents fixed page.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.RadFixedPage"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.SupportsAnnotations">
            <summary>
            Gets if the element supports annotations.
            </summary>
            <value>True if the element supports annotations.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.Content">
            <summary>
            Gets the content elements collection.
            </summary>
            <value>The content elements collection.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.Annotations">
            <summary>
            Gets the annotations collection.
            </summary>
            <value>The annotations collection.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.Size">
            <summary>
            Gets or sets the size of the physical medium on which the page is intended to be displayed or printed.
            <para>For more control, use <see cref="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.MediaBox"/> and <see cref="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.CropBox"/> properties.</para>
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.MediaBox">
            <summary>
            Gets or sets the rectangle defining the boundaries of the physical medium 
            on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.CropBox">
            <summary>
            Gets or sets the rectangle defining the boundaries of the visible region of the page. 
            When the page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.Rotation">
            <summary>
            Gets or sets the rotate angle.
            </summary>
            <value>The rotate angle.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.ActualWidth">
            <summary>
            Gets the fixed page's width. This property only works with RadPdfViewer.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.ActualHeight">
            <summary>
            Gets the fixed page's height. This property only works with RadPdfViewer.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.HasContent">
            <summary>
            Gets a value indicating if the page has content. This property only works with RadPdfViewer.
            </summary>
            <value>A value indicating if the page has content.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.Document">
            <summary>
            Gets the document that contains the page.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.RadFixedPage.PageNo">
            <summary>
            Gets the current page number. This property only works with RadPdfViewer.
            </summary>
            <value>The page no.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource">
            <summary>
            Represents a PDF form source. This class owns a <see cref="T:Telerik.Windows.Documents.Fixed.Model.Collections.ContentElementCollection"/> and
            allows reuse of PDF content by using the same <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource"/> on different <see cref="T:Telerik.Windows.Documents.Fixed.Model.Objects.Form"/> class instances.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource.#ctor">
            <summary>
            Creates new instance of FormSource.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource.Content">
            <summary>
            Gets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource.Size">
            <summary>
            Gets or sets the size of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource.SupportsAnnotations">
            <summary>
            Indicates whether the IContentRootElement supports annotations.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource.Annotations">
            <summary>
            Gets the annotation collection of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource.Parent">
            <summary>
            Gets the parent of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Common.IContentRootElement"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.FormSource.Matrix">
            <summary>
            Gets or sets the matrix which maps the form space into user space.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource">
            <summary>
            ImageSource represents a single, constant set of pixels at a certain size.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.#ctor(System.IO.Stream,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.ImageQuality)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="imageQuality">The image quality.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.#ctor(Telerik.Windows.Documents.Fixed.Model.Resources.EncodedImageData)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource"/> class.
            </summary>
            <param name="imageSourceInfo">The image source info.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.#ctor(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource"/> class.
            </summary>
            <param name="bitmapSource">The bitmap source.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.#ctor(System.Windows.Media.Imaging.BitmapSource,Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Export.ImageQuality)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource"/> class.
            </summary>
            <param name="bitmapSource">The bitmap source.</param>
            <param name="imageQuality">The image quality.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.GetEncodedImageData">
            <summary>
            Gets the encoded image data.
            </summary>
            <returns>The encoded image data.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.GetBitmapSource">
            <summary>
            Creates <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> from the image source instance.
            </summary>
            <returns>The <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> instance.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.Height">
            <summary>
            Gets image height.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.Width">
            <summary>
            Gets image width.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Resources.ImageSource.DecodeArray">
            <summary>
            Gets or sets the decode array which specifies a linear mapping of each component value to a number that would be appropriate as a component value in the color space of the image.
            </summary>
            <value>The decode array.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment">
            <summary>
            Represents text segment.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.CharacterSpacing">
            <summary>
            Gets or sets the character spacing.
            </summary>
            <value>The character spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.WordSpacing">
            <summary>
            Gets or sets the word spacing.
            </summary>
            <value>The word spacing.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.HorizontalScaling">
            <summary>
            Gets or sets the horizontal scaling.
            </summary>
            <value>The horizontal scaling.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.TextRise">
            <summary>
            Gets or sets the text rise.
            </summary>
            <value>The text rise.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.RenderingMode">
            <summary>
            Gets or sets the rendering mode.
            </summary>
            <value>The rendering mode.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.Fill">
            <summary>
            Gets or sets the fill color.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.Stroke">
            <summary>
            Gets or sets the stroke color.
            </summary>
            <value>The stroke color.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.StrokeThickness">
            <summary>
            Gets or sets the width of the stroke line.
            </summary>
            <value>The width of the stroke line.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.StrokeLineCap">
            <summary>
            Gets or sets the stroke line cap.
            </summary>
            <value>The stroke line cap.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.StrokeLineJoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
            <value>The miter limit.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Model.Text.TextFragment.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode">
            <summary>
            Represents the text rendering modes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.Fill">
            <summary>
            Represents the fill text rendering mode.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.Stroke">
            <summary>
            Represents the stroke text rendering mode.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.FillAndStroke">
            <summary>
            Represents the fill then stroke text rendering mode.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.None">
            <summary>
            Represents the none text rendering mode.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.FillAndAddToClippingPath">
            <summary>
            Represents the fill then add to current clipping path text rendering mode.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.StrokeAndAddToClippingPath">
            <summary>
            Represents the stroke then add to current clipping path text rendering mode.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.FillStrokeAndAddToClippingPath">
            <summary>
            Represents the fill, stroke then add to current clipping path text rendering mode.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Documents.Fixed.Model.Text.RenderingMode.AddToClippingPath">
            <summary>
            Represents the add to clipping path text rendering mode.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Converters.PdfImportSettingsTypeConverter">
            <summary>
            Represents format provider settings converter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Converters.PdfImportSettingsTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified
            type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Converters.PdfImportSettingsTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified
            type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.FormatProviders.Pdf.Converters.PdfImportSettingsTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of
            the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to
            use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper">
            <summary>
            Helper class dedicated to handle the logic for rendering the page content with a <see cref="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper.#ctor(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper"/> class.
            </summary>
            <param name="page">The page instance to be rendered.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper.RenderContentElements(Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer)">
            <summary>
            Renders the page content elements.
            </summary>
            <param name="renderer">The actual UI renderer implementation.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper.RenderContentElements(Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer,System.Windows.Rect)">
            <summary>
            Renders the page content elements located in the current viewport.
            </summary>
            <param name="renderer">The actual UI renderer implementation.</param>
            <param name="viewport">The current viewport.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper.RenderTiling(Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer,Telerik.Windows.Documents.Fixed.Model.ColorSpaces.TilingBase)">
            <summary>
            Renders tiling content elements.
            </summary>
            <param name="renderer">The actual UI renderer implementation.</param>
            <param name="tiling">The tiling instance.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper.RenderNormalAnnotationAppearance(Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer,Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation)">
            <summary>
            Renders the normal annotation appearance. This appearance is used when the annotation 
            is not interacting with the user. The appearance is also used for printing the annotation.
            </summary>
            <param name="renderer">The actual UI renderer implementation.</param>
            <param name="annotation">The annotation instance.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.FixedPageContentRenderingHelper.RenderDownAnnotationAppearance(Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer,Telerik.Windows.Documents.Fixed.Model.Annotations.Annotation)">
            <summary>
            Renders the down annotation appearance. This appearance is used when the pointing device 
            of the viewer is pressed or held down within the annotation’s active area. When not present, 
            the annotation normal appearance.
            </summary>
            <param name="renderer">The actual UI renderer implementation.</param>
            <param name="annotation">The annotation instance.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.GeometryRenderingContext.Geometry">
            <summary>
            The rendered geometry.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.GeometryRenderingContext.Properties">
            <summary>
            The geometry properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.GlyphRenderingContext.Outlines">
            <summary>
            The outlines.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.GlyphRenderingContext.OutlinesTransformation">
            <summary>
            The transformation that should be applied to the original outlines collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.GlyphRenderingContext.Properties">
            <summary>
            The geometry properties that should be applied to the glyphs geometry.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer.PushTransform(System.Windows.Media.Matrix)">
            <summary>
            Adds new transformation to the current rendering state.
            </summary>
            <param name="matrix">The matrix describing the transformation.</param>
            <returns>Disposable object which removes the given transformation once its Dispose method is called.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer.PushClipping(Telerik.Windows.Documents.Fixed.Model.Graphics.GeometryBase)">
            <summary>
            Adds new clipping to the current rendering state.
            </summary>
            <param name="geometry">The clipping geometry.</param>
            <returns>Disposable object which removes the given clipping once its Dispose method is called.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer.RenderText(Telerik.Windows.Documents.Fixed.Utilities.Rendering.TextRenderingContext)">
            <summary>
            Renders text from font properties when the font source is not embedded and cannot be provided from the system font files.
            </summary>
            <param name="renderingContext">The <see cref="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.TextRenderingContext"/> context.</param>        
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer.RenderGlyph(Telerik.Windows.Documents.Fixed.Utilities.Rendering.GlyphRenderingContext)">
            <summary>
            Renders glyph oulines geometry.
            </summary>
            <param name="renderingContext">The <see cref="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.GlyphRenderingContext"/> context.</param>        
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer.RenderGeometry(Telerik.Windows.Documents.Fixed.Utilities.Rendering.GeometryRenderingContext)">
            <summary>
            Renders geometry.
            </summary>
            <param name="renderingContext">The <see cref="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.GeometryRenderingContext"/> context.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.IFixedContentRenderer.RenderImage(Telerik.Windows.Documents.Fixed.Utilities.Rendering.ImageRenderingContext)">
            <summary>
            Renders image.
            </summary>
            <param name="renderingContext">The <see cref="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.ImageRenderingContext"/> context.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.ImageRenderingContext.ImageSource">
            <summary>
            The image source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.ImageRenderingContext.RenderingWidth">
            <summary>
            The width of the rendered image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.ImageRenderingContext.RenderingHeight">
            <summary>
            The height of the rendered image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.ImageRenderingContext.StencilColor">
            <summary>
            If not null this is the color that should be used when drawing monochrome image source.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Utilities.Rendering.PageLayoutHelper">
            <summary>
            A helper class dedicated for layout related calculations of a fixed page.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.PageLayoutHelper.GetVisibleContentBox(Telerik.Windows.Documents.Fixed.Model.Common.IFixedPage)">
            <summary>
            Gets the rectangle of the visible region of the page, i.e. the intersection 
            between the MediaBox and the CropBox properties of the page.
            </summary>
            <returns>The visible page content rectangle.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.PageLayoutHelper.GetActualWidth(Telerik.Windows.Documents.Fixed.Model.Common.IFixedPage)">
            <summary>
            Gets the width of the visible page content boundaries. This method considers the rotation of the page.
            </summary>
            <returns>The width of the rotated page content to be displayed.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Utilities.Rendering.PageLayoutHelper.GetActualHeight(Telerik.Windows.Documents.Fixed.Model.Common.IFixedPage)">
            <summary>
            Gets the height of the visible page content boundaries. This method considers the rotation of the page.
            </summary>
            <returns>The height of the rotated page content to be displayed.</returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Search.SearchResult">
            <summary>
            Represent search result.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Search.SearchResult.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Search.SearchResult.NotFound">
            <summary>
            Gets a default <see cref="T:Telerik.Windows.Documents.Fixed.Search.SearchResult"/> instance when there is no search result found.
            </summary>
            <value>The value represents a default <see cref="T:Telerik.Windows.Documents.Fixed.Search.SearchResult"/> instance when there is no search result found.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Search.SearchResult.Range">
            <summary>
            Gets a <see cref="T:Telerik.Windows.Documents.Fixed.Text.TextRange"/> object describing the start and end positions of the match.
            </summary>
            <value>The value represents a <see cref="T:Telerik.Windows.Documents.Fixed.Text.TextRange"/> object describing the start and end positions of the match.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Search.SearchResult.Result">
            <summary>
            Gets the result as text.
            </summary>
            <value>A string value representing the match.</value>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Search.TextSearch.FindPrevious(System.String,Telerik.Windows.Documents.Fixed.Search.TextSearchOptions,Telerik.Windows.Documents.Fixed.Text.TextRange)">
            <summary>
            Finds the previous position in range. The search is executed in backward - the StartPosition of the range is greater than the EndPosition of the range.
            </summary>
            <param name="text">The text to be searched.</param>
            <param name="options">The search options to apply for the current search.</param>
            <param name="range">The range of the search - StartPosition is greated than EndPosition.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions">
            <summary>
            Represent text search options.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions"/> class.
            </summary>
            <param name="caseSensitive">The case sensitive option.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions"/> class.
            </summary>
            <param name="caseSensitive">The case sensitive.</param>
            <param name="useRegularExpression">The use regular expression.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions"/> class.
            </summary>
            <param name="caseSensitive">The case sensitive.</param>
            <param name="useRegularExpression">The use regular expression.</param>
            <param name="wholeWordsOnly">The whole words only.</param>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.Default">
            <summary>
            Gets the default text search options.
            </summary>
            <value>The default.</value>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.UseRegularExpression">
            <summary>
            Gets or sets a value indicating whether a regular expression should be used for searching.
            </summary>
            <value><c>true</c> if regular expression should be used for searching; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.CaseSensitive">
            <summary>
            Gets or sets a value indicating whether the search should be case sensitive.
            </summary>
            <value><c>true</c> if the search should be case sensitive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Search.TextSearchOptions.WholeWordsOnly">
            <summary>
            Gets or sets a value indicating whether only whole words should be matched.
            </summary>
            <value><c>true</c> if only whole words should be matched; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Selection.TextSelection">
            <summary>
            Represents text selection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.GetSelectionGeometry(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Gets the selection geometry for given page.
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.SetSelectionStart(Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Sets the selection start.
            </summary>
            <param name="startPosition">The start position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.SetSelectionEnd(Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Sets the selection end.
            </summary>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.SetSelection(Telerik.Windows.Documents.Fixed.Text.TextPosition,Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Sets the selection.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.SelectAll">
            <summary>
            Selects the whole document.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.Clear">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.GetSelectedText">
            <summary>
            Gets the selected text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.GetSelectedTextAsync(System.Action{System.String})">
            <summary>
            Gets the selected text asynchronously. The callback is called on the Dispatcher.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.GetSelectedTextAsync">
            <summary>
            Gets the selected text async.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Selection.TextSelection.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Selection.TextSelection.SelectionChanging">
            <summary>
            Occurs when selection is changing.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Selection.TextSelection.SelectionChanged">
            <summary>
            Occurs when selection is changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Selection.TextSelection.StartPosition">
            <summary>
            Gets the start position of the selection.
            </summary>
            <value>The start position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Selection.TextSelection.EndPosition">
            <summary>
            Gets the end position of the selection.
            </summary>
            <value>The end position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Selection.TextSelection.IsEmpty">
            <summary>
            Checks if the selection is empty.
            </summary>
            <value>The is empty.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Text.TextPosition">
            <summary>
            Represents text position.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.#ctor(Telerik.Windows.Documents.Fixed.Model.RadFixedDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Text.TextPosition"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.#ctor(Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Text.TextPosition"/> class.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.#ctor(Telerik.Windows.Documents.Fixed.Model.RadFixedPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Text.TextPosition"/> class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.#ctor(Telerik.Windows.Documents.Fixed.Model.RadFixedPage,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Documents.Fixed.Text.TextPosition"/> class.
            </summary>
            <param name="page">The page.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.op_Equality(Telerik.Windows.Documents.Fixed.Text.TextPosition,Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Compares two text positions.
            </summary>
            <param name="left">Left text position.</param>
            <param name="right">Right text position.</param>
            <returns>Returns if the two positions are equal.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.op_Inequality(Telerik.Windows.Documents.Fixed.Text.TextPosition,Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Compares two text positions.
            </summary>
            <param name="left">Left text position.</param>
            <param name="right">Right text position.</param>
            <returns>Returns if the two positions are not equal.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.op_LessThan(Telerik.Windows.Documents.Fixed.Text.TextPosition,Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Compares two text positions.
            </summary>
            <param name="left">Left text position.</param>
            <param name="right">Right text position.</param>
            <returns>Returns if the left position is less than the right position.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.op_GreaterThan(Telerik.Windows.Documents.Fixed.Text.TextPosition,Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Compares two text positions.
            </summary>
            <param name="left">Left text position.</param>
            <param name="right">Right text position.</param>
            <returns>Returns if the left position is greater than the right position.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.op_LessThanOrEqual(Telerik.Windows.Documents.Fixed.Text.TextPosition,Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Compares two text positions.
            </summary>
            <param name="left">Left text position.</param>
            <param name="right">Right text position.</param>
            <returns>Returns if the left position is less than or equals to the right position.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.op_GreaterThanOrEqual(Telerik.Windows.Documents.Fixed.Text.TextPosition,Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Compares two text positions.
            </summary>
            <param name="left">Left text position.</param>
            <param name="right">Right text position.</param>
            <returns>Returns if the left position is greater than or equals to the right position.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal
            to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current
            <see cref="T:System.Object" />.</param>
            <returns>
            True if the specified <see cref="T:System.Object" /> is equal to the
            current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToPosition(Telerik.Windows.Documents.Fixed.Text.TextPosition)">
            <summary>
            Moves to position.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToNextPosition">
            <summary>
            Moves to next position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToPreviousPosition">
            <summary>
            Moves to previous position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToNextWord">
            <summary>
            Moves to next word.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToPreviousWord">
            <summary>
            Moves to previous word.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToCurrentWordStart">
            <summary>
            Moves to current word start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToCurrentWordEnd">
            <summary>
            Moves to current word end.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToLineStart">
            <summary>
            Moves to line start.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToLineEnd">
            <summary>
            Moves to line end.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveLineUp">
            <summary>
            Moves line up.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveLineDown">
            <summary>
            Moves line down.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToStartOfDocument">
            <summary>
            Moves to start of document.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.MoveToEndOfDocument">
            <summary>
            Moves to end of document.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.OnPositionChanging">
            <summary>
            Called when TextPosition is changing.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Documents.Fixed.Text.TextPosition.OnPositionChanged">
            <summary>
            Called when TextPosition is changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Text.TextPosition.PositionChanging">
            <summary>
            Occurs when TextPosition is changing.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Documents.Fixed.Text.TextPosition.PositionChanged">
            <summary>
            Occurs when TextPosition is changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Text.TextPosition.Index">
            <summary>
            Gets the index of the position.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Text.TextPosition.Page">
            <summary>
            Gets the page that contains the position.
            </summary>
            <value>The page.</value>
        </member>
        <member name="T:Telerik.Windows.Documents.Fixed.Text.TextRange">
            <summary>
            Represents text range.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Text.TextRange.Empty">
            <summary>
            Gets empty text range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Text.TextRange.StartPosition">
            <summary>
            Gets the start position.
            </summary>
            <value>The start position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Text.TextRange.EndPosition">
            <summary>
            Gets the end position.
            </summary>
            <value>The end position.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Text.TextRange.IsEmpty">
            <summary>
            Check if text range is empty.
            </summary>
            <value>Is empty.</value>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.TextRenderingContext.Text">
            <summary>
            The text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.TextRenderingContext.FontSize">
            <summary>
            The font size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.TextRenderingContext.FontProperties">
            <summary>
            The <see cref="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.TextRenderingContext.FontProperties"/> instance describing how to style the text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Documents.Fixed.Utilities.Rendering.TextRenderingContext.GeometryProperties">
            <summary>
            The geometry properties that should be applied to the text geometry.
            </summary>
        </member>
    </members>
</doc>
