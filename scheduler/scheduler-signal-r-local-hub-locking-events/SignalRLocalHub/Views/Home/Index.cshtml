<script src="@Url.Content("~/Scripts/jquery.signalR-2.0.2.min.js")"></script>
<script src="@Url.Content("~/signalr/hubs")"></script>

<script>

    var lockedRecords = {};
    var productHub = {};
    var hubStart = {};
    $(function () {
        productHub = $.connection.productHub;

        productHub.client.lockRecord = function (record) {
            debugger;
            lockedRecords[record.id] = true;
        };
       
        productHub.client.unlockRecord = function (record) {
            debugger;
            lockedRecords[record.id] = false;
        }
    
        hubStart = $.connection.hub.start();
    })
</script>


@(Html.Kendo().Notification()
      .Name("notification")
      .Width("100%")
      .Position(position => position.Top(0).Left(0))
)

@(Html.Kendo().Scheduler<SignalRLocalHub.Models.MeetingViewModel>()
    .Name("scheduler")
    .Date(new DateTime(2013, 6, 13))
    .StartTime(new DateTime(2013, 6, 13, 7, 00, 00))
    .Height(600)
    .Views(views =>
    {
        views.DayView();
        views.WeekView(weekView => weekView.Selected(true));
        views.MonthView();
        views.AgendaView();
    })
    .Events(e => {
        e.Save("onSave");
        e.Edit("onEdit");
        e.MoveStart("onMoveStart");
        e.MoveEnd("onMoveEnd");
        e.ResizeStart("onResizeStart");
        e.ResizeEnd("onResizeEnd");
        e.DataBound("onDataBound");
    })
    .Timezone("Etc/UTC")
    .Resources(resource =>
    {
        resource.Add(m => m.RoomID)
            .Title("Room")
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] { 
            new { Text = "Meeting Room 101", Value = 1, Color = "#6eb3fa" },
            new { Text = "Meeting Room 201", Value = 2, Color = "#f58a8a" } 
        });
        resource.Add(m => m.Attendees)
            .Title("Attendees")
            .Multiple(true)
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] { 
            new { Text = "Alex", Value = 1, Color = "#f8a398" },
            new { Text = "Bob", Value = 2, Color = "#51a0ed" },
            new { Text = "Charlie", Value = 3, Color = "#56ca85" } 
        });
    })
    .Editable(editable => editable.Update(false))
    .DataSource(dataSource => dataSource
        .SignalR()
        .Transport(tr => tr
            .Promise("hubStart")
            .Hub("productHub")
            .Client(c => c
                .Read("read")
                .Create("create")
                .Update("update")
                .Destroy("destroy"))
            .Server(s => s
                .Read("read")
                .Create("create")
                .Update("update")
                .Destroy("destroy")))
        .Schema(schema => schema
            .Model(model =>
            {
                model.Id(m => m.MeetingID);
                model.Field(m => m.MeetingID).Editable(false);
                model.Field("start", typeof(DateTime)).From("Start");
                model.Field("end", typeof(DateTime)).From("End");
                model.Field("title", typeof(string)).From("Title");
                model.Field("description", typeof(string)).From("Description");
                model.Field("recurrenceID", typeof(int)).From("RecurrenceID");
                model.Field("recurrenceRule", typeof(string)).From("RecurrenceRule");
                model.Field("recurrenceException", typeof(string)).From("RecurrenceException");
                model.Field("isAllDay", typeof(bool)).From("IsAllDay");
                model.Field("startTimezone", typeof(string)).From("StartTimezone");
                model.Field("endTimezone", typeof(string)).From("EndTimezone");
            })
        )
    )
)

<script>    

    function onDataBound(e) {

        this.view().content.on("click", ".k-event-delete", preventEvent);
    }
    $(function () {
        var scheduler = $("#scheduler").data("kendoScheduler");

        scheduler.element.on("dblclick", ".k-event", function (e) {
            e.preventDefault();

            var eventUid = $(this).closest(".k-event").attr(kendo.attr("uid"));
            var event = scheduler.occurrenceByUid(eventUid);

            if (!lockedRecords[event.id]) {
                $.connection.productHub.server.lockRecord(event.id);
                scheduler.view().trigger("edit", { uid: eventUid });
            }
            else {
                alert("Currently the event cannot be edited");
                return false;
            }
        });
    })

    function preventEvent(e) {
        var scheduler = $("#scheduler").data("kendoScheduler");
        var eventUid = $(this).closest(".k-event").attr(kendo.attr("uid"));
        var event = scheduler.occurrenceByUid(eventUid);

        if (lockedRecords[event.id]) {
            e.stopImmediatePropagation()
            alert("Currently the event cannot be deleted");
        }
    }

    function onEdit(e) {
        var model = e.event;
        e.container.find(".k-grid-cancel").click(function () {
            $.connection.productHub.server.unlockRecord(model.id);
        });
    }

    function onSave(e) {
        $.connection.productHub.server.unlockRecord(e.event.id);
    }

    function onMoveStart(e) {
        var scheduler = this;
        var event = e.event;
    

        if (!lockedRecords[event.id]) {
            $.connection.productHub.server.lockRecord(event.id);
        }
        else {
            alert("Currently the event cannot be moved");
            e.preventDefault();
        }
    }

    function onMoveEnd(e) {
        $.connection.productHub.server.unlockRecord(e.event.id);
    }

    function onResizeStart(e) {
        var scheduler = this;
        var event = e.event;


        if (!lockedRecords[event.id]) {
            $.connection.productHub.server.lockRecord(event.id);
        }
        else {
            alert("Currently the event cannot be resized");
            e.preventDefault();
        }
    }

    function onResizeEnd(e) {
        $.connection.productHub.server.unlockRecord(e.event.id);
    }
  
</script>

<br />
<div class="configuration-horizontal">
    <span class="configHead">Information</span>
    <p>
    This demo demonstrates real-time push-notifications from <a href="http://signalr.net/">SignalR</a>.
    </p>
    <p>
        To see the real-time updates:
    </p>
    <ol>
        <li>Open this page in another browser tab by clicking <a href="#" target="_new">here</a></li>
        <li>Create, update or destroy Scheduler events.</li>
    </ol>
</div>