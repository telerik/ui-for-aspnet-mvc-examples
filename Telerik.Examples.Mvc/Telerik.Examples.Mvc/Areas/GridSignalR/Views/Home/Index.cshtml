<script src="https://cdn.jsdelivr.net/npm/signalr@2.4.3/jquery.signalR.min.js"></script>

<script>
    var hubUrl = "https://demos.telerik.com/kendo-ui/service/signalr/hubs";
    var connection = $.hubConnection(hubUrl, { useDefaultPath: false });
    var hub = connection.createHubProxy("productHub");
    var hubStart = connection.start({ jsonp: true });
</script>

@(Html.Kendo().Notification()
          .Name("notification")
          .Width("100%")
          .Position(position => position.Top(0).Left(0))
    )
    @(Html.Kendo().Grid<Telerik.Examples.Mvc.Areas.GridSignalR.Models.ProductViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.ProductName);
            columns.Bound(p => p.UnitPrice).Width(140);
            columns.Bound(p => p.UnitsInStock).Width(80);
            columns.Bound(p => p.Discontinued).Width(80);
            columns.Command(command =>
            {
                command.Destroy();
            }).Width(110);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create();
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Pageable()
        .Navigatable()
        .Sortable()
        .Scrollable()
        .DataSource(dataSource => dataSource
            .SignalR()
            .AutoSync(true)
            .Events(events => events.Push(@<text>
                function(e) {
                    var notification = $("#notification").data("kendoNotification");
                    notification.success(e.type);
                }
            </text>))
            .PageSize(10)
            .Transport(tr => tr
                .Promise("hubStart")
                .Hub("hub")
                .Client(c => c
                    .Read("read")
                    .Create("create")
                    .Update("update")
                    .Destroy("destroy"))
                .Server(s => s
                    .Read("read")
                    .Create("create")
                    .Update("update")
                    .Destroy("destroy")))
            .Schema(schema => schema
                .Model(model =>
                {
                    model.Id(m => m.ProductID);
                    model.Field(m => m.ProductID).Editable(false);
                })
            )
        )
    )

<br />
<div class="configuration-horizontal">
    <span class="configHead">Information</span>
    <p>
        This demo demonstrates real-time push-notifications from <a href="http://signalr.net/">SignalR</a>.
    </p>
    <p>
        To see the real-time updates:
    </p>
    <ol>
        <li>Open this page in another browser window by clicking <a href="" target="_new">here</a></li>
        <li>Create, update or destroy grid items.</li>
    </ol>
</div>