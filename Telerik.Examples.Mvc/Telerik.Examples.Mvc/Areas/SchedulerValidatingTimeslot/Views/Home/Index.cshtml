@{
    ViewBag.Title = "Home Page";
}

@(Html.Kendo().Scheduler<Telerik.Examples.Mvc.Areas.SchedulerValidatingTimeslot.Models.MeetingViewModel>()
    .Name("scheduler")
    .Date(DateTime.Now)
    .StartTime(new DateTime(2013, 6, 13, 7, 00, 00))
    .Height(600)
    .Views(views =>
    {
        views.DayView();
        views.WeekView();
        views.MonthView(monthView => monthView.Selected(true));
        views.AgendaView();
    })
    .Timezone("Etc/UTC")
    .Resources(resource =>
    {
        resource.Add(m => m.RoomID)
            .Title("Room")
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] {
                    new { Text = "Meeting Room 101", Value = 1, Color = "#6eb3fa" },
                    new { Text = "Meeting Room 201", Value = 2, Color = "#f58a8a" }
            });
        resource.Add(m => m.RoomID)
            .Title("Room")
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] {
            new { Text = "Meeting Room 101", Value = 1, Color = "#6eb3fa" },
            new { Text = "Meeting Room 201", Value = 2, Color = "#f58a8a" }
        });
    })
    .DataSource(d => d
            .Model(m => {
                m.Id(f => f.MeetingID);
            })
        .Read("Meetings_Read", "Home")
        .Create(create => create.Action("Meetings_Create", "Home").Data("serialize"))
        .Destroy("Meetings_Destroy", "Home")
        .Update(update => update.Action("Meetings_Update", "Home").Data("serialize"))
        .Events(e => e.Error("onError"))
    )
)

<script type="text/javascript">
    function onError(e) {
        window.alert('New event is not allowed because of unavailable slots. Note also that Title and Description fields are mandatory.');
    }

    function serialize(data) {
        for (var property in data) {
            if ($.isArray(data[property])) {
                serializeArray(property, data[property], data);
            }
        }
    }

    function serializeArray(prefix, array, result) {
        for (var i = 0; i < array.length; i++) {
            if ($.isPlainObject(array[i])) {
                for (var property in array[i]) {
                    result[prefix + "[" + i + "]." + property] = array[i][property];
                }
            }
            else {
                result[prefix + "[" + i + "]"] = array[i];
            }
        }
    }
</script>
