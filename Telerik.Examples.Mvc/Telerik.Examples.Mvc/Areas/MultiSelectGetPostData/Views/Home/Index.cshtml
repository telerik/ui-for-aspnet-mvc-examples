@model Telerik.Examples.Mvc.Areas.MultiSelectGetPostData.Models.sampleModel

@{
	ViewBag.Title = "TEST";
}

<h2>TEST</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>sampleModel</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.SomeField, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.SomeField, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.SomeField, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ChosenItems, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@(Html.Kendo().MultiSelectFor(m => m.ChosenItems)
											.DataTextField("TheText")
											.DataValueField("TheValue")
											.DataSource(source =>
											{
												source.Read(read =>
												{
													read.Action("GetData", "Home");
												});
											})
											.Height(400)
				)
				@Html.ValidationMessageFor(model => model.ChosenItems, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="button" id="useOwnPost" value="Get Item On Client" class="k-button k-primary" />
				<script>
					$(document).ready(function () {
						$("#useOwnPost").click(function () {
							var items = $("#ChosenItems").data("kendoMultiSelect").value();
							alert(items);
							//use the data in your own request something like $.ajax({url: "myController", data: items}); which must, of course, match what the controller will expect
						});
					});
				</script>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="k-button k-primary" />
			</div>
		</div>
	</div>
}
