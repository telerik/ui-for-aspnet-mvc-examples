@(Html.Kendo().Scheduler<Telerik.Examples.Mvc.Areas.SchedulerServerFiltering.Models.TaskViewModel>()
	.Name("scheduler")
	.Date(DateTime.Now)
	.StartTime(new DateTime(2013, 6, 13, 7, 00, 00))
	.Height(600)
	.Views(views =>
	{
		views.DayView();
		views.WorkWeekView();
		views.WeekView();
		views.WeekView();
		views.MonthView(monthView => monthView.Selected(true));
		views.AgendaView();
	})
	.Timezone("Etc/UTC")
	.DataSource(d => d
		.Model(m => {
			m.Id(f => f.TaskID);
			m.Field(f => f.Title).DefaultValue("No title");
			m.Field(f => f.OwnerID).DefaultValue(1);
			m.Field(f => f.Title).DefaultValue("No title");
			m.RecurrenceId(f => f.RecurrenceID);
		})
		.ServerOperation(true)
		.Read(read => read.Action("Read", "Home").Data("getAdditionalData"))
		.Create("Create", "Home")
		.Destroy("Destroy", "Home")
		.Update("Update", "Home")
	)
)

<script>
    function getAdditionalData() {
        var scheduler = $("#scheduler").data("kendoScheduler");

        var timezone = scheduler.options.timezone;
        var startDate = kendo.timezone.convert(scheduler.view().startDate(), timezone, "Etc/UTC");
        var endDate = kendo.timezone.convert(scheduler.view().endDate(), timezone, "Etc/UTC");

        var startTime = 0;
        var endTime = 0;

        if (scheduler.view().startTime) {
            console.log('in')
            //optionally add startTime / endTime of the view
            startTime = kendo.date.getMilliseconds(scheduler.view().startTime());
            endTime = kendo.date.getMilliseconds(scheduler.view().endTime());
            endTime = endTime == 0 ? kendo.date.MS_PER_DAY : endTime;
        }

        var result = {
            Start: new Date(startDate.getTime() - (startDate.getTimezoneOffset() * kendo.date.MS_PER_MINUTE) + startTime),
            End: new Date(endDate.getTime() - (endDate.getTimezoneOffset() * kendo.date.MS_PER_MINUTE) + endTime)
        }

        return result;
    }
</script>

